{"version":3,"sources":["Components/Dialogs/Message/Message.module.css","img/1.png","utilits/validators/validators.js","Components/Profile/MyPosts/MyPosts.jsx","Components/Profile/MyPosts/Post/Post.module.css","Components/Common/Paginator.module.css","Components/Profile/MyPosts/Post/Post.jsx","Components/Profile/MyPosts/MyPosts.module.css","Components/Common/FormControls.module.css","Components/Dialogs/Dialog/Dialog.module.css","Components/Users/Users.module.css","Components/Header/Header.module.css","Components/Profile/MyPosts/ProfileInfo/ProfileStatusWithHooks.jsx","Components/Common/FormControls.js","Components/Profile/MyPosts/ProfileInfo/ProfileDataForm.jsx","Components/Profile/MyPosts/ProfileInfo/ProfileInfo.jsx","Components/Profile/MyPosts/MyPostsContainer.jsx","Components/Profile/Profile.jsx","API/API.js","Redux/profile-reducer.ts","Components/Navbar/Navbar.module.css","HOC/WithAuthRedirect.jsx","Components/Profile/ProfileContainer.jsx","Components/Music/Music.js","Components/Settings/Settings.js","Redux/messages-reducer.ts","Components/Dialogs/Dialog/Dialog.js","Components/Dialogs/Message/Message.js","Components/Dialogs/Dialogs.js","Components/Dialogs/DialogsContainer.js","Components/Navbar/Navbar.jsx","Components/Navbar/NavbarContainer.jsx","Redux/users-reducer.js","Components/Common/Paginator.jsx","Components/Users/Users.js","Redux/users-selectors.js","Components/Users/UsersContainer.jsx","Components/Header/Header.jsx","Components/Header/HeaderContainer.jsx","Components/Login/Login.jsx","Components/Login/LoginContainer.jsx","Redux/app-reducer.ts","App.js","HOC/WithSuspense.jsx","Redux/sidebar-reducer.js","Redux/redux-store.js","index.js","Redux/auth-reducer.ts","Components/Dialogs/Dialogs.module.css","img/Curve-Loading.gif","Components/Common/Preloader.jsx","Components/Profile/MyPosts/ProfileInfo/ProfileInfo.module.css"],"names":["module","exports","maxLength","layout","labelCol","span","wrapperCol","AddPostReduxForm","Input","TextArea","reduxForm","form","props","name","onFinish","onSubmit","Item","size","rules","required","message","offset","type","htmlType","MyPosts","React","memo","console","log","posts","profilePage","reverse","map","post","i","Post","text","like","likesCount","dispatch","profile","deletePost","className","s","postsBlock","formData","postText","addPost","useState","islike","addLike","item","src","photos","small","userPhoto","likeButton","onClick","ProfileStatusWithHooks","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","isOwner","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","FormControl","input","meta","child","hasError","error","touched","styles","formControl","children","Textarea","restProps","createField","placeholder","validators","component","Field","validate","ProfileDataReduxForm","handleSubmit","photoUpload","icon","UploadOutlined","target","files","length","savePhoto","Object","keys","contacts","key","ProfileData","discriptionBlock","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contacts","ProfileInfo","Preloader","editProfile","deactivateProfileEditMode","activateProfileEditMode","large","largeUserPhoto","id","initialValues","saveProfile","myPostsContainer","this","addPostActionCreator","Component","compose","connect","state","Profile","MyPostsContainer","instance","axios","withCredentials","headers","baseURL","userAPI","getUsers","currentPage","pageSize","get","then","response","data","unfollow","delete","follow","profileAPI","getProfile","userId","getStatus","put","photo","FormData","append","loginAPI","login","email","password","rememberMe","captcha","logout","securityAPI","getCaptchaUrl","authMe","ADD_POST","SET_USER_PROFILE","SET_USER_STATUS","STATUS_UPDATE","SAVE_PHOTO_SUCCESS","ACTIVATE_EDIT_MODE","DEACTIVATE_EDIT_MODE","DELETE_POST","initialState","profileEditMode","statusInProgress","getProfileTh","userID","a","setUserProfile","getUserStatusTh","setUserStatus","updateStatusTh","resultCode","savePhotoSuccess","getState","editModeOff","authReducer","editModeOn","newText","postID","profileReducer","action","isUpdate","filter","p","mapStateToPropsRedirect","isAuth","withAuthRedirect","RedirectComponent","to","ProfileContainer","match","params","refreshProfile","prevProps","prevState","snapshot","withRouter","Music","Settings","SEND_MESSAGE","dialogs","messages","messageText","messagesReducer","Dialog","path","activeClassName","active","Message","cn","messageContainer","justifyEnd","messageBox","backgroundBlue","colorWhite","Dialogs","editMessage","messages1","messagesPage","el","dialog","outerContainer","container","onKeyPress","event","sendMessage","sendButton","DialogsContainer","sendMessageActionCreator","Navbar","navbar","nav","sidebar","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_USERS_TOTAL_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_IN_PROGRESS","users","totalUsersCount","isFetching","followingInProgress","setCurrentPage","toggleIsFetching","toggleFollowingInProgress","isFollowing","usersReducer","u","followed","count","Paginator","totalItemsCount","portionSize","onPageChange","pagesCount","Math","ceil","pages","push","portionCount","portionNumber","setPortionNumber","leftPortionNumber","rightPortionNumber","paginator","selectedPage","pageNumber","Users","followButton","disabled","some","getUsersSuperSelector","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersAPI","getUsersTh","unfollowTh","followTh","totalCount","items","Header","header","loginBlock","Button","HeaderContainer","authUserProfile","LoginForm","remember","label","Password","valuePropName","captchaUrl","Login","values","username","LoginContainer","INITIALIZED_SUCCESS","initialized","appReducer","WrappedComponent","SuspendedChat","lazy","Suspense","fallback","Layout","Sider","Content","App","collapsed","toggle","setState","catchAllUnhandledError","alert","initializeApp","window","addEventListener","removeEventListener","trigger","collapsible","theme","mode","defaultSelectedKeys","UserOutlined","FormOutlined","TeamOutlined","style","padding","createElement","MenuUnfoldOutlined","MenuFoldOutlined","margin","minHeight","exact","render","UsersContainer","app","authMeTh","friendName","friendsName","sidebarReducer","redusers","combineReducers","formReducer","store","createStore","applyMiddleware","thunkMiddlware","ReactDOM","document","getElementById","SET_USER_DATA","SET_AUTH_PROFILE","GET_CAPTCHA_URL","setAuthUserData","payload","getCaptchaUrlSuccess","stopSubmit","_error","url","authProfile","preloader"],"mappings":"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","file":"static/js/main.1e908990.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageBox\":\"Message_messageBox__4LClL\",\"messageText\":\"Message_messageText__39AmX\",\"messageContainer\":\"Message_messageContainer__2UX_c\",\"sentText\":\"Message_sentText__1sj5p\",\"pl-10\":\"Message_pl-10__2xQKA\",\"pr-10\":\"Message_pr-10__3a0_y\",\"justifyStart\":\"Message_justifyStart__1FPrQ\",\"justifyEnd\":\"Message_justifyEnd__2dXGz\",\"colorWhite\":\"Message_colorWhite__1GeUd\",\"colorDark\":\"Message_colorDark__3ddiS\",\"backgroundBlue\":\"Message_backgroundBlue__IEBpt\",\"backgroundLight\":\"Message_backgroundLight__1Lq_W\"};","export default __webpack_public_path__ + \"static/media/1.a2446033.png\";","export const required = value => {\r\n    if (value) return undefined;\r\n\r\n    return \"Field is required\";\r\n}\r\n\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}\r\n\r\n","import React from 'react';\r\nimport Post from './Post/Post';\r\nimport s from './MyPosts.module.css'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utilits/validators/validators\";\r\n//import {Textarea} from \"../../Common/FormControls\";\r\nimport {Form, Input, InputNumber, Button} from 'antd';\r\nimport {deletePost} from \"../../../Redux/profile-reducer\";\r\n\r\nconst layout = {\r\n    labelCol: {\r\n        span: 8,\r\n    },\r\n    wrapperCol: {\r\n        span: 16,\r\n    },\r\n};\r\nconst {TextArea} = Input;\r\nconst maxLength100 = maxLengthCreator(100);\r\n\r\nconst AddPostForm = (props) => {\r\n    return <Form {...layout} name=\"nest-messages\" onFinish={props.onSubmit}>\r\n        <Form.Item name=\"post\" size=\"large\" rules={[\r\n            {\r\n                required: true,\r\n                message: 'Please input text!',\r\n            },\r\n        ]}>\r\n            <Input.TextArea/>\r\n        </Form.Item>\r\n        <Form.Item wrapperCol={{...layout.wrapperCol, offset: 6,\r\n            span: 100}}>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n                Отправить\r\n            </Button>\r\n        </Form.Item>\r\n    </Form>\r\n}\r\nconst AddPostReduxForm = reduxForm({\r\n    form: \"addPost\"\r\n})(AddPostForm);\r\n\r\nconst MyPosts = React.memo(props => {\r\n    console.log(\"RENDER\");\r\n    let posts = [...props.profilePage.posts]\r\n        .reverse()\r\n        .map((post, i) => <div key={i}><Post message={post.text}\r\n                            like={post.likesCount} dispatch={props.dispatch}\r\n                            profile={props.profile} deletePost={props.deletePost}/></div>)\r\n    if (!props.profile) {\r\n        return null\r\n    }\r\n    const onSubmit = (formData) => {\r\n        let postText = formData.post\r\n        props.addPost(postText);\r\n        formData.post = null;\r\n    }\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddPostReduxForm onSubmit={onSubmit}/>\r\n\r\n            <div className={s.posts}>\r\n                {posts}\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n});\r\n\r\nexport default MyPosts;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__qgLu_\",\"likeButton\":\"Post_likeButton__3j_qt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__TmYM-\",\"pageNumber\":\"Paginator_pageNumber__VTzaX\",\"selectedPage\":\"Paginator_selectedPage__3SkPi\"};","import React, {useState} from 'react';\r\nimport s from './Post.module.css';\r\n\r\nimport {Button,} from 'antd';\r\nimport {LikeOutlined} from '@ant-design/icons';\r\nimport userPhoto from \"../../../../img/1.png\";\r\n\r\nconst Post = (props) => {\r\n\r\n    let [islike, addLike] = useState(false)\r\n\r\n    if (!props.profile) {\r\n        return null\r\n    }\r\n    return (\r\n        <div className={s.item}>\r\n            <img src={props.profile.photos.small || userPhoto} className={s.userPhoto}/>\r\n            {props.message}\r\n            <div>\r\n                <span>like {props.like}</span>\r\n            </div>\r\n            {islike === false ?  <div className={s.likeButton}><button onClick={()=> addLike(true)} >Like</button></div>\r\n            : <div><button onClick={()=> addLike(false)} >like</button></div>}\r\n            <div><Button onClick={props.deletePost}> X </Button></div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Post;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__IKVWh\",\"posts\":\"MyPosts_posts__2281S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__2Y3MO\",\"error\":\"FormControls_error__3fwNV\",\"formSummaryError\":\"FormControls_formSummaryError__3uC7c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Dialog_item__1E3wH\",\"active\":\"Dialog_active__22o0r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__3V6cJ\",\"followButton\":\"Users_followButton__10njZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1Ya28\",\"loginBlock\":\"Header_loginBlock__AUhM_\"};","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    },[props.status]);\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n\r\n    }\r\n    const activateEditMode = () => {\r\n        if (props.isOwner) { setEditMode(true)}\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n    return (\r\n\r\n        <div>\r\n\r\n            {!editMode &&\r\n            <div>\r\n                <b>Status:   </b>\r\n                <span onDoubleClick={activateEditMode}>{props.status || \"------\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input autoFocus={true} onBlur={deactivateEditMode} onChange={onStatusChange}\r\n                       value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n        ;\r\n\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport styles from \"./FormControls.module.css\";\r\nimport {Field} from \"redux-form\";\r\n\r\nexport const FormControl = ({input, meta, child, ...props}) => {\r\n    const hasError = meta.error && meta.touched;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \" \")}>\r\n            <div>{props.children}</div>\r\n            <div>\r\n                {hasError && <span>{meta.error}</span>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl{...props}><textarea {...input}{...restProps} /></FormControl>\r\n}\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl{...props}><input {...input}{...restProps}/></FormControl>\r\n}\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name}\r\n               validate={validators} component={component}\r\n               {...props}\r\n        /> {text}\r\n    </div>\r\n)","import s from \"./ProfileInfo.module.css\";\r\nimport {Input} from \"antd\";\r\nimport {UploadOutlined} from '@ant-design/icons';\r\nimport React from \"react\";\r\nimport {createField, Textarea} from \"../../../Common/FormControls\";\r\nimport {reduxForm} from \"redux-form\";\r\n\r\nconst ProfileDataForm = ({handleSubmit, props, profile}) => {\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            props.savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n    return <div>\r\n        <div className={s.photoUpload}><Input icon={<UploadOutlined/>} type={\"file\"}\r\n                                              onChange={onMainPhotoSelected}/></div>\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <button onClick={() => {\r\n                }}>Save\r\n                </button>\r\n            </div>\r\n            <div>\r\n                <b>Full name:</b> {createField(\"Full name\", \"fullName\", [], \"input\")}\r\n            </div>\r\n            <div>\r\n                <b>В поисках работы:</b> {createField(\"\", \"lookingForAJob\", [], \"input\", {type: \"checkbox\"})}\r\n            </div>\r\n            <div>\r\n                <b>Мои навыки:</b> {createField(\"\", \"lookingForAJobDescription\", [], Textarea)}\r\n            </div>\r\n            <div>\r\n                <b>Обо мне:</b> {createField(\"\", \"aboutMe\", [], Textarea)}\r\n            </div>\r\n\r\n            <div>\r\n                <b>Контакты:</b> {Object.keys(profile.contacts).map(key => {\r\n                return <div>\r\n                    <b>{key}:</b> {createField(key, \"contacts.\" + key, [], \"input\")}\r\n                </div>\r\n            })}\r\n            </div>\r\n\r\n        </form>\r\n\r\n    </div>\r\n}\r\nconst ProfileDataReduxForm = reduxForm({form: \"edit-profile\"})(ProfileDataForm)\r\nexport default ProfileDataReduxForm","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../../Common/Preloader\";\r\n\r\nimport userPhoto from \"../../../../img/1.png\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport {Button, Input} from \"antd\";\r\nimport ProfileDataReduxForm from \"./ProfileDataForm\";\r\n\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <div>\r\n            <Preloader/>\r\n        </div>\r\n    }\r\n    const isEditMode = () => {\r\n        if (props.editMode) {\r\n            return props.deactivateProfileEditMode;\r\n        }\r\n        return props.activateProfileEditMode;\r\n    }\r\n    const onSubmit = (formData) => {\r\n        props.saveProfile(formData);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {props.isOwner &&\r\n            <div className={s.editProfile}>\r\n                <Button onClick={isEditMode()}> {props.editMode ? \"Cancel\" : \"Edit\"}</Button>\r\n            </div>\r\n            }\r\n            <div>\r\n                <img\r\n                    src={props.profile.photos.large || userPhoto}\r\n                    className={s.largeUserPhoto}/>\r\n                <ProfileStatusWithHooks id={props.id} status={props.status} updateStatus={props.updateStatus}\r\n                                        isOwner={props.isOwner}/>\r\n\r\n                {props.isOwner && props.editMode ?\r\n                    <ProfileDataReduxForm initialValues={props.profile} profile={props.profile} savePhoto={props.savePhoto} onSubmit={onSubmit}/> :\r\n                    <ProfileData profile={props.profile}/>\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst ProfileData = (props) => {\r\n    return <div className={s.discriptionBlock}>\r\n        <div>\r\n            <b>Full name:</b> {props.profile.fullName}\r\n        </div>\r\n        <div>\r\n            <b>looking For A Job:</b> {props.profile.lookingForAJob ? \"yes\" : \"no\"}\r\n        </div>\r\n        {props.profile.lookingForAJob &&\r\n        <div>\r\n            <b>My professional skills:</b> {props.profile.lookingForAJobDescription}\r\n        </div>\r\n        }\r\n        <div>\r\n            <b>About me:</b> {props.profile.aboutMe}\r\n        </div>\r\n        <div>\r\n            <b>Contacts:</b> {Object.keys(props.profile.contacts).map(key => {\r\n            return <Contacts key={key} contactTitle={key} contactValue={props.profile.contacts[key]}/>\r\n        })}\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\nconst Contacts = ({contactTitle, contactValue}) => {\r\n    return <div className={s.contacts}>\r\n        <b>{contactTitle}:</b> {contactValue}\r\n\r\n    </div>\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport {addPostActionCreator, deletePost, updateNewPostTextActionCreator} from \"../../../Redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\n\r\nclass myPostsContainer extends React.Component {\r\n\r\n    render() {\r\n        return <div>\r\n            <MyPosts profilePage={this.props.profilePage} profile={this.props.profile} deletePost={this.props.deletePost}\r\n                     addPost={this.props.addPostActionCreator}/>\r\n        </div>\r\n    }\r\n}\r\n\r\n    let mapStateToProps = (state) => {\r\n        return {\r\n            profilePage: state.profilePage,\r\n            profile: state.profilePage.profile\r\n        }\r\n    }\r\n    /*\r\n    let mapDispatchToProps = (dispatch) =>{\r\n        return {\r\n            addPost: (text) => {\r\n                let action = addPostActionCreator(text);\r\n                dispatch(action);\r\n            },\r\n        }\r\n    }*/\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,\r\n    {addPostActionCreator,\r\n        deletePost\r\n\r\n} ))(myPostsContainer);\r\n\r\n\r\n","import React from 'react';\r\nimport MyPosts from './MyPosts/MyPosts';\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from \"./MyPosts/ProfileInfo/ProfileInfo\";\r\nimport Post from \"./MyPosts/Post/Post\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div className=''>\r\n            <ProfileInfo profile={props.profile} id={props.id} status={props.status} updateStatus={props.updateStatus}\r\n                         isOwner={props.isOwner} savePhoto={props.savePhoto}\r\n                         activateProfileEditMode={props.activateProfileEditMode}\r\n                         deactivateProfileEditMode={props.deactivateProfileEditMode} editMode={props.editMode}\r\n                         saveProfile={props.saveProfile}\r\n            />\r\n            <MyPostsContainer/>\r\n        </div>\r\n    );\r\n}\r\nexport default Profile;","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n\r\n    withCredentials: true,\r\n    headers: {\r\n        'API-KEY': 'cc3bd8cc-4d54-4fd5-94a6-1a89051413f6'\r\n    },\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n\r\n});\r\n\r\n\r\n\r\nexport const userAPI = {\r\n    getUsers(currentPage, pageSize) {\r\n        return instance.get(`users?page=${currentPage} &count=${pageSize}`)\r\n            .then(response => response.data);\r\n    },\r\n\r\n    unfollow(id) {\r\n        return instance.delete(`follow/${id}`)\r\n    },\r\n    follow(id) {\r\n        return instance.post(`follow/${id}`)\r\n    }\r\n}\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId)\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {status: status})\r\n    },\r\n    savePhoto(photo) {\r\n        let formData = new FormData();\r\n        formData.append(\"image\", photo)\r\n        return instance.put(`profile/photo`, formData, {headers: {'Content-Type': 'multipart/form/data'}})\r\n    },\r\n    saveProfile(profile) {\r\n        return instance.put(`profile`, profile)\r\n    }\r\n}\r\nexport const loginAPI = {\r\n    login(email, password, rememberMe = false, captcha) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe, captcha});\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    },\r\n\r\n}\r\nexport const securityAPI ={\r\n    getCaptchaUrl(){\r\n        return instance.get(`/security/get-captcha-url`);\r\n    },\r\n}\r\n\r\nexport const authMe = () => {\r\n    return instance.get(`auth/me`)\r\n}","import {profileAPI} from \"../API/API\";\r\n\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_USER_STATUS = 'SET_USER_STATUS';\r\nconst STATUS_UPDATE = 'STATUS_UPDATE';\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\r\nconst ACTIVATE_EDIT_MODE = 'ACTIVATE_EDIT_MODE';\r\nconst DEACTIVATE_EDIT_MODE = 'DEACTIVATE_EDIT_MODE';\r\nconst DELETE_POST = 'DELETE_POST';\r\n\r\ntype PostsType={\r\n    id: number\r\n    text: string\r\n    likesCount: number | null\r\n}\r\ntype ContactsType={\r\n    github: string\r\n    vk: string\r\n    facebook: string\r\n    instagram: string\r\n    twitter: string\r\n    website: string\r\n    youtube: string\r\n    mainLink: string\r\n}\r\ntype PhotosType={\r\n    small: string\r\n    large: string\r\n}\r\ntype ProfileType={\r\n    userId: number\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string\r\n    fullName: string\r\n    contacts: ContactsType\r\n    photos: PhotosType\r\n}\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, text: \"Hello world\", likesCount: 12},\r\n        {id: 2, text: \"This is my first post\", likesCount: 10},\r\n\r\n    ] as Array<PostsType>,\r\n    profile: null as ProfileType | null,\r\n    status: \"\",\r\n    profileEditMode: false as boolean,\r\n    statusInProgress: false as boolean\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst profileReducer = (state = initialState, action: any): InitialStateType => {\r\n\r\n\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts,\r\n                    {id: 6, text: action.newText, likesCount: 0}]\r\n            }\r\n\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        case SET_USER_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        case STATUS_UPDATE:\r\n            return {\r\n                ...state,\r\n                statusInProgress: action.isUpdate\r\n            }\r\n        case SAVE_PHOTO_SUCCESS:\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.photos} as ProfileType\r\n            }\r\n        case ACTIVATE_EDIT_MODE:\r\n            return {\r\n                ...state,\r\n                profileEditMode: true\r\n            }\r\n        case DEACTIVATE_EDIT_MODE:\r\n            return {\r\n                ...state,\r\n                profileEditMode: false\r\n            }\r\n        case DELETE_POST:\r\n            return {\r\n                ...state, posts: {...state.posts.filter(p=> p.id != action.postID)}\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const getProfileTh = (userID: number) => async (dispatch: any) => {\r\n    let response = await profileAPI.getProfile(userID)\r\n        dispatch(setUserProfile(response.data));\r\n\r\n}\r\nexport const getUserStatusTh = (userId: number) => async (dispatch: any) => {\r\n  let response = await profileAPI.getStatus(userId)\r\n\r\n            dispatch(setUserStatus(response.data));\r\n\r\n}\r\nexport const updateStatusTh = (status: string) => async (dispatch: any) => {\r\n    let response = await profileAPI.updateStatus(status)\r\n\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setUserStatus(status));\r\n            }\r\n\r\n}\r\n\r\nexport const savePhoto = (photo: any) => (dispatch: any) => {\r\n    let response = profileAPI.savePhoto(photo)\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(savePhotoSuccess(response.data.data.photos));\r\n            }\r\n}\r\n\r\nexport const saveProfile = (data: ProfileType) => (dispatch: any, getState: any) => {\r\n    dispatch(editModeOff());\r\n   const userID = getState().authReducer.id\r\n    let response = profileAPI.saveProfile(data)\r\n\r\n            if (response.data.resultCode === 0) {\r\n                let response = profileAPI.getProfile(userID)\r\n                    dispatch(setUserProfile(response.data));\r\n            }\r\n}\r\nexport const activateProfileEditMode = () => (dispatch: any) => {\r\n\r\n    dispatch(editModeOn());\r\n}\r\nexport const deactivateProfileEditMode = () => (dispatch: any) => {\r\n    dispatch(editModeOff());\r\n}\r\n\r\ntype AddPostActionType = {\r\n    type: typeof  ADD_POST\r\n    newText: string\r\n}\r\nexport const addPostActionCreator = (text: string): AddPostActionType => ({type: ADD_POST, newText: text});\r\n\r\ntype SetUserProfile = {\r\n    type: typeof SET_USER_PROFILE\r\n    profile: ProfileType\r\n}\r\nexport const setUserProfile = (profile: ProfileType): SetUserProfile => ({type: SET_USER_PROFILE, profile});\r\n\r\ntype SetUserStatus = {\r\n    type: typeof SET_USER_STATUS\r\n    status: string\r\n}\r\nexport const setUserStatus = (status: string): SetUserStatus => ({type: SET_USER_STATUS, status});\r\n\r\ntype SavePhotoSuccessType = {\r\n    type: typeof SAVE_PHOTO_SUCCESS\r\n    photos: PhotosType\r\n}\r\nexport const savePhotoSuccess = (photos: PhotosType): SavePhotoSuccessType => ({type: SAVE_PHOTO_SUCCESS, photos});\r\n\r\ntype EditModeOn = {\r\n    type: typeof ACTIVATE_EDIT_MODE\r\n}\r\nexport const editModeOn = (): EditModeOn => ({type: ACTIVATE_EDIT_MODE});\r\n\r\ntype EditModeOff = {\r\n    type: typeof DEACTIVATE_EDIT_MODE\r\n}\r\nexport const editModeOff = (): EditModeOff => ({type: DEACTIVATE_EDIT_MODE});\r\n\r\ntype DeletePostType ={\r\n    type: typeof DELETE_POST\r\n    postID: number\r\n}\r\nexport const deletePost = (postID: number): DeletePostType => ({ type:DELETE_POST, postID })\r\n\r\n\r\nexport default profileReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1BCBQ\",\"item\":\"Navbar_item__3RZJI\",\"active\":\"Navbar_active__3bnlt\",\"navbar\":\"Navbar_navbar__2QnsP\"};","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsRedirect = (state) => {\r\n    return {\r\n        isAuth: state.authReducer.isAuth\r\n    }\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'}/>;\r\n            return <Component {...this.props}/>;\r\n        }\r\n    }\r\n\r\n let   ConnectedRedirectComponent = connect(mapStateToPropsRedirect)(RedirectComponent);\r\n    return ConnectedRedirectComponent;\r\n}","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport * as axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    activateProfileEditMode, deactivateProfileEditMode, deletePost,\r\n    getProfileTh,\r\n    getUserStatusTh,\r\n    savePhoto, saveProfile,\r\n    setUserProfile,\r\n    updateStatusTh\r\n} from \"../../Redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../HOC/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    refreshProfile() {\r\n        let userID = this.props.match.params.userID;\r\n        if (!userID) {\r\n            userID = this.props.id;\r\n        }\r\n        this.props.getProfileTh(userID);\r\n        this.props.getUserStatusTh(userID);\r\n        console.log(userID)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userID != prevProps.match.params.userID) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile {...this.props} profile={this.props.profile} id={this.props.id} status={this.props.status}\r\n                         updateStatus={this.props.updateStatusTh} isOwner={!this.props.match.params.userID}\r\n                         savePhoto={this.props.savePhoto} activateProfileEditMode={this.props.activateProfileEditMode}\r\n                         deactivateProfileEditMode={this.props.deactivateProfileEditMode}\r\n                         editMode={this.props.editMode} saveProfile={this.props.saveProfile}\r\n                         deletePost={this.props.deletePost}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    id: state.authReducer.id,\r\n    status: state.profilePage.status,\r\n    editMode: state.profilePage.profileEditMode\r\n\r\n});\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        setUserProfile,\r\n        getProfileTh,\r\n        getUserStatusTh,\r\n        updateStatusTh,\r\n        savePhoto,\r\n        activateProfileEditMode,\r\n        deactivateProfileEditMode,\r\n        saveProfile\r\n    }),\r\n    withAuthRedirect,\r\n    withRouter,\r\n)(ProfileContainer);","import React from 'react';\r\nimport s from './Music.module.css';\r\n\r\nconst Music = (props) =>{\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    );\r\n}\r\nexport default Music;","import React from 'react';\r\nimport s from './Settings.module.css';\r\n\r\nconst Settings = (props) =>{\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    );\r\n}\r\nexport default Settings;","const SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\ntype DialogsType ={\r\n    id: number\r\n    name: string\r\n}\r\ntype MessagesType ={\r\n    id: number\r\n    message: string\r\n}\r\n\r\nlet initialState = {\r\n\r\n    dialogs: [\r\n        {id: 1, name: \"Ruslan\"},\r\n        {id: 2, name: \"Ihor\"},\r\n        {id: 3, name: \"Diana\"}\r\n    ] as Array<DialogsType>,\r\n    messages: [\r\n\r\n    ]as Array<MessagesType>,\r\n    messageText: \"\"\r\n\r\n}\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst messagesReducer = (state = initialState, action: any): InitialStateType => {\r\n\r\n\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            return {\r\n                ...state,\r\n                messageText: \"\",\r\n                messages: [...state.messages,\r\n                    {id: 1,\r\n                    message: action.messageText\r\n                    }]\r\n            }\r\n        default:   return state;\r\n    }\r\n\r\n}\r\ntype sendMessageActionCreatorType = {\r\n    type: typeof SEND_MESSAGE\r\n    messageText: string\r\n}\r\nexport const sendMessageActionCreator = (text: string): sendMessageActionCreatorType => ({type : SEND_MESSAGE, messageText: text})\r\nexport default messagesReducer;","import React from 'react';\r\nimport s from './Dialog.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Dialog = (props) => {\r\n    let path= \"/dialogs/\" + props.id;\r\n    return (\r\n        <div className={s.item}>\r\n           <NavLink to={path} activeClassName={s.active}> {props.name}</NavLink>\r\n        </div>\r\n\r\n    );\r\n}\r\nexport default Dialog;","import React from 'react';\r\nimport s from './Message.module.css';\r\nimport cn from \"classnames\";\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={cn (s.messageContainer, s.justifyEnd)}>\r\n            <div className={cn (s.messageBox, s.backgroundBlue)}>\r\n                <p className={cn(s.messageText, s.colorWhite)}>{props.messages}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Message;","import React, {useState} from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport Dialog from \"./Dialog/Dialog\";\r\nimport Message from \"./Message/Message\";\r\nimport ScrollToBottom from 'react-scroll-to-bottom';\r\nimport {Button} from \"antd\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n\r\n    let [message, editMessage] = useState('');\r\n    //   let [messages, sendMessage] = useState([{message1: ''}]);\r\n    //   console.log(messages)\r\n\r\n    let messages1 = props.messagesPage.messages.map\r\n    ((el, i) => (<div key={i}><Message messages={el.message}/></div>));\r\n\r\n    let dialogs = props.messagesPage.dialogs.map(dialog =>\r\n        (<Dialog name={dialog.name} activeClassName={s.active} id={dialog.id}/>));\r\n    const nullMessage = () => {\r\n        editMessage(null)\r\n    }\r\n    return (\r\n\r\n        <div className={s.outerContainer}>\r\n            {/* <div className={s.dialogs}>\r\n                <div className={s.dialogsItem}>\r\n                    {dialogs}\r\n                </div>\r\n            </div>*/}\r\n            <div className={s.container}>\r\n                <ScrollToBottom  className={s.messages}>\r\n                    {messages1}\r\n                </ScrollToBottom >\r\n                <form className={s.form}>\r\n                    <input className={s.input} placeholder={\"Сообщение . . .\"}\r\n                           value={message}\r\n                           type={\"text\"}\r\n                           onKeyPress={event => event.key === 'Enter'\r\n                               && message  ? (event) => props.sendMessage(message)\r\n                                   && editMessage(\"\") : null }\r\n                           onChange={(event) => editMessage(event.target.value)}/>\r\n\r\n                        <button className={s.sendButton}\r\n                                onClick={message  ? (event) => props.sendMessage(message)\r\n                                    && editMessage(\"\") : null }>\r\n                            Send\r\n                        </button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {messageTextActionCreator, sendMessageActionCreator} from \"../../Redux/messages-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../HOC/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport MyPosts from \"../Profile/MyPosts/MyPosts\";\r\n\r\nclass DialogsContainer extends React.Component {\r\n    render() {\r\n        return <div>\r\n            <Dialogs messagesPage={this.props.messagesPage} sendMessage={this.props.sendMessageActionCreator}/>\r\n        </div>\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        messagesPage: state.messagesPage,\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {sendMessageActionCreator}),\r\n\r\n)(DialogsContainer);","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\nconst Navbar = (props) => {\r\n\r\n    return (\r\n        <div className={s.navbar}>\r\n            <nav className={s.nav}>\r\n\r\n                <div className={s.item}>\r\n                    <NavLink to=\"/news\" activeClassName={s.active}> Новости</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to=\"/music\" activeClassName={s.active}>Музыка</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to=\"/settings\" activeClassName={s.active}> Настройки</NavLink>\r\n                </div>\r\n\r\n            </nav>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport Navbar from \"./Navbar\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n        sidebar: state.sidebar\r\n    }\r\n}\r\nlet mapDispatchToProps = () => {\r\n    return{\r\n\r\n    }\r\n}\r\n\r\nconst NavbarContainer = connect(mapStateToProps, mapDispatchToProps)(Navbar);\r\n\r\nexport default NavbarContainer;\r\n","import {userAPI} from \"../API/API\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_USERS_TOTAL_COUNT = 'SET_USERS_TOTAL_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_IN_PROGRESS = 'TOGGLE_IS_FOLLOWING_IN_PROGRESS';\r\n\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [],\r\n}\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n\r\n    switch (action.type) {\r\n        case FOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return {...u, followed: true};\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        }\r\n        case UNFOLLOW : {\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        }\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_USERS_TOTAL_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_IN_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFollowing ?\r\n                    [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}\r\nexport const follow = (userID) => ({type: FOLLOW, userID});\r\nexport const unfollow = (userID) => ({type: UNFOLLOW, userID});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setUsersTotalCount = (totalCount) => ({type: SET_USERS_TOTAL_COUNT, count: totalCount});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleFollowingInProgress = (isFollowing, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_IN_PROGRESS,\r\n    isFollowing,\r\n    userId\r\n});\r\nexport const getUsersTh= (currentPage, pageSize) => (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n    dispatch(setCurrentPage(currentPage));\r\n    userAPI.getUsers(currentPage, pageSize).then(data => {\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setUsersTotalCount(data.totalCount));\r\n    })\r\n}\r\nexport const unfollowTh = (userId) => (dispatch) =>{\r\n    dispatch(toggleFollowingInProgress(true, userId));\r\n    userAPI.unfollow(userId).then(response => {\r\n        if (response.data.resultCode == 0) {\r\n            dispatch(unfollow(userId));\r\n        }\r\n        dispatch(toggleFollowingInProgress(false, userId));\r\n    });\r\n}\r\nexport const followTh = (userId) => (dispatch) =>{\r\n    dispatch(toggleFollowingInProgress(true, userId));\r\n    userAPI.follow(userId).then(response => {\r\n        if (response.data.resultCode == 0) {\r\n            dispatch(follow(userId));\r\n        }\r\n        dispatch(toggleFollowingInProgress(false, userId));\r\n    });\r\n}\r\nexport default usersReducer;","import React, {useState} from 'react';\r\nimport s from \"./Paginator.module.css\";\r\nimport cn from \"classnames\";\r\nimport {Button} from \"antd\";\r\n\r\n\r\nlet Paginator = ({totalItemsCount, portionSize, currentPage, onPageChange}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / portionSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount/portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionNumber = portionNumber * portionSize;\r\n\r\n    return <>\r\n        <div className={s.paginator}>\r\n\r\n          {portionNumber > 1 &&\r\n        <Button onClick={()=> {setPortionNumber (1)}}>First</Button>}\r\n        {portionNumber > 1 &&\r\n        <Button onClick={()=> {setPortionNumber (portionNumber- 1)}}>Previous</Button>}\r\n        {pages.filter(p => p >= leftPortionNumber && p<= rightPortionNumber)\r\n            .map(p => {\r\n            return<Button className={\r\n                cn({[s.selectedPage]: currentPage === p}, s.pageNumber)}\r\n                           key={p}\r\n                           onClick={(e) => {\r\n                               onPageChange(p)\r\n                           }}\r\n            >{p}</Button>\r\n        })}\r\n        {portionCount > portionNumber &&\r\n        <Button onClick={()=>{setPortionNumber(portionNumber+1)}}>Next</Button>}\r\n        {portionCount > portionNumber &&\r\n        <Button onClick={()=>{setPortionNumber(portionCount)}}>Last</Button>}\r\n\r\n    </div>\r\n    </>\r\n}\r\nexport default Paginator;","import s from \"./Users.module.css\";\r\nimport userPhoto from \"../../img/1.png\";\r\nimport React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Paginator from \"../Common/Paginator\";\r\nimport 'antd/dist/antd.css';\r\nimport {Button} from 'antd';\r\n\r\n\r\nconst Users = (props) => {\r\n\r\n    return <div>\r\n        <div>\r\n            <Paginator totalItemsCount={props.totalUsersCount} onPageChange={props.onPageChange}\r\n                       currentPage={props.currentPage}\r\n                       portionSize={props.pageSize}/>\r\n        </div>\r\n\r\n        {props.users.map(u => <div key={u.id}>\r\n                    <span>\r\n                        <div>\r\n                            <NavLink to={\"/profile/\" + u.id}>\r\n                            <img src={u.photos.small != null ? u.photos.small : userPhoto} className={s.userPhoto}/>\r\n                        </NavLink>\r\n                            </div>\r\n                        <div className={s.followButton}>\r\n                            {u.followed ?\r\n                                <Button type=\"primary\" size=\"middle\"\r\n                                        disabled={props.followingInProgress.some(id => id === u.id)}\r\n                                        onClick={() => {\r\n                                            props.unfollow(u.id);\r\n                                        }}> Unfollow </Button> :\r\n\r\n                                <Button type=\"primary\" size=\"middle\"\r\n                                        disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => {\r\n                                    props.follow(u.id);\r\n\r\n\r\n                                }}>Follow</Button>}\r\n                        </div>\r\n                    </span>\r\n            <span>\r\n                        <span>\r\n                            <div>{u.name}</div>\r\n                            <div>{u.status}</div>\r\n                        </span>\r\n            </span>\r\n        </div>)\r\n        }\r\n    </div>\r\n}\r\nexport default Users;","import {createSelector} from \"reselect\";\r\n\r\nexport const getUsers = (state) => {\r\n   return  state.usersPage.users;\r\n}\r\nexport const getUsersSuperSelector = createSelector(getUsers, (users) => {\r\n   return  users;\r\n})\r\n\r\n\r\nexport const getPageSize = (state) => {\r\n   return  state.usersPage.pageSize;\r\n}\r\nexport const getTotalUsersCount = (state) => {\r\n   return  state.usersPage.totalUsersCount;\r\n}\r\nexport const getCurrentPage = (state) => {\r\n   return  state.usersPage.currentPage;\r\n}\r\nexport const getIsFetching = (state) => {\r\n   return  state.usersPage.isFetching;\r\n}\r\nexport const getFollowingInProgress = (state) => {\r\n   return  state.usersPage.followingInProgress;\r\n}\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow, followTh, getUsersTh,\r\n    setCurrentPage,\r\n    unfollow, unfollowTh\r\n} from \"../../Redux/users-reducer\";\r\n\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../Common/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../HOC/WithAuthRedirect\";\r\nimport {\r\n    getCurrentPage, getFollowingInProgress, getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount, getUsers, getUsersSuperSelector,\r\n} from \"../../Redux/users-selectors\";\r\n\r\nclass UsersAPI extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsersTh(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChange = (pageNumber) => {\r\n        this.props.getUsersTh(pageNumber, this.props.pageSize);\r\n    }\r\n\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChange={this.onPageChange}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   users={this.props.users}\r\n                   isFetching={this.props.isFetching}\r\n                   followingInProgress={this.props.followingInProgress}\r\n                   toggleFollowingInProgress={this.props.toggleFollowingInProgress}\r\n                   unfollow={this.props.unfollowTh}\r\n                   follow={this.props.followTh}\r\n            /></ >\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsersSuperSelector(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n    }\r\n}\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps,\r\n        {\r\n            follow, unfollow, setCurrentPage, getUsersTh, unfollowTh, followTh\r\n        }))(UsersAPI);\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Preloader from \"../Common/Preloader\";\r\nimport {Button} from \"react-bootstrap\";\r\n\r\nconst Header = (props) => {\r\n\r\n    return (\r\n        <header className={s.header}>\r\n        <img src='https://logoza.ru/img/rock.png' />\r\n        <div className={s.loginBlock}>\r\n            {props.isAuth? <div> {props.login} - <Button onClick={props.logout}>Log out</Button></div>\r\n            :<NavLink to={'/login'}>Login</NavLink>}\r\n        </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {authMeTh, logout, setAuthUserData, setAuthUserProfile} from \"../../Redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    login: state.authReducer.login,\r\n    isAuth: state.authReducer.isAuth,\r\n    authUserProfile: state.authReducer.authUserProfile,\r\n\r\n});\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from 'react'\r\nimport {Redirect} from \"react-router-dom\";\r\nimport 'antd/dist/antd.css';\r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\n\r\n\r\nconst LoginForm = (props) => {\r\n\r\n    return (<div>\r\n        <Form\r\n            name=\"basic\"\r\n            labelCol={{\r\n                span: 3,\r\n            }}\r\n            wrapperCol={{\r\n                span: 10,\r\n            }}\r\n            initialValues={{\r\n                remember: true,\r\n            }}\r\n            onFinish={props.onSubmit}\r\n\r\n\r\n        >\r\n\r\n            <Form.Item\r\n                label=\"Username\"\r\n                name=\"username\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input your username!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input/>\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                label=\"Password\"\r\n                name=\"password\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input your password!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input.Password/>\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                name=\"remember\"\r\n                valuePropName=\"checked\"\r\n                wrapperCol={{\r\n                    offset: 8,\r\n                    span: 16,\r\n                }}\r\n            >\r\n                <Checkbox>Remember me</Checkbox>\r\n            </Form.Item>\r\n            {props.captchaUrl && <Form.Item\r\n                wrapperCol={{\r\n                    offset: 8,\r\n                    span: 16,\r\n                }}\r\n            >\r\n                <img src={props.captchaUrl}/>\r\n            </Form.Item>}\r\n            {props.captchaUrl && <Form.Item\r\n                label=\"captcha\"\r\n                name=\"captcha\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input Captcha!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input/>\r\n            </Form.Item>\r\n            }\r\n\r\n            <Form.Item\r\n                wrapperCol={{\r\n                    offset: 8,\r\n                    span: 16,\r\n                }}\r\n            >\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                    Submit\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n\r\n    </div>\r\n        /*<form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder={\"Email\"} name={\"email\"} component={Input} validate={[required, maxLength20]}/>\r\n            </div>\r\n            <div>\r\n                <Field placeholder={\"Password\"} name={\"password\"} type={\"password\"} component={Input}\r\n                       validate={[required, maxLength20]}/>\r\n            </div>\r\n            <div>\r\n                <Field type={\"checkbox\"} name={\"rememberMe\"} component={Input}/> Remember me\r\n            </div>\r\n            { props.error && <div className={style.formSummaryError}>\r\n                {props.error}\r\n            </div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>*/\r\n    )\r\n};\r\n/*const LoginReduxForm = reduxForm({\r\n    form: \"login\"\r\n})(LoginForm);*/\r\nconst Login = (props) => {\r\n    const onSubmit = (values) => {\r\n        props.login(values.username, values.password, values.remember, values.captcha);\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    } else {\r\n        return <div>\r\n            <h1>Login</h1>\r\n            <LoginForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react'\r\nimport Login from \"./Login\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../Redux/auth-reducer\";\r\n\r\n\r\nclass LoginContainer extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div><Login login={this.props.login} isAuth={this.props.isAuth} captchaUrl={this.props.captchaUrl}/></div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.authReducer.isAuth,\r\n    captchaUrl: state.authReducer.captchaUrl,\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {login}),\r\n)(LoginContainer);","import {authMeTh} from \"./auth-reducer\";\r\n\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nexport type InitialStateType={\r\n    initialized: boolean,\r\n\r\n}\r\n\r\nlet initialState: InitialStateType = {\r\n    initialized: false,\r\n\r\n}\r\nconst appReducer = (state = initialState, action: any): InitialStateType => {\r\n\r\n\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n               initialized: true,\r\n\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}\r\n type InitializedSuccessActionType={\r\n    type: typeof INITIALIZED_SUCCESS\r\n}\r\nexport const initializedSuccess = (): InitializedSuccessActionType => ({\r\n    type: INITIALIZED_SUCCESS,\r\n});\r\n\r\nexport const initializeApp = () => (dispatch: any) => {\r\n    let promise = dispatch(authMeTh());\r\npromise.then(()=>{\r\n    dispatch(initializedSuccess());\r\n});\r\n\r\n\r\n}\r\nexport default appReducer;","import React from 'react';\nimport './App.css';\nimport ProfileContainer from './Components/Profile/ProfileContainer';\nimport News from \"./Components/News/News\";\nimport {NavLink, Route, withRouter, Switch, Redirect} from \"react-router-dom\";\nimport Music from \"./Components/Music/Music\";\nimport Settings from \"./Components/Settings/Settings\";\nimport DialogsContainer from \"./Components/Dialogs/DialogsContainer\";\nimport NavbarContainer from \"./Components/Navbar/NavbarContainer\";\nimport UsersContainer from \"./Components/Users/UsersContainer\";\nimport HeaderContainer from \"./Components/Header/HeaderContainer\";\nimport LoginContainer from \"./Components/Login/LoginContainer\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./Redux/app-reducer\";\nimport Preloader from \"./Components/Common/Preloader\";\nimport Navbar from \"./Components/Navbar/Navbar\";\nimport 'antd/dist/antd.css';\nimport {Layout, Menu, Button} from 'antd';\nimport {\n    MenuUnfoldOutlined,\n    MenuFoldOutlined,\n    UserOutlined,\n    FormOutlined,\n    TeamOutlined,\n} from '@ant-design/icons';\nimport s from \"./Components/Navbar/Navbar.module.css\";\nimport {logout} from \"./Redux/auth-reducer\";\nimport {withSuspense} from \"./HOC/WithSuspense\";\n\n\nconst Chat = React.lazy(()=>import('./Components/Chat/ChatContainer'))\n\nconst SuspendedChat = withSuspense(Chat)\n\nconst {Header, Sider, Content} = Layout;\n\nclass App extends React.Component {\n    state = {\n        collapsed: false,\n        size: 'large',\n    };\n\n    toggle = () => {\n        this.setState({\n            collapsed: !this.state.collapsed,\n        });\n    };\n    catchAllUnhandledError = () => {\n        alert(\"Some Error\");\n    }\n\n    componentDidMount() {\n        this.props.initializeApp();\n        window.addEventListener(\"unhandledrejection\", this.catchAllUnhandledError);\n        console.log(this.props.userID)\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"unhandledrejection\", this.catchAllUnhandledError);\n    }\n\n    render() {\n        const {size} = this.state;\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n        return <>\n            <Layout>\n                <Sider trigger={null} collapsible collapsed={this.state.collapsed}>\n                    <div className=\"logo\"/>\n                    <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\n                        <Menu.Item key=\"1\" icon={<UserOutlined/>}>\n                            <NavLink to=\"/profile\" activeClassName={s.active}>Профиль</NavLink>\n                        </Menu.Item>\n                        <Menu.Item key=\"2\" icon={<FormOutlined/>}>\n                            <NavLink to=\"/dialogs\" activeClassName={s.active}>Сообщения</NavLink>\n                        </Menu.Item>\n                        <Menu.Item key=\"3\" icon={<FormOutlined/>}>\n                            <NavLink to=\"/chat\" activeClassName={s.active}>Чат</NavLink>\n                        </Menu.Item>\n                        <Menu.Item key=\"4\" icon={<TeamOutlined/>}>\n                            <NavLink to=\"/users\" activeClassName={s.active}> Пользователи</NavLink>\n                        </Menu.Item>\n\n                    </Menu>\n                </Sider>\n                <Layout className=\"site-layout\">\n                    <Header className=\"site-layout-background\" style={{padding: 0}}>\n                        <div className=\"auth-block\"> {this.props.isAuth ?\n                            <div> {this.props.login} - <Button onClick={this.props.logout}>\n                                Logout</Button></div>\n                            : <NavLink to={'/login'}>Login</NavLink>}\n                        </div>\n                        {React.createElement(this.state.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined, {\n                            className: 'trigger',\n                            onClick: this.toggle,\n                        })}\n\n                    </Header>\n                    <Content\n                        className=\"site-layout-background\"\n                        style={{\n                            margin: '24px 16px',\n                            padding: 24,\n                            minHeight: 280,\n                        }}\n                    >\n                        <Switch>\n                            <Route path='/' exact><Redirect to='/profile'/></Route>\n                            <Route path='/dialogs' render={() => <DialogsContainer/>}/>\n                            <Route path='/profile/:userID?' render={() => <ProfileContainer/>}/>\n                            <Route path='/chat' render={() => <SuspendedChat userID={this.props.authUserProfile}/>}/>\n                            <Route path='/music' render={() => <Music/>}/>\n                            <Route path='/settings' render={() => <Settings/>}/>\n                            <Route path='/users' render={() => <UsersContainer/>}/>\n                            <Route path='/login' render={() => <LoginContainer/>}/>\n                            <Route path='*' render={() => <div>404 NOT FOUND</div>}/>\n                        </Switch>\n                    </Content>\n                </Layout>\n            </Layout>\n\n        </>\n\n\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized,\n    login: state.authReducer.login,\n    isAuth: state.authReducer.isAuth,\n    authUserProfile: state.authReducer.authUserProfile,\n    userID: state.authReducer.id,\n\n})\n\nexport default compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp, logout}))(App);","import React from \"react\";\r\n\r\nexport function withSuspense(WrappedComponent) {\r\n    return (props)=>{\r\n       return <React.Suspense fallback={<div>loading ...</div>}>\r\n\r\n        <WrappedComponent {...props}/>\r\n    </React.Suspense>\r\n    }\r\n}\r\n","\r\nlet initialState ={\r\n    friendName:[\r\n        {friendsName: \"Diana\"},\r\n        {friendsName: \"Ihor\"},\r\n        {friendsName: \"Ruslan\"}\r\n    ]\r\n}\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n    return state;\r\n}\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport messagesReducer from \"./messages-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddlware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet redusers = combineReducers({\r\n   profilePage: profileReducer,\r\n    messagesPage: messagesReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    authReducer: authReducer,\r\n    app: appReducer,\r\n    form: formReducer,\r\n});\r\n\r\nlet store = createStore(redusers, applyMiddleware(thunkMiddlware));\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from \"./Redux/redux-store\";\nimport {BrowserRouter, HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport {reduxForm} from \"redux-form\";\n\n\nreduxForm( ReactDOM.render(\n    <HashRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </HashRouter>,\n    document.getElementById('root')\n))\n","import {authMe, loginAPI, securityAPI} from \"../API/API\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\nconst SET_AUTH_PROFILE = 'SET_AUTH_PROFILE';\r\nconst GET_CAPTCHA_URL = 'GET_CAPTCHA_URL';\r\n\r\n\r\nexport type InitialStateType = {\r\n    id: string | null,\r\n    login: string | null,\r\n    email: string | null,\r\n    isAuth: boolean,\r\n    isFetching: boolean,\r\n    authUserProfile: object | null,\r\n    captchaUrl: string | null\r\n}\r\n\r\nlet initialState: InitialStateType = {\r\n    id: null,\r\n    login: null,\r\n    email: null,\r\n    isAuth: false,\r\n    isFetching: false,\r\n    authUserProfile: null,\r\n    captchaUrl: null\r\n\r\n\r\n}\r\nconst authReducer = (state = initialState, action: any): InitialStateType => {\r\n\r\n\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                ...action.payload.isAuth,\r\n\r\n            }\r\n        case SET_AUTH_PROFILE:\r\n            return {\r\n                ...state,\r\n                authUserProfile: action.authProfile,\r\n\r\n            }\r\n        case GET_CAPTCHA_URL:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                captchaUrl: action.payload.captchaUrl\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}\r\ntype SetAuthUserDataActionPayloadType ={\r\n    id: number | null\r\n    login: string | null\r\n    email:string | null\r\n    isAuth:boolean\r\n}\r\ntype SetAuthUserDataActionType = {\r\n    type: typeof SET_USER_DATA,\r\n    payload: SetAuthUserDataActionPayloadType\r\n}\r\ntype SetGetCaptchaUrlSuccess = {\r\n    type: typeof SET_USER_DATA,\r\n    payload: any\r\n}\r\n\r\nexport const setAuthUserData = (id: number | null, login: string | null, email: string | null, isAuth: boolean): SetAuthUserDataActionType => ({\r\n    type: SET_USER_DATA,\r\n    payload: {id, login, email, isAuth}\r\n});\r\n\r\nexport const getCaptchaUrlSuccess = (captchaUrl: string | null): SetGetCaptchaUrlSuccess => ({\r\n    type: SET_USER_DATA,\r\n    payload: {captchaUrl}\r\n});\r\n\r\n\r\ntype SetAuthUserProfileActionType={\r\n    type: typeof SET_AUTH_PROFILE,\r\n    authProfile: {}\r\n}\r\nexport const setAuthUserProfile = (authProfile: {}): SetAuthUserProfileActionType => ({type: SET_AUTH_PROFILE, authProfile});\r\n\r\n\r\nexport const authMeTh = () => async (dispatch: any) => {\r\n    let response = await authMe()\r\n    if (response.data.resultCode === 0) {\r\n        let {id, login, email} = response.data.data;\r\n        dispatch(setAuthUserData(id, login, email, true));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const login = (email: string, password: string, rememberMe: boolean, captcha: string | null) => async (dispatch: any) => {\r\n\r\n    let response = await loginAPI.login(email, password, rememberMe, captcha);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(authMeTh());\r\n    } else  if (response.data.resultCode === 10) {\r\n        dispatch(getCaptchaUrl())\r\n    }\r\n        else{\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit(\"login\", {_error: message}));\r\n\r\n    }\r\n\r\n\r\n}\r\nexport const getCaptchaUrl = () => async (dispatch: any) => {\r\n\r\n    const response = await securityAPI.getCaptchaUrl();\r\n    const captchaUrl = response.data.url;\r\n    dispatch(getCaptchaUrlSuccess(captchaUrl))\r\n}\r\n\r\nexport const logout = () => async (dispatch: any) => {\r\n    let response = await loginAPI.logout();\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default authReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"outerContainer\":\"Dialogs_outerContainer__27pNM\",\"container\":\"Dialogs_container__URaYG\",\"messages\":\"Dialogs_messages__3tDVN\",\"form\":\"Dialogs_form__2tbH1\",\"input\":\"Dialogs_input__1C3Of\",\"sendButton\":\"Dialogs_sendButton__1D55q\"};","export default __webpack_public_path__ + \"static/media/Curve-Loading.5e01ee79.gif\";","import React from 'react';\r\nimport preloader from '../../img/Curve-Loading.gif';\r\n\r\n\r\nconst Preloader = () => {\r\n    return <div>\r\n        <img src={preloader}/>\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"discriptionBlock\":\"ProfileInfo_discriptionBlock__18aui\",\"largeUserPhoto\":\"ProfileInfo_largeUserPhoto__2cOi9\",\"photoUpload\":\"ProfileInfo_photoUpload__oxH0y\",\"editProfile\":\"ProfileInfo_editProfile__3Q2Nj\",\"contacts\":\"ProfileInfo_contacts___CT2U\"};"],"sourceRoot":""}