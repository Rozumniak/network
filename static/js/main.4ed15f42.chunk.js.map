{"version":3,"sources":["Components/Common/FormControls.module.css","Components/Common/Paginator.module.css","Components/Profile/MyPosts/Post/Post.module.css","Components/Profile/MyPosts/MyPosts.module.css","Components/Dialogs/Dialog/Dialog.module.css","Components/Header/Header.module.css","Components/Dialogs/Message/Message.module.css","Components/Users/Users.module.css","img/1.png","Components/Profile/MyPosts/Post/Post.jsx","utilits/validators/validators.js","Components/Profile/MyPosts/MyPosts.jsx","img/Curve-Loading.gif","Components/Common/Preloader.jsx","Components/Profile/MyPosts/ProfileInfo/ProfileStatus.jsx","Components/Profile/MyPosts/ProfileInfo/ProfileStatusWithHooks.jsx","Components/Common/FormControls.js","Components/Profile/MyPosts/ProfileInfo/ProfileDataForm.jsx","Components/Profile/MyPosts/ProfileInfo/ProfileInfo.jsx","API/API.js","Redux/profile-reducer.js","Components/Profile/MyPosts/MyPostsContainer.jsx","Components/Profile/Profile.jsx","HOC/WithAuthRedirect.jsx","Components/Profile/ProfileContainer.jsx","Components/News/News.js","Components/Music/Music.js","Components/Settings/Settings.js","Redux/messages-reducer.js","Components/Dialogs/Dialog/Dialog.js","Components/Dialogs/Message/Message.js","Components/Dialogs/Dialogs.js","Components/Dialogs/DialogsContainer.js","Components/Navbar/Navbar.jsx","Components/Navbar/NavbarContainer.jsx","Redux/users-reducer.js","Components/Common/Paginator.jsx","Components/Users/Users.js","Redux/users-selectors.js","Components/Users/UsersContainer.jsx","Components/Header/Header.jsx","Redux/auth-reducer.js","Components/Header/HeaderContainer.jsx","Components/Login/Login.jsx","Components/Login/LoginContainer.jsx","Redux/app-reducer.js","App.js","Redux/sidebar-reducer.js","Redux/redux-store.js","index.js","Components/Navbar/Navbar.module.css","Components/Profile/MyPosts/ProfileInfo/ProfileInfo.module.css","Components/Dialogs/Dialogs.module.css"],"names":["module","exports","Post","props","profile","className","s","item","src","photos","small","userPhoto","message","like","onClick","icon","LikeOutlined","required","value","maxLengthCreator","maxLength","length","layout","labelCol","span","wrapperCol","AddPostReduxForm","Input","TextArea","reduxForm","form","name","onFinish","onSubmit","Item","size","offset","type","htmlType","MyPosts","React","memo","console","log","posts","profilePage","reverse","map","post","text","likesCount","dispatch","postsBlock","formData","postText","addPost","Preloader","preloader","Component","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","isOwner","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","FormControl","input","meta","child","hasError","error","touched","styles","formControl","children","Textarea","restProps","createField","placeholder","validators","component","Field","validate","ProfileDataReduxForm","handleSubmit","photoUpload","UploadOutlined","target","files","savePhoto","Object","keys","contacts","key","ProfileData","discriptionBlock","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contacts","href","ProfileInfo","editProfile","deactivateProfileEditMode","activateProfileEditMode","large","largeUserPhoto","id","initialValues","saveProfile","instance","axios","withCredentials","headers","baseURL","userAPI","currentPage","pageSize","get","then","response","data","delete","profileAPI","userId","put","photo","FormData","append","loginAPI","email","password","rememberMe","ADD_POST","SET_USER_PROFILE","SET_USER_STATUS","STATUS_UPDATE","SAVE_PHOTO_SUCCESS","ACTIVATE_EDIT_MODE","DEACTIVATE_EDIT_MODE","initialState","profileEditMode","setUserProfile","setUserStatus","savePhotoSuccess","editModeOn","editModeOff","profileReducer","state","action","newText","statusInProgress","isUpdate","MyPostsContainer","connect","addPostActionCreator","Profile","mapStateToPropsRedirect","isAuth","authReducer","withAuthRedirect","RedirectComponent","this","to","ProfileContainer","userID","match","params","getProfileTh","getUserStatusTh","refreshProfile","prevProps","prevState","snapshot","updateStatusTh","compose","resultCode","getState","withRouter","News","Music","Settings","SEND_MESSAGE","dialogs","messages","messagesReducer","messageText","Dialog","path","activeClassName","active","Message","maxLength50","MessageReduxForm","Dialogs","messagesPage","el","dialog","dialogsItem","sendMessage","sendMessageActionCreator","Navbar","navbar","nav","sidebar","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_USERS_TOTAL_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_IN_PROGRESS","users","totalUsersCount","isFetching","followingInProgress","follow","unfollow","setCurrentPage","toggleIsFetching","toggleFollowingInProgress","isFollowing","usersReducer","u","followed","count","filter","Paginator","totalItemsCount","portionSize","onPageChange","pagesCount","Math","ceil","pages","i","push","portionCount","portionNumber","setPortionNumber","leftPortionNumber","rightPortionNumber","paginator","p","cn","selectedPage","pageNumber","Users","disabled","some","getUsersSuperSelector","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersAPI","getUsersTh","unfollowTh","followTh","totalCount","items","Header","header","loginBlock","login","Button","logout","SET_USER_DATA","SET_AUTH_PROFILE","authUserProfile","setAuthUserData","payload","authMeTh","authProfile","HeaderContainer","LoginForm","remember","label","rules","Password","valuePropName","Login","values","username","LoginContainer","stopSubmit","_error","INITIALIZED_SUCCESS","initialized","appReducer","Layout","Sider","Content","App","collapsed","toggle","setState","initializeApp","trigger","collapsible","theme","mode","defaultSelectedKeys","UserOutlined","FormOutlined","TeamOutlined","style","padding","createElement","MenuUnfoldOutlined","MenuFoldOutlined","margin","minHeight","render","DialogsContainer","UsersContainer","app","friendName","friendsName","sidebarReducer","redusers","combineReducers","formReducer","store","createStore","applyMiddleware","thunkMiddlware","window","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.4ed15f42.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__2Y3MO\",\"error\":\"FormControls_error__3fwNV\",\"formSummaryError\":\"FormControls_formSummaryError__3uC7c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__TmYM-\",\"pageNumber\":\"Paginator_pageNumber__VTzaX\",\"selectedPage\":\"Paginator_selectedPage__3SkPi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__qgLu_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__IKVWh\",\"posts\":\"MyPosts_posts__2281S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Dialog_item__1E3wH\",\"active\":\"Dialog_active__22o0r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1Ya28\",\"loginBlock\":\"Header_loginBlock__AUhM_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Message_item__3PE_v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__3V6cJ\"};","export default __webpack_public_path__ + \"static/media/1.a2446033.png\";","import React, {useState} from 'react';\r\nimport s from './Post.module.css';\r\n\r\nimport {Button, } from 'antd';\r\nimport { LikeOutlined } from '@ant-design/icons';\r\nimport userPhoto from \"../../../../img/1.png\";\r\nconst Post = (props) => {\r\n\r\n    let addLike = () => {\r\n\r\n    }\r\n    if (!props.profile){\r\n        return null\r\n    }\r\n    return (\r\n        <div className={s.item}>\r\n            <img src={props.profile.photos.small || userPhoto} className={s.userPhoto}/>\r\n            {props.message}\r\n            <div>\r\n                <span>like {props.like}</span>\r\n            </div>\r\n            <div><Button onClick={addLike} icon={<LikeOutlined />}></Button></div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Post;","export const required = value => {\r\n    if (value) return undefined;\r\n\r\n    return \"Field is required\";\r\n}\r\n\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}\r\n\r\n","import React from 'react';\r\nimport Post from './Post/Post';\r\nimport s from './MyPosts.module.css'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utilits/validators/validators\";\r\n//import {Textarea} from \"../../Common/FormControls\";\r\nimport { Form, Input, InputNumber, Button } from 'antd';\r\nconst layout = {\r\n    labelCol: {\r\n        span: 8,\r\n    },\r\n    wrapperCol: {\r\n        span: 16,\r\n    },\r\n};\r\nconst { TextArea } = Input;\r\nconst maxLength100 = maxLengthCreator(100);\r\n\r\nconst AddPostForm = (props) => {\r\n    return <Form {...layout} name=\"nest-messages\" onFinish={props.onSubmit} >\r\n        <Form.Item name=\"post\" size=\"large\">\r\n            <Input.TextArea />\r\n        </Form.Item>\r\n        <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n                Отправить\r\n            </Button>\r\n        </Form.Item>\r\n    </Form>\r\n}\r\nconst AddPostReduxForm = reduxForm({\r\n    form: \"addPost\"\r\n})(AddPostForm);\r\n\r\nconst MyPosts = React.memo(props => {\r\n    console.log(\"RENDER\");\r\n    let posts = [...props.profilePage.posts]\r\n        .reverse()\r\n        .map(post => (<Post message={post.text}\r\n                                                           like={post.likesCount} dispatch={props.dispatch}\r\n                                                           profile={props.profile}/>))\r\n    if (!props.profile) {\r\n        return null\r\n    }\r\n    const onSubmit = (formData) => {\r\n        let postText = formData.post\r\n        props.addPost(postText);\r\n        formData.post = null;\r\n    }\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddPostReduxForm onSubmit={onSubmit}/>\r\n\r\n            <div className={s.posts}>\r\n                {posts}\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n});\r\n\r\nexport default MyPosts;\r\n","export default __webpack_public_path__ + \"static/media/Curve-Loading.5e01ee79.gif\";","import React from 'react';\r\nimport preloader from '../../img/Curve-Loading.gif';\r\n\r\n\r\nconst Preloader = () => {\r\n    return <div>\r\n        <img src={preloader}/>\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","import React from \"react\";\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n    state = {\r\n        editMode: false,\r\n        localStatus: this.props.status\r\n    }\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n\r\n    }\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n\r\n        this.props.updateStatus(this.state.localStatus);\r\n    }\r\n\r\n    updateText = (e) => {\r\n        this.setState({\r\n            localStatus: e.currentTarget.value\r\n        })\r\n\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if(prevProps.status !== this.props.status){\r\n            this.setState({\r\n                localStatus: this.props.status\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div>\r\n                {!this.state.editMode &&\r\n                <div>\r\n                    <span onDoubleClick={this.activateEditMode}>{this.props.status || \"------\"}</span>\r\n                </div>\r\n                }\r\n                {this.state.editMode &&\r\n                <div>\r\n                    <input autoFocus={true} onBlur={this.deactivateEditMode} onChange={this.updateText}\r\n                           value={this.state.localStatus}/>\r\n                </div>\r\n                }\r\n            </div>\r\n        )\r\n            ;\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    },[props.status]);\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n\r\n    }\r\n    const activateEditMode = () => {\r\n        if (props.isOwner) { setEditMode(true)}\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n    return (\r\n\r\n        <div>\r\n\r\n            {!editMode &&\r\n            <div>\r\n                <b>Status:   </b>\r\n                <span onDoubleClick={activateEditMode}>{props.status || \"------\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input autoFocus={true} onBlur={deactivateEditMode} onChange={onStatusChange}\r\n                       value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n        ;\r\n\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport styles from \"./FormControls.module.css\";\r\nimport {Field} from \"redux-form\";\r\n\r\nexport const FormControl = ({input, meta, child, ...props}) => {\r\n    const hasError = meta.error && meta.touched;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \" \")}>\r\n            <div>{props.children}</div>\r\n            <div>\r\n                {hasError && <span>{meta.error}</span>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl{...props}><textarea {...input}{...restProps}/></FormControl>\r\n}\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl{...props}><input {...input}{...restProps}/></FormControl>\r\n}\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name}\r\n               validate={validators} component={component}\r\n               {...props}\r\n        /> {text}\r\n    </div>\r\n)","import s from \"./ProfileInfo.module.css\";\r\nimport {Input} from \"antd\";\r\nimport {UploadOutlined} from '@ant-design/icons';\r\nimport React from \"react\";\r\nimport {createField, Textarea} from \"../../../Common/FormControls\";\r\nimport {reduxForm} from \"redux-form\";\r\n\r\nconst ProfileDataForm = ({handleSubmit, props, profile}) => {\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            props.savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n    return <div>\r\n        <div className={s.photoUpload}><Input icon={<UploadOutlined/>} type={\"file\"}\r\n                                              onChange={onMainPhotoSelected}/></div>\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <button onClick={() => {\r\n                }}>Save\r\n                </button>\r\n            </div>\r\n            <div>\r\n                <b>Full name:</b> {createField(\"Full name\", \"fullName\", [], \"input\")}\r\n            </div>\r\n            <div>\r\n                <b>В поисках работы:</b> {createField(\"\", \"lookingForAJob\", [], \"input\", {type: \"checkbox\"})}\r\n            </div>\r\n            <div>\r\n                <b>Мои навыки:</b> {createField(\"\", \"lookingForAJobDescription\", [], Textarea)}\r\n            </div>\r\n            <div>\r\n                <b>Обо мне:</b> {createField(\"\", \"aboutMe\", [], Textarea)}\r\n            </div>\r\n\r\n            <div>\r\n                <b>Контакты:</b> {Object.keys(profile.contacts).map(key => {\r\n                return <div>\r\n                    <b>{key}:</b> {createField(key, \"contacts.\" + key, [], \"input\")}\r\n                </div>\r\n            })}\r\n            </div>\r\n\r\n        </form>\r\n\r\n    </div>\r\n}\r\nconst ProfileDataReduxForm = reduxForm({form: \"edit-profile\"})(ProfileDataForm)\r\nexport default ProfileDataReduxForm","import React from 'react';\r\nimport preloader from '../../../../img/Curve-Loading.gif';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../../Common/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport userPhoto from \"../../../../img/1.png\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport {Button, Input} from \"antd\";\r\n\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\nimport ProfileDataReduxForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <div>\r\n            <Preloader/>\r\n        </div>\r\n    }\r\n    const isEditMode = () => {\r\n        if (props.editMode) {\r\n            return props.deactivateProfileEditMode;\r\n        }\r\n        return props.activateProfileEditMode;\r\n    }\r\n    const onSubmit = (formData) => {\r\n        props.saveProfile(formData);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {props.isOwner &&\r\n            <div className={s.editProfile}>\r\n                <Button onClick={isEditMode()}> {props.editMode ? \"Cancel\" : \"Edit\"}</Button>\r\n            </div>\r\n            }\r\n            <div>\r\n                <img\r\n                    src={props.profile.photos.large || userPhoto}\r\n                    className={s.largeUserPhoto}/>\r\n                <ProfileStatusWithHooks id={props.id} status={props.status} updateStatus={props.updateStatus}\r\n                                        isOwner={props.isOwner}/>\r\n\r\n                {props.isOwner && props.editMode ?\r\n                    <ProfileDataReduxForm initialValues={props.profile} profile={props.profile} savePhoto={props.savePhoto} onSubmit={onSubmit}/> :\r\n                    <ProfileData profile={props.profile}/>\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst ProfileData = (props) => {\r\n    return <div className={s.discriptionBlock}>\r\n        <div>\r\n            <b>Full name:</b> {props.profile.fullName}\r\n        </div>\r\n        <div>\r\n            <b>looking For A Job:</b> {props.profile.lookingForAJob ? \"yes\" : \"no\"}\r\n        </div>\r\n        {props.profile.lookingForAJob &&\r\n        <div>\r\n            <b>My professional skills:</b> {props.profile.lookingForAJobDescription}\r\n        </div>\r\n        }\r\n        <div>\r\n            <b>About me:</b> {props.profile.aboutMe}\r\n        </div>\r\n        <div>\r\n            <b>Contacts:</b> {Object.keys(props.profile.contacts).map(key => {\r\n            return <Contacts key={key} contactTitle={key} contactValue={props.profile.contacts[key]}/>\r\n        })}\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\nconst Contacts = ({contactTitle, contactValue}) => {\r\n    return <div className={s.contacts}>\r\n        <b>{contactTitle}:</b> <a href={contactValue}>{contactValue}</a>\r\n    </div>\r\n}\r\n\r\nexport default ProfileInfo;","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    headers: {\r\n        'API-KEY': 'cc3bd8cc-4d54-4fd5-94a6-1a89051413f6'\r\n    },\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n});\r\nexport const userAPI = {\r\n    getUsers(currentPage, pageSize) {\r\n        return instance.get(`users?page=${currentPage} &count=${pageSize}`)\r\n            .then(response => response.data);\r\n    },\r\n\r\n    unfollow(id) {\r\n        return instance.delete(`follow/${id}`)\r\n    },\r\n    follow(id) {\r\n        return instance.post(`follow/${id}`)\r\n    }\r\n}\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId)\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {status: status})\r\n    },\r\n    savePhoto(photo) {\r\n        let formData = new FormData();\r\n        formData.append(\"image\", photo)\r\n        return instance.put(`profile/photo`, formData, {headers: {'Content-Type': 'multipart/form/data'}})\r\n    },\r\n    saveProfile(profile) {\r\n        return instance.put(`profile`, profile)\r\n    }\r\n}\r\nexport const loginAPI = {\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe});\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n}\r\nexport const authMe = () => {\r\n    return instance.get(`auth/me`)\r\n}","import {profileAPI} from \"../API/API\";\r\n\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_USER_STATUS = 'SET_USER_STATUS';\r\nconst STATUS_UPDATE = 'STATUS_UPDATE';\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\r\nconst ACTIVATE_EDIT_MODE = 'ACTIVATE_EDIT_MODE';\r\nconst DEACTIVATE_EDIT_MODE = 'DEACTIVATE_EDIT_MODE';\r\n\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, text: \"Hello world\", likesCount: 12},\r\n        {id: 2, text: \"This is my first post\", likesCount: 10},\r\n\r\n    ],\r\n    profile: null,\r\n    status: \"\",\r\n    profileEditMode: false,\r\n}\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts,\r\n                    {id: 6, text: action.newText, likesCount: 0}]\r\n            }\r\n\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        case SET_USER_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        case STATUS_UPDATE:\r\n            return {\r\n                ...state,\r\n                statusInProgress: action.isUpdate\r\n            }\r\n        case SAVE_PHOTO_SUCCESS:\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.photos}\r\n            }\r\n        case ACTIVATE_EDIT_MODE:\r\n            return {\r\n                ...state,\r\n                profileEditMode: true\r\n            }\r\n        case DEACTIVATE_EDIT_MODE:\r\n            return {\r\n                ...state,\r\n                profileEditMode: false\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const getProfileTh = (userID) => (dispatch) => {\r\n    profileAPI.getProfile(userID).then(response => {\r\n        dispatch(setUserProfile(response.data));\r\n    });\r\n}\r\nexport const getUserStatusTh = (userId) => (dispatch) => {\r\n    profileAPI.getStatus(userId)\r\n        .then(response => {\r\n            dispatch(setUserStatus(response.data));\r\n        });\r\n}\r\nexport const updateStatusTh = (status) => (dispatch) => {\r\n    profileAPI.updateStatus(status)\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setUserStatus(status));\r\n            }\r\n        });\r\n}\r\n\r\nexport const savePhoto = (photo) => (dispatch) => {\r\n    profileAPI.savePhoto(photo)\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(savePhotoSuccess(response.data.data.photos));\r\n            }\r\n        });\r\n}\r\n\r\nexport const saveProfile = (data) => (dispatch, getState) => {\r\n    dispatch(editModeOff());\r\n   const userID = getState().authReducer.id\r\n    profileAPI.saveProfile(data)\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                profileAPI.getProfile(userID).then(response => {\r\n                    dispatch(setUserProfile(response.data));\r\n\r\n                });\r\n\r\n            }\r\n\r\n        });\r\n\r\n\r\n}\r\nexport const activateProfileEditMode = () => (dispatch) => {\r\n\r\n    dispatch(editModeOn());\r\n}\r\nexport const deactivateProfileEditMode = () => (dispatch) => {\r\n    dispatch(editModeOff());\r\n}\r\n\r\n\r\nexport const addPostActionCreator = (text) => ({type: ADD_POST, newText: text});\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport const setUserStatus = (status) => ({type: SET_USER_STATUS, status});\r\nexport const savePhotoSuccess = (photos) => ({type: SAVE_PHOTO_SUCCESS, photos});\r\nexport const editModeOn = () => ({type: ACTIVATE_EDIT_MODE});\r\nexport const editModeOff = () => ({type: DEACTIVATE_EDIT_MODE});\r\n\r\n\r\nexport default profileReducer;","import React from 'react';\r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../Redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        profilePage: state.profilePage,\r\n        profile: state.profilePage.profile\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) =>{\r\n    return {\r\n        addPost: (text) => {\r\n            let action = addPostActionCreator(text);\r\n            dispatch(action);\r\n        },\r\n    }\r\n}\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\nexport  default MyPostsContainer;\r\n\r\n\r\n","import React from 'react';\r\nimport MyPosts from './MyPosts/MyPosts';\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from \"./MyPosts/ProfileInfo/ProfileInfo\";\r\nimport Post from \"./MyPosts/Post/Post\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div className=''>\r\n            <ProfileInfo profile={props.profile} id={props.id} status={props.status} updateStatus={props.updateStatus}\r\n                         isOwner={props.isOwner} savePhoto={props.savePhoto}\r\n                         activateProfileEditMode={props.activateProfileEditMode}\r\n                         deactivateProfileEditMode={props.deactivateProfileEditMode} editMode={props.editMode}\r\n                         saveProfile={props.saveProfile}\r\n            />\r\n            <MyPostsContainer/>\r\n        </div>\r\n    );\r\n}\r\nexport default Profile;","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsRedirect = (state) => {\r\n    return {\r\n        isAuth: state.authReducer.isAuth\r\n    }\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'}/>;\r\n            return <Component {...this.props}/>;\r\n        }\r\n    }\r\n\r\n let   ConnectedRedirectComponent = connect(mapStateToPropsRedirect)(RedirectComponent);\r\n    return ConnectedRedirectComponent;\r\n}","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport * as axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    activateProfileEditMode, deactivateProfileEditMode,\r\n    getProfileTh,\r\n    getUserStatusTh,\r\n    savePhoto, saveProfile,\r\n    setUserProfile,\r\n    updateStatusTh\r\n} from \"../../Redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../HOC/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    refreshProfile() {\r\n        let userID = this.props.match.params.userID;\r\n        if (!userID) {\r\n            userID = this.props.id;\r\n        }\r\n        this.props.getProfileTh(userID);\r\n        this.props.getUserStatusTh(userID);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userID != prevProps.match.params.userID) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile {...this.props} profile={this.props.profile} id={this.props.id} status={this.props.status}\r\n                         updateStatus={this.props.updateStatusTh} isOwner={!this.props.match.params.userID}\r\n                         savePhoto={this.props.savePhoto} activateProfileEditMode={this.props.activateProfileEditMode}\r\n                         deactivateProfileEditMode={this.props.deactivateProfileEditMode}\r\n                         editMode={this.props.editMode} saveProfile={this.props.saveProfile}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    id: state.authReducer.id,\r\n    status: state.profilePage.status,\r\n    editMode: state.profilePage.profileEditMode\r\n\r\n});\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        setUserProfile,\r\n        getProfileTh,\r\n        getUserStatusTh,\r\n        updateStatusTh,\r\n        savePhoto,\r\n        activateProfileEditMode,\r\n        deactivateProfileEditMode,\r\n        saveProfile\r\n    }),\r\n    withAuthRedirect,\r\n    withRouter,\r\n)(ProfileContainer);","import React from 'react';\r\nimport s from './News.module.css'\r\n\r\nconst News = (props) =>{\r\n    return(\r\n        <div>\r\n            News\r\n        </div>\r\n    );\r\n}\r\nexport default News;","import React from 'react';\r\nimport s from './Music.module.css';\r\n\r\nconst Music = (props) =>{\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    );\r\n}\r\nexport default Music;","import React from 'react';\r\nimport s from './Settings.module.css';\r\n\r\nconst Settings = (props) =>{\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    );\r\n}\r\nexport default Settings;","const SEND_MESSAGE = 'SEND-MESSAGE';\r\nlet initialState = {\r\n\r\n    dialogs: [\r\n        {id: 1, name: \"Ruslan\"},\r\n        {id: 2, name: \"Ihor\"},\r\n        {id: 3, name: \"Diana\"},\r\n    ],\r\n    messages: [\r\n        {id: 1, message: \"Hello world\"},\r\n        {id: 2, message: \"Yo\"},\r\n        {id: 3, message: \"Yo\"},\r\n        {id: 3, message: \"Yawawdaao\"},\r\n\r\n    ],\r\n\r\n}\r\n\r\nconst messagesReducer = (state = initialState, action) => {\r\n\r\n\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            return {\r\n                ...state,\r\n                messageText:'',\r\n                messages: [...state.messages,\r\n                    {id: 1,\r\n                    message: action.messageText}]\r\n            }\r\n        default:   return state;\r\n    }\r\n\r\n}\r\nexport const sendMessageActionCreator = (text) => ({type : SEND_MESSAGE, messageText: text})\r\nexport default messagesReducer;","import React from 'react';\r\nimport s from './Dialog.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Dialog = (props) => {\r\n    let path= \"/dialogs/\" + props.id;\r\n    return (\r\n        <div className={s.item}>\r\n           <NavLink to={path} activeClassName={s.active}> {props.name}</NavLink>\r\n        </div>\r\n\r\n    );\r\n}\r\nexport default Dialog;","import React from 'react';\r\nimport s from './Message.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            {props.messages}\r\n        </div>\r\n    );\r\n}\r\nexport default Message;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport Dialog from \"./Dialog/Dialog\";\r\nimport Message from \"./Message/Message\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../Common/FormControls\";\r\nimport {maxLengthCreator, required} from \"../../utilits/validators/validators\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\nconst MessageForm = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name={\"message\"} component={Textarea} validate={[required, maxLength50]}/>\r\n            </div>\r\n            <div>\r\n                <button>Отправить</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nconst MessageReduxForm = reduxForm({\r\n    form: \"message\"\r\n})(MessageForm);\r\nconst Dialogs = (props) => {\r\n\r\n\r\n    let messages = props.messagesPage.messages.map\r\n    (el => (<Message messages={el.message}/>));\r\n\r\n    let dialogs = props.messagesPage.dialogs.map(dialog =>\r\n        (<Dialog name={dialog.name} activeClassName={s.active} id={dialog.id}/>));\r\n\r\n\r\n    let onSubmit = (formData) => {\r\n        let text = formData.message\r\n        props.sendMessage(text);\r\n        formData.message = null;\r\n\r\n    }\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItem}>\r\n                {dialogs}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messages}\r\n                <MessageReduxForm onSubmit={onSubmit}/>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\nexport default Dialogs;","import React from 'react';\r\nimport {messageTextActionCreator, sendMessageActionCreator} from \"../../Redux/messages-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../HOC/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        messagesPage: state.messagesPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (text) => {\r\n            dispatch(sendMessageActionCreator(text));\r\n        },\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\nwithAuthRedirect\r\n)(Dialogs);","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\nconst Navbar = (props) => {\r\n\r\n    return (\r\n        <div className={s.navbar}>\r\n            <nav className={s.nav}>\r\n\r\n                <div className={s.item}>\r\n                    <NavLink to=\"/news\" activeClassName={s.active}> Новости</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to=\"/music\" activeClassName={s.active}>Музыка</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to=\"/settings\" activeClassName={s.active}> Настройки</NavLink>\r\n                </div>\r\n\r\n            </nav>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport Navbar from \"./Navbar\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n        sidebar: state.sidebar\r\n    }\r\n}\r\nlet mapDispatchToProps = () => {\r\n    return{\r\n\r\n    }\r\n}\r\n\r\nconst NavbarContainer = connect(mapStateToProps, mapDispatchToProps)(Navbar);\r\n\r\nexport default NavbarContainer;\r\n","import {userAPI} from \"../API/API\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_USERS_TOTAL_COUNT = 'SET_USERS_TOTAL_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_IN_PROGRESS = 'TOGGLE_IS_FOLLOWING_IN_PROGRESS';\r\n\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [],\r\n}\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n\r\n    switch (action.type) {\r\n        case FOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return {...u, followed: true};\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        }\r\n        case UNFOLLOW : {\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        }\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_USERS_TOTAL_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_IN_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFollowing ?\r\n                    [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}\r\nexport const follow = (userID) => ({type: FOLLOW, userID});\r\nexport const unfollow = (userID) => ({type: UNFOLLOW, userID});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setUsersTotalCount = (totalCount) => ({type: SET_USERS_TOTAL_COUNT, count: totalCount});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleFollowingInProgress = (isFollowing, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_IN_PROGRESS,\r\n    isFollowing,\r\n    userId\r\n});\r\nexport const getUsersTh= (currentPage, pageSize) => (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n    dispatch(setCurrentPage(currentPage));\r\n    userAPI.getUsers(currentPage, pageSize).then(data => {\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setUsersTotalCount(data.totalCount));\r\n    })\r\n}\r\nexport const unfollowTh = (userId) => (dispatch) =>{\r\n    dispatch(toggleFollowingInProgress(true, userId));\r\n    userAPI.unfollow(userId).then(response => {\r\n        if (response.data.resultCode == 0) {\r\n            dispatch(unfollow(userId));\r\n        }\r\n        dispatch(toggleFollowingInProgress(false, userId));\r\n    });\r\n}\r\nexport const followTh = (userId) => (dispatch) =>{\r\n    dispatch(toggleFollowingInProgress(true, userId));\r\n    userAPI.follow(userId).then(response => {\r\n        if (response.data.resultCode == 0) {\r\n            dispatch(follow(userId));\r\n        }\r\n        dispatch(toggleFollowingInProgress(false, userId));\r\n    });\r\n}\r\nexport default usersReducer;","import React, {useState} from 'react';\r\nimport s from \"./Paginator.module.css\";\r\nimport cn from \"classnames\";\r\nimport {Button} from \"antd\";\r\n\r\n\r\nlet Paginator = ({totalItemsCount, portionSize, currentPage, onPageChange}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / portionSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount/portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionNumber = portionNumber * portionSize;\r\n\r\n    return <>\r\n        <div className={s.paginator}>\r\n\r\n          {portionNumber > 1 &&\r\n        <Button onClick={()=> {setPortionNumber (1)}}>First</Button>}\r\n        {portionNumber > 1 &&\r\n        <Button onClick={()=> {setPortionNumber (portionNumber- 1)}}>Previous</Button>}\r\n        {pages.filter(p => p >= leftPortionNumber && p<= rightPortionNumber)\r\n            .map(p => {\r\n            return<Button className={\r\n                cn({[s.selectedPage]: currentPage === p}, s.pageNumber)}\r\n                           key={p}\r\n                           onClick={(e) => {\r\n                               onPageChange(p)\r\n                           }}\r\n            >{p}</Button>\r\n        })}\r\n        {portionCount > portionNumber &&\r\n        <Button onClick={()=>{setPortionNumber(portionNumber+1)}}>Next</Button>}\r\n        {portionCount > portionNumber &&\r\n        <Button onClick={()=>{setPortionNumber(portionCount)}}>Last</Button>}\r\n\r\n    </div>\r\n    </>\r\n}\r\nexport default Paginator;","import s from \"./Users.module.css\";\r\nimport userPhoto from \"../../img/1.png\";\r\nimport React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Paginator from \"../Common/Paginator\";\r\nimport 'antd/dist/antd.css';\r\nimport { Button } from 'antd';\r\n\r\n\r\nconst Users = (props) => {\r\n\r\n    return <div>\r\n        <div>\r\n            <Paginator totalItemsCount={props.totalUsersCount} onPageChange={props.onPageChange} currentPage={props.currentPage}\r\n                       portionSize={props.pageSize} />\r\n        </div>\r\n\r\n        {props.users.map(u => <div key={u.id}>\r\n                    <span>\r\n                        <div>\r\n                            <NavLink to={\"/profile/\" + u.id}>\r\n                            <img src={u.photos.small != null ? u.photos.small : userPhoto} className={s.userPhoto}/>\r\n                        </NavLink>\r\n                            </div>\r\n                        <div>\r\n                            {u.followed ?\r\n                                <Button type=\"primary\" size=\"middle\" disabled={props.followingInProgress.some(id => id === u.id)}\r\n                                        onClick={() => {\r\n                                            props.unfollow(u.id);\r\n                                        }}> Unfollow </Button> :\r\n\r\n                                <Button type=\"primary\" size=\"middle\" disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => {\r\n                                   props.follow(u.id);\r\n\r\n\r\n                                }}>Follow</Button>}\r\n                        </div>\r\n                    </span>\r\n            <span>\r\n                        <span>\r\n                            <div>{u.name}</div>\r\n                            <div>{u.status}</div>\r\n                        </span>\r\n                        <span>\r\n                            <div>\"u.location.country\"</div>\r\n                                <div>{\"u.location.city\"}</div>\r\n                                </span>\r\n                                </span>\r\n        </div>)\r\n        }\r\n    </div>\r\n}\r\nexport default Users;","import {createSelector} from \"reselect\";\r\n\r\nexport const getUsers = (state) => {\r\n   return  state.usersPage.users;\r\n}\r\nexport const getUsersSuperSelector = createSelector(getUsers, (users) => {\r\n   return  users;\r\n})\r\n\r\n\r\nexport const getPageSize = (state) => {\r\n   return  state.usersPage.pageSize;\r\n}\r\nexport const getTotalUsersCount = (state) => {\r\n   return  state.usersPage.totalUsersCount;\r\n}\r\nexport const getCurrentPage = (state) => {\r\n   return  state.usersPage.currentPage;\r\n}\r\nexport const getIsFetching = (state) => {\r\n   return  state.usersPage.isFetching;\r\n}\r\nexport const getFollowingInProgress = (state) => {\r\n   return  state.usersPage.followingInProgress;\r\n}\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow, followTh, getUsersTh,\r\n    setCurrentPage,\r\n    unfollow, unfollowTh\r\n} from \"../../Redux/users-reducer\";\r\n\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../Common/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../HOC/WithAuthRedirect\";\r\nimport {\r\n    getCurrentPage, getFollowingInProgress, getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount, getUsers, getUsersSuperSelector,\r\n} from \"../../Redux/users-selectors\";\r\n\r\nclass UsersAPI extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsersTh(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChange = (pageNumber) => {\r\n        this.props.getUsersTh(pageNumber, this.props.pageSize);\r\n    }\r\n\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChange={this.onPageChange}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   users={this.props.users}\r\n                   isFetching={this.props.isFetching}\r\n                   followingInProgress={this.props.followingInProgress}\r\n                   toggleFollowingInProgress={this.props.toggleFollowingInProgress}\r\n                   unfollow={this.props.unfollowTh}\r\n                   follow={this.props.followTh}\r\n            /></ >\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsersSuperSelector(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n    }\r\n}\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps,\r\n        {\r\n            follow, unfollow, setCurrentPage, getUsersTh, unfollowTh, followTh\r\n        }))(UsersAPI);\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Preloader from \"../Common/Preloader\";\r\nimport {Button} from \"react-bootstrap\";\r\n\r\nconst Header = (props) => {\r\n\r\n    return (\r\n        <header className={s.header}>\r\n        <img src='https://logoza.ru/img/rock.png' />\r\n        <div className={s.loginBlock}>\r\n            {props.isAuth? <div> {props.login} - <Button onClick={props.logout}>Log out</Button></div>\r\n            :<NavLink to={'/login'}>Login</NavLink>}\r\n        </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import {authMe, loginAPI} from \"../API/API\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\nconst SET_AUTH_PROFILE = 'SET_AUTH_PROFILE';\r\n\r\n\r\nlet initialState = {\r\n    id: null,\r\n    login: null,\r\n    email: null,\r\n    isAuth: false,\r\n    isFetching: false,\r\n    authUserProfile: null,\r\n\r\n\r\n}\r\nconst authReducer = (state = initialState, action) => {\r\n\r\n\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                ...action.payload.isAuth,\r\n\r\n            }\r\n        case SET_AUTH_PROFILE:\r\n            return {\r\n                ...state,\r\n                authUserProfile: action.authProfile,\r\n\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}\r\nexport const setAuthUserData = (id, login, email, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    payload: {id, login, email, isAuth}\r\n});\r\nexport const setAuthUserProfile = (authProfile) => ({type: SET_AUTH_PROFILE, authProfile});\r\n\r\n\r\nexport const authMeTh = () => (dispatch) => {\r\n   return  authMe().then(response => {\r\n        if (response.data.resultCode === 0) {\r\n            let {id, login, email} = response.data.data;\r\n            dispatch(setAuthUserData(id, login, email, true));\r\n\r\n        }\r\n\r\n    });\r\n}\r\nexport const login = (email, password, rememberMe) => (dispatch) => {\r\n\r\n    loginAPI.login(email, password, rememberMe).then(response => {\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(authMeTh());\r\n        } else {\r\n            let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n            dispatch(stopSubmit(\"login\", {_error: message}));\r\n        }\r\n\r\n    });\r\n}\r\nexport const logout = () => (dispatch) => {\r\n    loginAPI.logout().then(response => {\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setAuthUserData(null, null, null, false));\r\n        }\r\n\r\n    });\r\n}\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {authMeTh, logout, setAuthUserData, setAuthUserProfile} from \"../../Redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    login: state.authReducer.login,\r\n    isAuth: state.authReducer.isAuth,\r\n    authUserProfile: state.authReducer.authUserProfile,\r\n\r\n});\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from 'react'\r\n//import {Field, reduxForm} from \"redux-form\";\r\n//import {maxLengthCreator, required} from \"../../utilits/validators/validators\";\r\n//import {Input} from \"../Common/FormControls\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport style from \"./../Common/FormControls.module.css\"\r\nimport 'antd/dist/antd.css';\r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\n\r\n//const maxLength20 = maxLengthCreator(20)\r\n\r\nconst LoginForm = (props) => {\r\n\r\n    return (\r\n        <Form\r\n            name=\"basic\"\r\n            labelCol={{\r\n                span: 8,\r\n            }}\r\n            wrapperCol={{\r\n                span: 16,\r\n            }}\r\n            initialValues={{\r\n                remember: true,\r\n            }}\r\n            onFinish={props.onSubmit}\r\n\r\n        >\r\n            <Form.Item\r\n                label=\"Username\"\r\n                name=\"username\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input your username!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input/>\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                label=\"Password\"\r\n                name=\"password\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input your password!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input.Password/>\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                name=\"remember\"\r\n                valuePropName=\"checked\"\r\n                wrapperCol={{\r\n                    offset: 8,\r\n                    span: 16,\r\n                }}\r\n            >\r\n                <Checkbox>Remember me</Checkbox>\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                wrapperCol={{\r\n                    offset: 8,\r\n                    span: 16,\r\n                }}\r\n            >\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                    Submit\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n        /*<form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder={\"Email\"} name={\"email\"} component={Input} validate={[required, maxLength20]}/>\r\n            </div>\r\n            <div>\r\n                <Field placeholder={\"Password\"} name={\"password\"} type={\"password\"} component={Input}\r\n                       validate={[required, maxLength20]}/>\r\n            </div>\r\n            <div>\r\n                <Field type={\"checkbox\"} name={\"rememberMe\"} component={Input}/> Remember me\r\n            </div>\r\n            { props.error && <div className={style.formSummaryError}>\r\n                {props.error}\r\n            </div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>*/\r\n    )\r\n};\r\n/*const LoginReduxForm = reduxForm({\r\n    form: \"login\"\r\n})(LoginForm);*/\r\nconst Login = (props) => {\r\n    const onSubmit = (values) => {\r\n        props.login(values.username, values.password, values.remember);\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    } else {\r\n        return <div>\r\n            <h1>Login</h1>\r\n            <LoginForm onSubmit={onSubmit}/>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react'\r\nimport Login from \"./Login\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../Redux/auth-reducer\";\r\n\r\n\r\nclass LoginContainer extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div><Login login={this.props.login} isAuth={this.props.isAuth}/></div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.authReducer.isAuth\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {login}),\r\n)(LoginContainer);","import {authMeTh} from \"./auth-reducer\";\r\n\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n\r\n\r\n}\r\nconst appReducer = (state = initialState, action) => {\r\n\r\n\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n               initialized: true,\r\n\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}\r\nexport const initializedSuccess = () => ({\r\n    type: INITIALIZED_SUCCESS,\r\n});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(authMeTh());\r\npromise.then(()=>{\r\n    dispatch(initializedSuccess());\r\n});\r\n\r\n\r\n}\r\nexport default appReducer;","import React from 'react';\nimport './App.css';\nimport ProfileContainer from './Components/Profile/ProfileContainer';\nimport News from \"./Components/News/News\";\nimport {NavLink, Route, withRouter} from \"react-router-dom\";\nimport Music from \"./Components/Music/Music\";\nimport Settings from \"./Components/Settings/Settings\";\nimport DialogsContainer from \"./Components/Dialogs/DialogsContainer\";\nimport NavbarContainer from \"./Components/Navbar/NavbarContainer\";\nimport UsersContainer from \"./Components/Users/UsersContainer\";\nimport HeaderContainer from \"./Components/Header/HeaderContainer\";\nimport LoginContainer from \"./Components/Login/LoginContainer\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./Redux/app-reducer\";\nimport Preloader from \"./Components/Common/Preloader\";\nimport Navbar from \"./Components/Navbar/Navbar\";\nimport 'antd/dist/antd.css';\nimport {Layout, Menu, Button} from 'antd';\nimport {\n    MenuUnfoldOutlined,\n    MenuFoldOutlined,\n    UserOutlined,\n    VideoCameraOutlined,\n    FormOutlined,\n    TeamOutlined,\n    UploadOutlined,\n} from '@ant-design/icons';\nimport s from \"./Components/Navbar/Navbar.module.css\";\nimport {logout} from \"./Redux/auth-reducer\";\n\n\nconst {Header, Sider, Content} = Layout;\n\nclass App extends React.Component {\n    state = {\n        collapsed: false,\n        size: 'large',\n    };\n\n    toggle = () => {\n        this.setState({\n            collapsed: !this.state.collapsed,\n        });\n    };\n\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n    render() {\n        const {size} = this.state;\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n        return <>\n            <Layout>\n                <Sider trigger={null} collapsible collapsed={this.state.collapsed}>\n                    <div className=\"logo\"/>\n                    <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\n                        <Menu.Item key=\"1\" icon={<UserOutlined/>}>\n                            <NavLink to=\"/profile\" activeClassName={s.active}>Профиль</NavLink>\n                        </Menu.Item>\n                        <Menu.Item key=\"2\" icon={<FormOutlined/>}>\n                            <NavLink to=\"/dialogs\" activeClassName={s.active}>Сообщения</NavLink>\n                        </Menu.Item>\n                        <Menu.Item key=\"3\" icon={<TeamOutlined/>}>\n                            <NavLink to=\"/users\" activeClassName={s.active}> Пользователи</NavLink>\n                        </Menu.Item>\n                    </Menu>\n                </Sider>\n                <Layout className=\"site-layout\">\n                    <Header className=\"site-layout-background\" style={{padding: 0}}>\n                        <div className=\"auth-block\"> {this.props.isAuth ?\n                            <div> {this.props.login} - <Button onClick={this.props.logout}>\n                                Logout</Button></div>\n                            : <NavLink to={'/login'}>Login</NavLink>}\n                        </div>\n                        {React.createElement(this.state.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined, {\n                            className: 'trigger',\n                            onClick: this.toggle,\n                        })}\n\n                    </Header>\n                    <Content\n                        className=\"site-layout-background\"\n                        style={{\n                            margin: '24px 16px',\n                            padding: 24,\n                            minHeight: 280,\n                        }}\n                    >\n                        <Route path='/dialogs' render={() => <DialogsContainer/>}/>\n                        <Route path='/profile/:userID?' render={() => <ProfileContainer/>}/>\n                        <Route path='/news' render={() => <News/>}/>\n                        <Route path='/music' render={() => <Music/>}/>\n                        <Route path='/settings' render={() => <Settings/>}/>\n                        <Route path='/users' render={() => <UsersContainer/>}/>\n                        <Route path='/login' render={() => <LoginContainer/>}/>\n                    </Content>\n                </Layout>\n            </Layout>\n\n        </>\n\n\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized,\n    login: state.authReducer.login,\n    isAuth: state.authReducer.isAuth,\n    authUserProfile: state.authReducer.authUserProfile\n})\n\nexport default compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp, logout}))(App);","\r\nlet initialState ={\r\n    friendName:[\r\n        {friendsName: \"Diana\"},\r\n        {friendsName: \"Ihor\"},\r\n        {friendsName: \"Ruslan\"}\r\n    ]\r\n}\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n    return state;\r\n}\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport messagesReducer from \"./messages-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddlware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet redusers = combineReducers({\r\n   profilePage: profileReducer,\r\n    messagesPage: messagesReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    authReducer: authReducer,\r\n    app: appReducer,\r\n    form: formReducer,\r\n});\r\n\r\nlet store = createStore(redusers, applyMiddleware(thunkMiddlware));\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from \"./Redux/redux-store\";\nimport {BrowserRouter, HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\n\n\nReactDOM.render(\n    <HashRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </HashRouter>,\n    document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1BCBQ\",\"item\":\"Navbar_item__3RZJI\",\"active\":\"Navbar_active__3bnlt\",\"navbar\":\"Navbar_navbar__2QnsP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"discriptionBlock\":\"ProfileInfo_discriptionBlock__18aui\",\"largeUserPhoto\":\"ProfileInfo_largeUserPhoto__2cOi9\",\"photoUpload\":\"ProfileInfo_photoUpload__oxH0y\",\"editProfile\":\"ProfileInfo_editProfile__3Q2Nj\",\"contacts\":\"ProfileInfo_contacts___CT2U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3d0hk\"};"],"sourceRoot":""}