{"version":3,"sources":["Components/Common/FormControls.module.css","Components/Common/Paginator.module.css","Components/Profile/MyPosts/Post/Post.module.css","Components/Profile/MyPosts/MyPosts.module.css","Components/Profile/MyPosts/ProfileInfo/ProfileInfo.module.css","Components/Dialogs/Dialog/Dialog.module.css","Components/Header/Header.module.css","Components/Dialogs/Message/Message.module.css","Components/Users/Users.module.css","img/1.png","Components/Profile/MyPosts/Post/Post.jsx","utilits/validators/validators.js","Components/Profile/MyPosts/MyPosts.jsx","img/Curve-Loading.gif","Components/Common/Preloader.jsx","Components/Profile/MyPosts/ProfileInfo/ProfileStatus.jsx","Components/Profile/MyPosts/ProfileInfo/ProfileStatusWithHooks.jsx","Components/Profile/MyPosts/ProfileInfo/ProfileInfo.jsx","API/API.js","Redux/users-reducer.js","Redux/profile-reducer.js","Components/Profile/MyPosts/MyPostsContainer.jsx","Components/Profile/Profile.jsx","HOC/WithAuthRedirect.jsx","Components/Profile/ProfileContainer.jsx","Components/News/News.js","Components/Music/Music.js","Components/Settings/Settings.js","Redux/messages-reducer.js","Components/Dialogs/Dialog/Dialog.js","Components/Dialogs/Message/Message.js","Components/Common/FormControls.js","Components/Dialogs/Dialogs.js","Components/Dialogs/DialogsContainer.js","Components/Navbar/Navbar.jsx","Components/Navbar/NavbarContainer.jsx","Components/Common/Paginator.jsx","Components/Users/Users.js","Redux/users-selectors.js","Components/Users/UsersContainer.jsx","Components/Header/Header.jsx","Redux/auth-reducer.js","Components/Header/HeaderContainer.jsx","Components/Login/Login.jsx","Components/Login/LoginContainer.jsx","Redux/app-reducer.js","App.js","Redux/sidebar-reducer.js","Redux/redux-store.js","index.js","Components/Navbar/Navbar.module.css","Components/Dialogs/Dialogs.module.css"],"names":["module","exports","Post","props","profile","className","s","item","src","photos","small","userPhoto","message","like","icon","LikeOutlined","required","value","maxLengthCreator","maxLength","length","layout","labelCol","span","wrapperCol","AddPostReduxForm","Input","TextArea","reduxForm","form","name","onFinish","onSubmit","Item","size","offset","type","htmlType","MyPosts","React","memo","console","log","posts","profilePage","reverse","map","post","text","likesCount","dispatch","postsBlock","formData","postText","addPost","Preloader","preloader","Component","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","ProfileInfo","large","largeUserPhoto","isOwner","id","discriptionBlock","instance","axios","withCredentials","headers","baseURL","userAPI","currentPage","pageSize","get","then","response","data","delete","profileAPI","userId","put","loginAPI","email","password","rememberMe","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_USERS_TOTAL_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_IN_PROGRESS","initialState","users","totalUsersCount","isFetching","followingInProgress","follow","userID","unfollow","setCurrentPage","toggleIsFetching","toggleFollowingInProgress","isFollowing","usersReducer","state","action","u","followed","count","filter","ADD_POST","SET_USER_PROFILE","SET_USER_STATUS","STATUS_UPDATE","setUserProfile","setUserStatus","profileReducer","newText","statusInProgress","isUpdate","MyPostsContainer","connect","addPostActionCreator","Profile","mapStateToPropsRedirect","isAuth","authReducer","withAuthRedirect","RedirectComponent","this","to","ProfileContainer","match","params","getProfileTh","getUserStatusTh","refreshProfile","prevProps","prevState","snapshot","updateStatusTh","compose","resultCode","withRouter","News","Music","Settings","SEND_MESSAGE","dialogs","messages","messagesReducer","messageText","Dialog","path","activeClassName","active","Message","FormControl","input","meta","child","hasError","error","touched","styles","formControl","children","Textarea","restProps","maxLength50","MessageReduxForm","handleSubmit","Field","component","validate","Dialogs","messagesPage","el","dialog","dialogsItem","sendMessage","sendMessageActionCreator","Navbar","navbar","nav","sidebar","Paginator","totalItemsCount","portionSize","onPageChange","pagesCount","Math","ceil","pages","i","push","portionCount","portionNumber","setPortionNumber","leftPortionNumber","rightPortionNumber","paginator","onClick","p","cn","selectedPage","pageNumber","Users","disabled","some","getUsersSuperSelector","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersAPI","getUsersTh","unfollowTh","followTh","totalCount","items","Header","header","loginBlock","login","Button","logout","SET_USER_DATA","SET_AUTH_PROFILE","authUserProfile","setAuthUserData","payload","authMeTh","authProfile","HeaderContainer","LoginForm","initialValues","remember","label","rules","Password","valuePropName","Login","values","username","LoginContainer","stopSubmit","_error","INITIALIZED_SUCCESS","initialized","appReducer","Layout","Sider","Content","App","collapsed","toggle","setState","initializeApp","trigger","collapsible","theme","mode","defaultSelectedKeys","UserOutlined","FormOutlined","TeamOutlined","style","padding","createElement","MenuUnfoldOutlined","MenuFoldOutlined","margin","minHeight","render","DialogsContainer","UsersContainer","app","friendName","friendsName","sidebarReducer","redusers","combineReducers","formReducer","store","createStore","applyMiddleware","thunkMiddlware","window","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.e8c7884b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__2Y3MO\",\"error\":\"FormControls_error__3fwNV\",\"formSummaryError\":\"FormControls_formSummaryError__3uC7c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__TmYM-\",\"pageNumber\":\"Paginator_pageNumber__VTzaX\",\"selectedPage\":\"Paginator_selectedPage__3SkPi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__qgLu_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__IKVWh\",\"posts\":\"MyPosts_posts__2281S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"discriptionBlock\":\"ProfileInfo_discriptionBlock__18aui\",\"largeUserPhoto\":\"ProfileInfo_largeUserPhoto__2cOi9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Dialog_item__1E3wH\",\"active\":\"Dialog_active__22o0r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1Ya28\",\"loginBlock\":\"Header_loginBlock__AUhM_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Message_item__3PE_v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__3V6cJ\"};","export default __webpack_public_path__ + \"static/media/1.a2446033.png\";","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nimport {Button, } from 'antd';\r\nimport { LikeOutlined } from '@ant-design/icons';\r\nimport userPhoto from \"../../../../img/1.png\";\r\nconst Post = (props) => {\r\n    let addLike = () => {\r\n\r\n    }\r\n    if (!props.profile){\r\n        return null\r\n    }\r\n    return (\r\n        <div className={s.item}>\r\n            <img src={props.profile.photos.small || userPhoto} className={s.userPhoto}/>\r\n            {props.message}\r\n            <div>\r\n                <span>like {props.like}</span>\r\n            </div>\r\n            <div><Button icon={<LikeOutlined />}></Button></div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Post;","export const required = value => {\r\n    if (value) return undefined;\r\n\r\n    return \"Field is required\";\r\n}\r\n\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}\r\n\r\n","import React from 'react';\r\nimport Post from './Post/Post';\r\nimport s from './MyPosts.module.css'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utilits/validators/validators\";\r\n//import {Textarea} from \"../../Common/FormControls\";\r\nimport { Form, Input, InputNumber, Button } from 'antd';\r\nconst layout = {\r\n    labelCol: {\r\n        span: 8,\r\n    },\r\n    wrapperCol: {\r\n        span: 16,\r\n    },\r\n};\r\nconst { TextArea } = Input;\r\nconst maxLength100 = maxLengthCreator(100);\r\n\r\nconst AddPostForm = (props) => {\r\n    return <Form {...layout} name=\"nest-messages\" onFinish={props.onSubmit} >\r\n        <Form.Item name=\"post\" size=\"large\">\r\n            <Input.TextArea />\r\n        </Form.Item>\r\n        <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n                Submit\r\n            </Button>\r\n        </Form.Item>\r\n    </Form>\r\n}\r\nconst AddPostReduxForm = reduxForm({\r\n    form: \"addPost\"\r\n})(AddPostForm);\r\n\r\nconst MyPosts = React.memo(props => {\r\n    console.log(\"RENDER\");\r\n    let posts = [...props.profilePage.posts]\r\n        .reverse()\r\n        .map(post => (<Post message={post.text}\r\n                                                           like={post.likesCount} dispatch={props.dispatch}\r\n                                                           profile={props.profile}/>))\r\n    if (!props.profile) {\r\n        return null\r\n    }\r\n    const onSubmit = (formData) => {\r\n        let postText = formData.post\r\n        props.addPost(postText);\r\n        formData.post = null;\r\n    }\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddPostReduxForm onSubmit={onSubmit}/>\r\n\r\n            <div className={s.posts}>\r\n                {posts}\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n});\r\n\r\nexport default MyPosts;\r\n","export default __webpack_public_path__ + \"static/media/Curve-Loading.5e01ee79.gif\";","import React from 'react';\r\nimport preloader from '../../img/Curve-Loading.gif';\r\n\r\n\r\nconst Preloader = () => {\r\n    return <div>\r\n        <img src={preloader}/>\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","import React from \"react\";\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n    state = {\r\n        editMode: false,\r\n        localStatus: this.props.status\r\n    }\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n\r\n    }\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n\r\n        this.props.updateStatus(this.state.localStatus);\r\n    }\r\n\r\n    updateText = (e) => {\r\n        this.setState({\r\n            localStatus: e.currentTarget.value\r\n        })\r\n\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if(prevProps.status !== this.props.status){\r\n            this.setState({\r\n                localStatus: this.props.status\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div>\r\n                {!this.state.editMode &&\r\n                <div>\r\n                    <span onDoubleClick={this.activateEditMode}>{this.props.status || \"------\"}</span>\r\n                </div>\r\n                }\r\n                {this.state.editMode &&\r\n                <div>\r\n                    <input autoFocus={true} onBlur={this.deactivateEditMode} onChange={this.updateText}\r\n                           value={this.state.localStatus}/>\r\n                </div>\r\n                }\r\n            </div>\r\n        )\r\n            ;\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    },[props.status]);\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n\r\n    }\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n    return (\r\n\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{props.status || \"------\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input autoFocus={true} onBlur={deactivateEditMode} onChange={onStatusChange}\r\n                       value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n        ;\r\n\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport preloader from '../../../../img/Curve-Loading.gif';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../../Common/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport userPhoto from \"../../../../img/1.png\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <div>\r\n            <Preloader/>\r\n        </div>\r\n    }\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img\r\n                    src={props.profile.photos.large || userPhoto}\r\n                    className={s.largeUserPhoto}/>\r\n                { props.isOwner && <input type={\"file\"}/>}\r\n                <ProfileStatusWithHooks id={props.id} status={props.status} updateStatus={props.updateStatus}/>\r\n            </div>\r\n            <div className={s.discriptionBlock}>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    headers: {\r\n        'API-KEY': 'cc3bd8cc-4d54-4fd5-94a6-1a89051413f6'\r\n    },\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n});\r\nexport const userAPI = {\r\n    getUsers(currentPage, pageSize) {\r\n        return instance.get(`users?page=${currentPage} &count=${pageSize}`)\r\n            .then(response => response.data);\r\n    },\r\n\r\n    unfollow(id) {\r\n        return instance.delete(`follow/${id}`)\r\n    },\r\n    follow(id) {\r\n        return instance.post(`follow/${id}`)\r\n    }\r\n}\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId)\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {status: status})\r\n    }\r\n}\r\nexport const loginAPI = {\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe});\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n}\r\nexport const authMe = () => {\r\n    return instance.get(`auth/me`)\r\n}","import {userAPI} from \"../API/API\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_USERS_TOTAL_COUNT = 'SET_USERS_TOTAL_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_IN_PROGRESS = 'TOGGLE_IS_FOLLOWING_IN_PROGRESS';\r\n\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [],\r\n}\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n\r\n    switch (action.type) {\r\n        case FOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return {...u, followed: true};\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        }\r\n        case UNFOLLOW : {\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        }\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_USERS_TOTAL_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_IN_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFollowing ?\r\n                    [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}\r\nexport const follow = (userID) => ({type: FOLLOW, userID});\r\nexport const unfollow = (userID) => ({type: UNFOLLOW, userID});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setUsersTotalCount = (totalCount) => ({type: SET_USERS_TOTAL_COUNT, count: totalCount});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleFollowingInProgress = (isFollowing, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_IN_PROGRESS,\r\n    isFollowing,\r\n    userId\r\n});\r\nexport const getUsersTh= (currentPage, pageSize) => (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n    dispatch(setCurrentPage(currentPage));\r\n    userAPI.getUsers(currentPage, pageSize).then(data => {\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setUsersTotalCount(data.totalCount));\r\n    })\r\n}\r\nexport const unfollowTh = (userId) => (dispatch) =>{\r\n    dispatch(toggleFollowingInProgress(true, userId));\r\n    userAPI.unfollow(userId).then(response => {\r\n        if (response.data.resultCode == 0) {\r\n            dispatch(unfollow(userId));\r\n        }\r\n        dispatch(toggleFollowingInProgress(false, userId));\r\n    });\r\n}\r\nexport const followTh = (userId) => (dispatch) =>{\r\n    dispatch(toggleFollowingInProgress(true, userId));\r\n    userAPI.follow(userId).then(response => {\r\n        if (response.data.resultCode == 0) {\r\n            dispatch(follow(userId));\r\n        }\r\n        dispatch(toggleFollowingInProgress(false, userId));\r\n    });\r\n}\r\nexport default usersReducer;","import {getProfile, profileAPI} from \"../API/API\";\r\nimport {unfollow} from \"./users-reducer\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_USER_STATUS = 'SET_USER_STATUS';\r\nconst STATUS_UPDATE = 'STATUS_UPDATE';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, text: \"Hello world\", likesCount: 12},\r\n        {id: 2, text: \"This is my first post\", likesCount: 10},\r\n\r\n    ],\r\n    profile: null,\r\n    status: \"\",\r\n}\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts,\r\n                    {id: 6, text: action.newText, likesCount: 0}]\r\n            }\r\n\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        case SET_USER_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        case STATUS_UPDATE:\r\n            return {\r\n                ...state,\r\n                statusInProgress: action.isUpdate\r\n            }\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport const getProfileTh = (userID) => (dispatch) => {\r\n    profileAPI.getProfile(userID).then(response => {\r\n        dispatch(setUserProfile(response.data));\r\n    });\r\n}\r\nexport const getUserStatusTh = (userId) => (dispatch) => {\r\n    profileAPI.getStatus(userId)\r\n        .then(response => {\r\n            dispatch(setUserStatus(response.data));\r\n        });\r\n}\r\nexport const updateStatusTh = (status) => (dispatch) => {\r\n    profileAPI.updateStatus(status)\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setUserStatus(status));\r\n            }\r\n        });\r\n}\r\nexport const addPostActionCreator = (text) => ({type: ADD_POST, newText: text})\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const setUserStatus = (status) => ({type: SET_USER_STATUS, status})\r\n\r\n\r\nexport default profileReducer;","import React from 'react';\r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../Redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        profilePage: state.profilePage,\r\n        profile: state.profilePage.profile\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) =>{\r\n    return {\r\n        addPost: (text) => {\r\n            let action = addPostActionCreator(text);\r\n            dispatch(action);\r\n        },\r\n    }\r\n}\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\nexport  default MyPostsContainer;\r\n\r\n\r\n","import React from 'react';\r\nimport MyPosts from './MyPosts/MyPosts';\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from \"./MyPosts/ProfileInfo/ProfileInfo\";\r\nimport Post from \"./MyPosts/Post/Post\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div className=''>\r\n            <ProfileInfo profile={props.profile} id={props.id} status={props.status} updateStatus={props.updateStatus}\r\n                         isOwner={props.isOwner}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    );\r\n}\r\nexport default Profile;","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsRedirect = (state) => {\r\n    return {\r\n        isAuth: state.authReducer.isAuth\r\n    }\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'}/>;\r\n            return <Component {...this.props}/>;\r\n        }\r\n    }\r\n\r\n let   ConnectedRedirectComponent = connect(mapStateToPropsRedirect)(RedirectComponent);\r\n    return ConnectedRedirectComponent;\r\n}","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport * as axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProfileTh, getUserStatusTh, setUserProfile, updateStatusTh} from \"../../Redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../HOC/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    refreshProfile (){\r\n        let userID = this.props.match.params.userID;\r\n        if (!userID) {\r\n            userID = this.props.id;\r\n        }\r\n        this.props.getProfileTh(userID);\r\n        this.props.getUserStatusTh(userID);\r\n    }\r\n    componentDidMount() {\r\n        debugger\r\n        this.refreshProfile ();\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(this.props.match.params.userID != prevProps.match.params.userID){\r\n            this.refreshProfile ();\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile {...this.props} profile={this.props.profile} id={this.props.id} status={this.props.status}\r\n                         updateStatus={this.props.updateStatusTh} isOwner={!this.props.match.params.userID}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    id: state.authReducer.id,\r\n    status: state.profilePage.status,\r\n});\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {setUserProfile, getProfileTh, getUserStatusTh, updateStatusTh}),\r\n    withAuthRedirect,\r\n    withRouter,\r\n)(ProfileContainer);","import React from 'react';\r\nimport s from './News.module.css'\r\n\r\nconst News = (props) =>{\r\n    return(\r\n        <div>\r\n            News\r\n        </div>\r\n    );\r\n}\r\nexport default News;","import React from 'react';\r\nimport s from './Music.module.css';\r\n\r\nconst Music = (props) =>{\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    );\r\n}\r\nexport default Music;","import React from 'react';\r\nimport s from './Settings.module.css';\r\n\r\nconst Settings = (props) =>{\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    );\r\n}\r\nexport default Settings;","const SEND_MESSAGE = 'SEND-MESSAGE';\r\nlet initialState = {\r\n\r\n    dialogs: [\r\n        {id: 1, name: \"Ruslan\"},\r\n        {id: 2, name: \"Ihor\"},\r\n        {id: 3, name: \"Diana\"},\r\n    ],\r\n    messages: [\r\n        {id: 1, message: \"Hello world\"},\r\n        {id: 2, message: \"Yo\"},\r\n        {id: 3, message: \"Yo\"},\r\n        {id: 3, message: \"Yawawdaao\"},\r\n\r\n    ],\r\n\r\n}\r\n\r\nconst messagesReducer = (state = initialState, action) => {\r\n\r\n\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            return {\r\n                ...state,\r\n                messageText:'',\r\n                messages: [...state.messages,\r\n                    {id: 1,\r\n                    message: action.messageText}]\r\n            }\r\n        default:   return state;\r\n    }\r\n\r\n}\r\nexport const sendMessageActionCreator = (text) => ({type : SEND_MESSAGE, messageText: text})\r\nexport default messagesReducer;","import React from 'react';\r\nimport s from './Dialog.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Dialog = (props) => {\r\n    let path= \"/dialogs/\" + props.id;\r\n    return (\r\n        <div className={s.item}>\r\n           <NavLink to={path} activeClassName={s.active}> {props.name}</NavLink>\r\n        </div>\r\n\r\n    );\r\n}\r\nexport default Dialog;","import React from 'react';\r\nimport s from './Message.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            {props.messages}\r\n        </div>\r\n    );\r\n}\r\nexport default Message;","import React from \"react\";\r\nimport styles from \"./FormControls.module.css\";\r\n\r\nexport const FormControl = ({input, meta, child, ...props}) => {\r\n    const hasError = meta.error && meta.touched;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \" \")}>\r\n            <div>{props.children}</div>\r\n            <div>\r\n                {hasError && <span>{meta.error}</span>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps}= props;\r\n    return <FormControl{...props}><textarea {...input}{...restProps}/></FormControl>\r\n}\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps}= props;\r\n    return <FormControl{...props}><input {...input}{...restProps}/></FormControl>\r\n}","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport Dialog from \"./Dialog/Dialog\";\r\nimport Message from \"./Message/Message\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../Common/FormControls\";\r\nimport {maxLengthCreator, required} from \"../../utilits/validators/validators\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\nconst MessageForm = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name={\"message\"} component={Textarea} validate={[required, maxLength50]}/>\r\n            </div>\r\n            <div>\r\n                <button>Отправить</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nconst MessageReduxForm = reduxForm({\r\n    form: \"message\"\r\n})(MessageForm);\r\nconst Dialogs = (props) => {\r\n\r\n\r\n    let messages = props.messagesPage.messages.map\r\n    (el => (<Message messages={el.message}/>));\r\n\r\n    let dialogs = props.messagesPage.dialogs.map(dialog =>\r\n        (<Dialog name={dialog.name} activeClassName={s.active} id={dialog.id}/>));\r\n\r\n\r\n    let onSubmit = (formData) => {\r\n        let text = formData.message\r\n        props.sendMessage(text);\r\n        formData.message = null;\r\n\r\n    }\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItem}>\r\n                {dialogs}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messages}\r\n                <MessageReduxForm onSubmit={onSubmit}/>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\nexport default Dialogs;","import React from 'react';\r\nimport {messageTextActionCreator, sendMessageActionCreator} from \"../../Redux/messages-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../HOC/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        messagesPage: state.messagesPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (text) => {\r\n            dispatch(sendMessageActionCreator(text));\r\n        },\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\nwithAuthRedirect\r\n)(Dialogs);","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\nconst Navbar = (props) => {\r\n\r\n    return (\r\n        <div className={s.navbar}>\r\n            <nav className={s.nav}>\r\n\r\n                <div className={s.item}>\r\n                    <NavLink to=\"/news\" activeClassName={s.active}> Новости</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to=\"/music\" activeClassName={s.active}>Музыка</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to=\"/settings\" activeClassName={s.active}> Настройки</NavLink>\r\n                </div>\r\n\r\n            </nav>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport Navbar from \"./Navbar\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n        sidebar: state.sidebar\r\n    }\r\n}\r\nlet mapDispatchToProps = () => {\r\n    return{\r\n\r\n    }\r\n}\r\n\r\nconst NavbarContainer = connect(mapStateToProps, mapDispatchToProps)(Navbar);\r\n\r\nexport default NavbarContainer;\r\n","import React, {useState} from 'react';\r\nimport s from \"./Paginator.module.css\";\r\nimport cn from \"classnames\";\r\nimport {Button} from \"antd\";\r\n\r\n\r\nlet Paginator = ({totalItemsCount, portionSize, currentPage, onPageChange}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / portionSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount/portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionNumber = portionNumber * portionSize;\r\n\r\n    return <>\r\n        <div className={s.paginator}>\r\n\r\n          {portionNumber > 1 &&\r\n        <Button onClick={()=> {setPortionNumber (1)}}>First</Button>}\r\n        {portionNumber > 1 &&\r\n        <Button onClick={()=> {setPortionNumber (portionNumber- 1)}}>Previous</Button>}\r\n        {pages.filter(p => p >= leftPortionNumber && p<= rightPortionNumber)\r\n            .map(p => {\r\n            return<Button className={\r\n                cn({[s.selectedPage]: currentPage === p}, s.pageNumber)}\r\n                           key={p}\r\n                           onClick={(e) => {\r\n                               onPageChange(p)\r\n                           }}\r\n            >{p}</Button>\r\n        })}\r\n        {portionCount > portionNumber &&\r\n        <Button onClick={()=>{setPortionNumber(portionNumber+1)}}>Next</Button>}\r\n        {portionCount > portionNumber &&\r\n        <Button onClick={()=>{setPortionNumber(portionCount)}}>Last</Button>}\r\n\r\n    </div>\r\n    </>\r\n}\r\nexport default Paginator;","import s from \"./Users.module.css\";\r\nimport userPhoto from \"../../img/1.png\";\r\nimport React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Paginator from \"../Common/Paginator\";\r\nimport 'antd/dist/antd.css';\r\nimport { Button } from 'antd';\r\n\r\n\r\nconst Users = (props) => {\r\n\r\n    return <div>\r\n        <div>\r\n            <Paginator totalItemsCount={props.totalUsersCount} onPageChange={props.onPageChange} currentPage={props.currentPage}\r\n                       portionSize={props.pageSize} />\r\n        </div>\r\n\r\n        {props.users.map(u => <div key={u.id}>\r\n                    <span>\r\n                        <div>\r\n                            <NavLink to={\"/profile/\" + u.id}>\r\n                            <img src={u.photos.small != null ? u.photos.small : userPhoto} className={s.userPhoto}/>\r\n                        </NavLink>\r\n                            </div>\r\n                        <div>\r\n                            {u.followed ?\r\n                                <Button type=\"primary\" size=\"middle\" disabled={props.followingInProgress.some(id => id === u.id)}\r\n                                        onClick={() => {\r\n                                            props.unfollow(u.id);\r\n                                        }}> Unfollow </Button> :\r\n\r\n                                <Button type=\"primary\" size=\"middle\" disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => {\r\n                                   props.follow(u.id);\r\n\r\n\r\n                                }}>Follow</Button>}\r\n                        </div>\r\n                    </span>\r\n            <span>\r\n                        <span>\r\n                            <div>{u.name}</div>\r\n                            <div>{u.status}</div>\r\n                        </span>\r\n                        <span>\r\n                            <div>\"u.location.country\"</div>\r\n                                <div>{\"u.location.city\"}</div>\r\n                                </span>\r\n                                </span>\r\n        </div>)\r\n        }\r\n    </div>\r\n}\r\nexport default Users;","import {createSelector} from \"reselect\";\r\n\r\nexport const getUsers = (state) => {\r\n   return  state.usersPage.users;\r\n}\r\nexport const getUsersSuperSelector = createSelector(getUsers, (users) => {\r\n   return  users;\r\n})\r\n\r\n\r\nexport const getPageSize = (state) => {\r\n   return  state.usersPage.pageSize;\r\n}\r\nexport const getTotalUsersCount = (state) => {\r\n   return  state.usersPage.totalUsersCount;\r\n}\r\nexport const getCurrentPage = (state) => {\r\n   return  state.usersPage.currentPage;\r\n}\r\nexport const getIsFetching = (state) => {\r\n   return  state.usersPage.isFetching;\r\n}\r\nexport const getFollowingInProgress = (state) => {\r\n   return  state.usersPage.followingInProgress;\r\n}\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow, followTh, getUsersTh,\r\n    setCurrentPage,\r\n    unfollow, unfollowTh\r\n} from \"../../Redux/users-reducer\";\r\n\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../Common/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../HOC/WithAuthRedirect\";\r\nimport {\r\n    getCurrentPage, getFollowingInProgress, getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount, getUsers, getUsersSuperSelector,\r\n} from \"../../Redux/users-selectors\";\r\n\r\nclass UsersAPI extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsersTh(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChange = (pageNumber) => {\r\n        this.props.getUsersTh(pageNumber, this.props.pageSize);\r\n    }\r\n\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChange={this.onPageChange}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   users={this.props.users}\r\n                   isFetching={this.props.isFetching}\r\n                   followingInProgress={this.props.followingInProgress}\r\n                   toggleFollowingInProgress={this.props.toggleFollowingInProgress}\r\n                   unfollow={this.props.unfollowTh}\r\n                   follow={this.props.followTh}\r\n            /></ >\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsersSuperSelector(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n    }\r\n}\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps,\r\n        {\r\n            follow, unfollow, setCurrentPage, getUsersTh, unfollowTh, followTh\r\n        }))(UsersAPI);\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Preloader from \"../Common/Preloader\";\r\nimport {Button} from \"react-bootstrap\";\r\n\r\nconst Header = (props) => {\r\n\r\n    return (\r\n        <header className={s.header}>\r\n        <img src='https://logoza.ru/img/rock.png' />\r\n        <div className={s.loginBlock}>\r\n            {props.isAuth? <div> {props.login} - <Button onClick={props.logout}>Log out</Button></div>\r\n            :<NavLink to={'/login'}>Login</NavLink>}\r\n        </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import {authMe, loginAPI} from \"../API/API\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\nconst SET_AUTH_PROFILE = 'SET_AUTH_PROFILE';\r\n\r\n\r\nlet initialState = {\r\n    id: null,\r\n    login: null,\r\n    email: null,\r\n    isAuth: false,\r\n    isFetching: false,\r\n    authUserProfile: null,\r\n\r\n\r\n}\r\nconst authReducer = (state = initialState, action) => {\r\n\r\n\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                ...action.payload.isAuth,\r\n\r\n            }\r\n        case SET_AUTH_PROFILE:\r\n            return {\r\n                ...state,\r\n                authUserProfile: action.authProfile,\r\n\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}\r\nexport const setAuthUserData = (id, login, email, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    payload: {id, login, email, isAuth}\r\n});\r\nexport const setAuthUserProfile = (authProfile) => ({type: SET_AUTH_PROFILE, authProfile});\r\n\r\n\r\nexport const authMeTh = () => (dispatch) => {\r\n   return  authMe().then(response => {\r\n        if (response.data.resultCode === 0) {\r\n            let {id, login, email} = response.data.data;\r\n            dispatch(setAuthUserData(id, login, email, true));\r\n\r\n        }\r\n\r\n    });\r\n}\r\nexport const login = (email, password, rememberMe) => (dispatch) => {\r\n\r\n    loginAPI.login(email, password, rememberMe).then(response => {\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(authMeTh());\r\n        } else {\r\n            let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n            dispatch(stopSubmit(\"login\", {_error: message}));\r\n        }\r\n\r\n    });\r\n}\r\nexport const logout = () => (dispatch) => {\r\n    loginAPI.logout().then(response => {\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setAuthUserData(null, null, null, false));\r\n        }\r\n\r\n    });\r\n}\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {authMeTh, logout, setAuthUserData, setAuthUserProfile} from \"../../Redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    login: state.authReducer.login,\r\n    isAuth: state.authReducer.isAuth,\r\n    authUserProfile: state.authReducer.authUserProfile,\r\n\r\n});\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from 'react'\r\n//import {Field, reduxForm} from \"redux-form\";\r\n//import {maxLengthCreator, required} from \"../../utilits/validators/validators\";\r\n//import {Input} from \"../Common/FormControls\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport style from \"./../Common/FormControls.module.css\"\r\nimport 'antd/dist/antd.css';\r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\n\r\n//const maxLength20 = maxLengthCreator(20)\r\n\r\nconst LoginForm = (props) => {\r\n\r\n    return (\r\n        <Form\r\n            name=\"basic\"\r\n            labelCol={{\r\n                span: 8,\r\n            }}\r\n            wrapperCol={{\r\n                span: 16,\r\n            }}\r\n            initialValues={{\r\n                remember: true,\r\n            }}\r\n            onFinish={props.onSubmit}\r\n\r\n        >\r\n            <Form.Item\r\n                label=\"Username\"\r\n                name=\"username\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input your username!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input/>\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                label=\"Password\"\r\n                name=\"password\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input your password!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input.Password/>\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                name=\"remember\"\r\n                valuePropName=\"checked\"\r\n                wrapperCol={{\r\n                    offset: 8,\r\n                    span: 16,\r\n                }}\r\n            >\r\n                <Checkbox>Remember me</Checkbox>\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                wrapperCol={{\r\n                    offset: 8,\r\n                    span: 16,\r\n                }}\r\n            >\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                    Submit\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n        /*<form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder={\"Email\"} name={\"email\"} component={Input} validate={[required, maxLength20]}/>\r\n            </div>\r\n            <div>\r\n                <Field placeholder={\"Password\"} name={\"password\"} type={\"password\"} component={Input}\r\n                       validate={[required, maxLength20]}/>\r\n            </div>\r\n            <div>\r\n                <Field type={\"checkbox\"} name={\"rememberMe\"} component={Input}/> Remember me\r\n            </div>\r\n            { props.error && <div className={style.formSummaryError}>\r\n                {props.error}\r\n            </div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>*/\r\n    )\r\n};\r\n/*const LoginReduxForm = reduxForm({\r\n    form: \"login\"\r\n})(LoginForm);*/\r\nconst Login = (props) => {\r\n    const onSubmit = (values) => {\r\n        props.login(values.username, values.password, values.remember);\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    } else {\r\n        return <div>\r\n            <h1>Login</h1>\r\n            <LoginForm onSubmit={onSubmit}/>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react'\r\nimport Login from \"./Login\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../Redux/auth-reducer\";\r\n\r\n\r\nclass LoginContainer extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div><Login login={this.props.login} isAuth={this.props.isAuth}/></div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.authReducer.isAuth\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {login}),\r\n)(LoginContainer);","import {authMeTh} from \"./auth-reducer\";\r\n\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n\r\n\r\n}\r\nconst appReducer = (state = initialState, action) => {\r\n\r\n\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n               initialized: true,\r\n\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}\r\nexport const initializedSuccess = () => ({\r\n    type: INITIALIZED_SUCCESS,\r\n});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(authMeTh());\r\npromise.then(()=>{\r\n    dispatch(initializedSuccess());\r\n});\r\n\r\n\r\n}\r\nexport default appReducer;","import React from 'react';\nimport './App.css';\nimport ProfileContainer from './Components/Profile/ProfileContainer';\nimport News from \"./Components/News/News\";\nimport {NavLink, Route, withRouter} from \"react-router-dom\";\nimport Music from \"./Components/Music/Music\";\nimport Settings from \"./Components/Settings/Settings\";\nimport DialogsContainer from \"./Components/Dialogs/DialogsContainer\";\nimport NavbarContainer from \"./Components/Navbar/NavbarContainer\";\nimport UsersContainer from \"./Components/Users/UsersContainer\";\nimport HeaderContainer from \"./Components/Header/HeaderContainer\";\nimport LoginContainer from \"./Components/Login/LoginContainer\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./Redux/app-reducer\";\nimport Preloader from \"./Components/Common/Preloader\";\nimport Navbar from \"./Components/Navbar/Navbar\";\nimport 'antd/dist/antd.css';\nimport {Layout, Menu, Button} from 'antd';\nimport {\n    MenuUnfoldOutlined,\n    MenuFoldOutlined,\n    UserOutlined,\n    VideoCameraOutlined,\n    FormOutlined,\n    TeamOutlined,\n    UploadOutlined,\n} from '@ant-design/icons';\nimport s from \"./Components/Navbar/Navbar.module.css\";\nimport {logout} from \"./Redux/auth-reducer\";\n\nconst {Header, Sider, Content} = Layout;\n\nclass App extends React.Component {\n    state = {\n        collapsed: false,\n        size: 'large',\n    };\n\n    toggle = () => {\n        this.setState({\n            collapsed: !this.state.collapsed,\n        });\n    };\n\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n    render() {\n        const {size} = this.state;\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n        return <>\n            <Layout>\n                <Sider trigger={null} collapsible collapsed={this.state.collapsed}>\n                    <div className=\"logo\"/>\n                    <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\n                        <Menu.Item key=\"1\" icon={<UserOutlined/>}>\n                            <NavLink to=\"/profile\" activeClassName={s.active}>Профиль</NavLink>\n                        </Menu.Item>\n                        <Menu.Item key=\"2\" icon={<FormOutlined/>}>\n                            <NavLink to=\"/dialogs\" activeClassName={s.active}>Сообщения</NavLink>\n                        </Menu.Item>\n                        <Menu.Item key=\"3\" icon={<TeamOutlined/>}>\n                            <NavLink to=\"/users\" activeClassName={s.active}> Пользователи</NavLink>\n                        </Menu.Item>\n                    </Menu>\n                </Sider>\n                <Layout className=\"site-layout\">\n                    <Header className=\"site-layout-background\" style={{padding: 0}}>\n                        <div className=\"auth-block\"> {this.props.isAuth ?\n                            <div> {this.props.login} - <Button onClick={this.props.logout}>\n                                Logout</Button></div>\n                            : <NavLink to={'/login'}>Login</NavLink>}\n                        </div>\n                        {React.createElement(this.state.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined, {\n                            className: 'trigger',\n                            onClick: this.toggle,\n                        })}\n\n                    </Header>\n                    <Content\n                        className=\"site-layout-background\"\n                        style={{\n                            margin: '24px 16px',\n                            padding: 24,\n                            minHeight: 280,\n                        }}\n                    >\n                        <Route path='/dialogs' render={() => <DialogsContainer/>}/>\n                        <Route path='/profile/:userID?' render={() => <ProfileContainer/>}/>\n                        <Route path='/news' render={() => <News/>}/>\n                        <Route path='/music' render={() => <Music/>}/>\n                        <Route path='/settings' render={() => <Settings/>}/>\n                        <Route path='/users' render={() => <UsersContainer/>}/>\n                        <Route path='/login' render={() => <LoginContainer/>}/>\n                    </Content>\n                </Layout>\n            </Layout>\n\n            {/*<div className='app-wrapper'>\n                <HeaderContainer/>\n\n                <div className='app-wrapper-content'>\n\n                </div>\n                <Navbar/>\n            </div>*/}\n        </>\n\n\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized,\n    login: state.authReducer.login,\n    isAuth: state.authReducer.isAuth,\n    authUserProfile: state.authReducer.authUserProfile\n})\n\nexport default compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp, logout}))(App);","\r\nlet initialState ={\r\n    friendName:[\r\n        {friendsName: \"Diana\"},\r\n        {friendsName: \"Ihor\"},\r\n        {friendsName: \"Ruslan\"}\r\n    ]\r\n}\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n    return state;\r\n}\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport messagesReducer from \"./messages-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddlware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet redusers = combineReducers({\r\n   profilePage: profileReducer,\r\n    messagesPage: messagesReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    authReducer: authReducer,\r\n    app: appReducer,\r\n    form: formReducer,\r\n});\r\n\r\nlet store = createStore(redusers, applyMiddleware(thunkMiddlware));\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from \"./Redux/redux-store\";\nimport {BrowserRouter, HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\n\n\nReactDOM.render(\n    <HashRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </HashRouter>,\n    document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1BCBQ\",\"item\":\"Navbar_item__3RZJI\",\"active\":\"Navbar_active__3bnlt\",\"navbar\":\"Navbar_navbar__2QnsP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3d0hk\"};"],"sourceRoot":""}