{"version":3,"sources":["Components/Dialogs/Message/Message.module.css","Components/Navbar/Navbar.module.css","img/Curve-Loading.gif","Components/Common/Preloader.jsx","img/1.png","Components/Profile/MyPosts/Post/Post.jsx","utilits/validators/validators.js","Components/Common/FormControls.js","Components/Profile/MyPosts/MyPosts.jsx","Components/Profile/MyPosts/ProfileInfo/ProfileStatus.jsx","Components/Profile/MyPosts/ProfileInfo/ProfileStatusWithHooks.jsx","Components/Profile/MyPosts/ProfileInfo/ProfileInfo.jsx","API/API.js","Redux/users-reducer.js","Redux/profile-reducer.js","Components/Profile/MyPosts/MyPostsContainer.jsx","Components/Profile/Profile.jsx","HOC/WithAuthRedirect.jsx","Components/Profile/ProfileContainer.jsx","Components/News/News.js","Components/Music/Music.js","Components/Settings/Settings.js","Redux/messages-reducer.js","Components/Dialogs/Dialog/Dialog.js","Components/Dialogs/Message/Message.js","Components/Dialogs/Dialogs.js","Components/Dialogs/DialogsContainer.js","Components/Navbar/Navbar.jsx","Components/Navbar/NavbarContainer.jsx","Components/Users/Users.js","Redux/users-selectors.js","Components/Users/UsersContainer.jsx","Components/Header/Header.jsx","Redux/auth-reducer.js","Components/Header/HeaderContainer.jsx","Components/Login/Login.jsx","Components/Login/LoginContainer.jsx","Redux/app-reducer.js","App.js","Redux/sidebar-reducer.js","Redux/redux-store.js","index.js","Components/Common/FormControls.module.css","Components/Dialogs/Dialogs.module.css","Components/Profile/MyPosts/Post/Post.module.css","Components/Profile/MyPosts/MyPosts.module.css","Components/Profile/MyPosts/ProfileInfo/ProfileInfo.module.css","Components/Dialogs/Dialog/Dialog.module.css","Components/Users/Users.module.css","Components/Header/Header.module.css"],"names":["module","exports","Preloader","src","preloader","Post","props","profile","className","s","item","photos","small","userPhoto","message","like","onClick","required","value","maxLengthCreator","maxLength","length","FormControl","input","meta","child","hasError","error","touched","styles","formControl","children","Textarea","restProps","Input","maxLength10","AddPostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","validate","placeholder","name","component","MyPosts","posts","profilePage","map","post","text","likesCount","dispatch","postsBlock","formData","postText","addPost","React","Component","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","ProfileInfo","large","largeUserPhoto","id","discriptionBlock","instance","axios","withCredentials","headers","baseURL","userAPI","currentPage","pageSize","get","then","response","data","delete","profileAPI","userId","put","loginAPI","email","password","rememberMe","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_USERS_TOTAL_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_IN_PROGRESS","initialState","users","totalUsersCount","isFetching","followingInProgress","follow","userID","type","unfollow","setCurrentPage","toggleIsFetching","toggleFollowingInProgress","isFollowing","usersReducer","state","action","u","followed","count","filter","ADD_POST","SET_USER_PROFILE","SET_USER_STATUS","STATUS_UPDATE","setUserProfile","setUserStatus","profileReducer","newText","statusInProgress","isUpdate","MyPostsContainer","connect","addPostActionCreator","Profile","mapStateToPropsRedirect","isAuth","authReducer","withAuthRedirect","RedirectComponent","this","to","ProfileContainer","match","params","getProfileTh","getUserStatusTh","updateStatusTh","compose","resultCode","withRouter","News","Music","Settings","SEND_MESSAGE","dialogs","messages","messagesReducer","messageText","Dialog","path","activeClassName","active","Message","maxLength50","MessageReduxForm","Dialogs","messagesPage","el","dialog","dialogsItem","sendMessage","sendMessageActionCreator","Navbar","navbar","nav","sidebar","Users","pagesCount","Math","ceil","pages","i","push","p","selectedPage","onPageChange","Button","size","disabled","some","getUsersSuperSelector","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersAPI","pageNumber","getUsersTh","unfollowTh","followTh","totalCount","items","Header","header","loginBlock","login","logout","SET_USER_DATA","SET_AUTH_PROFILE","authUserProfile","setAuthUserData","payload","authMeTh","authProfile","HeaderContainer","maxLength20","LoginReduxForm","style","formSummaryError","Login","LoginContainer","stopSubmit","_error","INITIALIZED_SUCCESS","initialized","appReducer","App","initializeApp","render","DialogsContainer","UsersContainer","app","friendName","friendsName","sidebarReducer","redusers","combineReducers","formReducer","store","createStore","applyMiddleware","thunkMiddlware","window","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.1a764b01.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Message_item__3PE_v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1BCBQ\",\"item\":\"Navbar_item__3RZJI\",\"active\":\"Navbar_active__3bnlt\",\"navbar\":\"Navbar_navbar__2QnsP\"};","export default __webpack_public_path__ + \"static/media/Curve-Loading.5e01ee79.gif\";","import React from 'react';\r\nimport preloader from '../../img/Curve-Loading.gif';\r\n\r\n\r\nconst Preloader = () => {\r\n    return <div>\r\n        <img src={preloader}/>\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","export default __webpack_public_path__ + \"static/media/1.a2446033.png\";","import React from 'react';\r\nimport s from './Post.module.css';\r\nimport Preloader from \"../../../Common/Preloader\";\r\nimport userPhoto from \"../../../../img/1.png\";\r\nconst Post = (props) => {\r\n    let addLike = () => {\r\n\r\n    }\r\n    if (!props.profile){\r\n        return null\r\n    }\r\n    return (\r\n        <div className={s.item}>\r\n            <img src={props.profile.photos.small != null ? props.profile.photos.small : userPhoto} className={s.userPhoto}/>\r\n            {props.message}\r\n            <div>\r\n                <span>like {props.like}</span>\r\n            </div>\r\n            <div><button onClick={addLike}>Like</button></div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Post;","export const required = value => {\r\n    if (value) return undefined;\r\n\r\n    return \"Field is required\";\r\n}\r\n\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}\r\n\r\n","import React from \"react\";\r\nimport styles from \"./FormControls.module.css\";\r\n\r\nexport const FormControl = ({input, meta, child, ...props}) => {\r\n    const hasError = meta.error && meta.touched;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \" \")}>\r\n            <div>{props.children}</div>\r\n            <div>\r\n                {hasError && <span>{meta.error}</span>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps}= props;\r\n    return <FormControl{...props}><textarea {...input}{...restProps}/></FormControl>\r\n}\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps}= props;\r\n    return <FormControl{...props}><input {...input}{...restProps}/></FormControl>\r\n}","import React from 'react';\r\nimport Post from './Post/Post';\r\nimport s from './MyPosts.module.css'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utilits/validators/validators\";\r\nimport {Textarea} from \"../../Common/FormControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddPostForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field validate={[required, maxLength10]} placeholder={\"Post\"} name={\"Post\"} component={Textarea}/>\r\n        </div>\r\n        <div>\r\n            <button>New post</button>\r\n        </div>\r\n    </form>\r\n}\r\nconst AddPostReduxForm = reduxForm({\r\n    form: \"addPost\"\r\n})(AddPostForm);\r\n\r\nconst MyPosts = (props) => {\r\n    let posts = props.profilePage.posts.map(post => (<Post message={post.text}\r\n                                                           like={post.likesCount} dispatch={props.dispatch}\r\n                                                           profile={props.profile}/>))\r\n    if (!props.profile) {\r\n        return null\r\n    }\r\n    const onSubmit = (formData) => {\r\n        let postText = formData.Post\r\n        props.addPost(postText);\r\n        formData.Post = null;\r\n    }\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddPostReduxForm onSubmit={onSubmit}/>\r\n\r\n            <div className={s.posts}>\r\n                {posts}\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default MyPosts;\r\n","import React from \"react\";\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n    state = {\r\n        editMode: false,\r\n        localStatus: this.props.status\r\n    }\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n\r\n    }\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n\r\n        this.props.updateStatus(this.state.localStatus);\r\n    }\r\n\r\n    updateText = (e) => {\r\n        this.setState({\r\n            localStatus: e.currentTarget.value\r\n        })\r\n\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if(prevProps.status !== this.props.status){\r\n            this.setState({\r\n                localStatus: this.props.status\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div>\r\n                {!this.state.editMode &&\r\n                <div>\r\n                    <span onDoubleClick={this.activateEditMode}>{this.props.status || \"------\"}</span>\r\n                </div>\r\n                }\r\n                {this.state.editMode &&\r\n                <div>\r\n                    <input autoFocus={true} onBlur={this.deactivateEditMode} onChange={this.updateText}\r\n                           value={this.state.localStatus}/>\r\n                </div>\r\n                }\r\n            </div>\r\n        )\r\n            ;\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React, {useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n\r\n    }\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n    return (\r\n\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{props.status || \"------\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input autoFocus={true} onBlur={deactivateEditMode} onChange={onStatusChange}\r\n                       value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n        ;\r\n\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport preloader from '../../../../img/Curve-Loading.gif';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../../Common/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport userPhoto from \"../../../../img/1.png\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <div>\r\n            <Preloader/>\r\n        </div>\r\n    }\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img\r\n                    src={props.profile.photos.large != null ? props.profile.photos.large : userPhoto}\r\n                    className={s.largeUserPhoto}/>\r\n                <ProfileStatusWithHooks id={props.id} status={props.status} updateStatus={props.updateStatus}/>\r\n            </div>\r\n            <div className={s.discriptionBlock}>\r\n\r\n                avatar + description\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    headers: {\r\n        'API-KEY': 'cc3bd8cc-4d54-4fd5-94a6-1a89051413f6'\r\n    },\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n});\r\nexport const userAPI = {\r\n    getUsers(currentPage, pageSize) {\r\n        return instance.get(`users?page=${currentPage} &count=${pageSize}`)\r\n            .then(response => response.data);\r\n    },\r\n\r\n    unfollow(id) {\r\n        return instance.delete(`follow/${id}`)\r\n    },\r\n    follow(id) {\r\n        return instance.post(`follow/${id}`)\r\n    }\r\n}\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId)\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {status: status})\r\n    }\r\n}\r\nexport const loginAPI = {\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe});\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n}\r\nexport const authMe = () => {\r\n    return instance.get(`auth/me`)\r\n}","import {userAPI} from \"../API/API\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_USERS_TOTAL_COUNT = 'SET_USERS_TOTAL_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_IN_PROGRESS = 'TOGGLE_IS_FOLLOWING_IN_PROGRESS';\r\n\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [],\r\n}\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n\r\n    switch (action.type) {\r\n        case FOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return {...u, followed: true};\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        }\r\n        case UNFOLLOW : {\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        }\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_USERS_TOTAL_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_IN_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFollowing ?\r\n                    [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}\r\nexport const follow = (userID) => ({type: FOLLOW, userID});\r\nexport const unfollow = (userID) => ({type: UNFOLLOW, userID});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setUsersTotalCount = (totalCount) => ({type: SET_USERS_TOTAL_COUNT, count: totalCount});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleFollowingInProgress = (isFollowing, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_IN_PROGRESS,\r\n    isFollowing,\r\n    userId\r\n});\r\nexport const getUsersTh= (currentPage, pageSize) => (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n    dispatch(setCurrentPage(currentPage));\r\n    userAPI.getUsers(currentPage, pageSize).then(data => {\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setUsersTotalCount(data.totalCount));\r\n    })\r\n}\r\nexport const unfollowTh = (userId) => (dispatch) =>{\r\n    dispatch(toggleFollowingInProgress(true, userId));\r\n    userAPI.unfollow(userId).then(response => {\r\n        if (response.data.resultCode == 0) {\r\n            dispatch(unfollow(userId));\r\n        }\r\n        dispatch(toggleFollowingInProgress(false, userId));\r\n    });\r\n}\r\nexport const followTh = (userId) => (dispatch) =>{\r\n    dispatch(toggleFollowingInProgress(true, userId));\r\n    userAPI.follow(userId).then(response => {\r\n        if (response.data.resultCode == 0) {\r\n            dispatch(follow(userId));\r\n        }\r\n        dispatch(toggleFollowingInProgress(false, userId));\r\n    });\r\n}\r\nexport default usersReducer;","import {getProfile, profileAPI} from \"../API/API\";\r\nimport {unfollow} from \"./users-reducer\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_USER_STATUS = 'SET_USER_STATUS';\r\nconst STATUS_UPDATE = 'STATUS_UPDATE';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, text: \"Hello world\", likesCount: 12},\r\n        {id: 2, text: \"This is my first post\", likesCount: 10},\r\n\r\n    ],\r\n    profile: null,\r\n    status: \"\",\r\n}\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts,\r\n                    {id: 6, text: action.newText, likesCount: 0}]\r\n            }\r\n\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        case SET_USER_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        case STATUS_UPDATE:\r\n            return {\r\n                ...state,\r\n                statusInProgress: action.isUpdate\r\n            }\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport const getProfileTh = (userID) => (dispatch) => {\r\n    profileAPI.getProfile(userID).then(response => {\r\n        dispatch(setUserProfile(response.data));\r\n    });\r\n}\r\nexport const getUserStatusTh = (userId) => (dispatch) => {\r\n    profileAPI.getStatus(userId)\r\n        .then(response => {\r\n            dispatch(setUserStatus(response.data));\r\n        });\r\n}\r\nexport const updateStatusTh = (status) => (dispatch) => {\r\n    profileAPI.updateStatus(status)\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setUserStatus(status));\r\n            }\r\n        });\r\n}\r\nexport const addPostActionCreator = (text) => ({type: ADD_POST, newText: text})\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const setUserStatus = (status) => ({type: SET_USER_STATUS, status})\r\n\r\n\r\nexport default profileReducer;","import React from 'react';\r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../Redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        profilePage: state.profilePage,\r\n        profile: state.profilePage.profile\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) =>{\r\n    return {\r\n        addPost: (text) => {\r\n            let action = addPostActionCreator(text);\r\n            dispatch(action);\r\n        },\r\n    }\r\n}\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\nexport  default MyPostsContainer;\r\n\r\n\r\n","import React from 'react';\r\nimport MyPosts from './MyPosts/MyPosts';\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from \"./MyPosts/ProfileInfo/ProfileInfo\";\r\nimport Post from \"./MyPosts/Post/Post\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div className=''>\r\n            <ProfileInfo profile={props.profile} id={props.id} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    );\r\n}\r\nexport default Profile;","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsRedirect = (state) => {\r\n    return {\r\n        isAuth: state.authReducer.isAuth\r\n    }\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'}/>;\r\n            return <Component {...this.props}/>;\r\n        }\r\n    }\r\n\r\n let   ConnectedRedirectComponent = connect(mapStateToPropsRedirect)(RedirectComponent);\r\n    return ConnectedRedirectComponent;\r\n}","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport * as axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProfileTh, getUserStatusTh, setUserProfile, updateStatusTh} from \"../../Redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../HOC/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userID = this.props.match.params.userID;\r\n        if (!userID) {\r\n            userID = this.props.id;\r\n        }\r\n\r\n        this.props.getProfileTh(userID);\r\n\r\n\r\n        this.props.getUserStatusTh(userID);\r\n\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile {...this.props} profile={this.props.profile} id={this.props.id} status={this.props.status}\r\n                         updateStatus={this.props.updateStatusTh}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    id: state.authReducer.id,\r\n    status: state.profilePage.status,\r\n});\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {setUserProfile, getProfileTh, getUserStatusTh, updateStatusTh}),\r\n    withAuthRedirect,\r\n    withRouter,\r\n\r\n)(ProfileContainer);","import React from 'react';\r\nimport s from './News.module.css'\r\n\r\nconst News = (props) =>{\r\n    return(\r\n        <div>\r\n            News\r\n        </div>\r\n    );\r\n}\r\nexport default News;","import React from 'react';\r\nimport s from './Music.module.css';\r\n\r\nconst Music = (props) =>{\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    );\r\n}\r\nexport default Music;","import React from 'react';\r\nimport s from './Settings.module.css';\r\n\r\nconst Settings = (props) =>{\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    );\r\n}\r\nexport default Settings;","const SEND_MESSAGE = 'SEND-MESSAGE';\r\nlet initialState = {\r\n\r\n    dialogs: [\r\n        {id: 1, name: \"Ruslan\"},\r\n        {id: 2, name: \"Ihor\"},\r\n        {id: 3, name: \"Diana\"},\r\n    ],\r\n    messages: [\r\n        {id: 1, message: \"Hello world\"},\r\n        {id: 2, message: \"Yo\"},\r\n        {id: 3, message: \"Yo\"},\r\n        {id: 3, message: \"Yawawdaao\"},\r\n\r\n    ],\r\n\r\n}\r\n\r\nconst messagesReducer = (state = initialState, action) => {\r\n\r\n\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            return {\r\n                ...state,\r\n                messageText:'',\r\n                messages: [...state.messages,\r\n                    {id: 1,\r\n                    message: action.messageText}]\r\n            }\r\n        default:   return state;\r\n    }\r\n\r\n}\r\nexport const sendMessageActionCreator = (text) => ({type : SEND_MESSAGE, messageText: text})\r\nexport default messagesReducer;","import React from 'react';\r\nimport s from './Dialog.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Dialog = (props) => {\r\n    let path= \"/dialogs/\" + props.id;\r\n    return (\r\n        <div className={s.item}>\r\n           <NavLink to={path} activeClassName={s.active}> {props.name}</NavLink>\r\n        </div>\r\n\r\n    );\r\n}\r\nexport default Dialog;","import React from 'react';\r\nimport s from './Message.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            {props.messages}\r\n        </div>\r\n    );\r\n}\r\nexport default Message;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport Dialog from \"./Dialog/Dialog\";\r\nimport Message from \"./Message/Message\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../Common/FormControls\";\r\nimport {maxLengthCreator, required} from \"../../utilits/validators/validators\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\nconst MessageForm = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name={\"message\"} component={Textarea} validate={[required, maxLength50]}/>\r\n            </div>\r\n            <div>\r\n                <button>Отправить</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nconst MessageReduxForm = reduxForm({\r\n    form: \"message\"\r\n})(MessageForm);\r\nconst Dialogs = (props) => {\r\n\r\n\r\n    let messages = props.messagesPage.messages.map\r\n    (el => (<Message messages={el.message}/>));\r\n\r\n    let dialogs = props.messagesPage.dialogs.map(dialog =>\r\n        (<Dialog name={dialog.name} activeClassName={s.active} id={dialog.id}/>));\r\n\r\n\r\n    let onSubmit = (formData) => {\r\n        let text = formData.message\r\n        props.sendMessage(text);\r\n        formData.message = null;\r\n\r\n    }\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItem}>\r\n                {dialogs}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messages}\r\n                <MessageReduxForm onSubmit={onSubmit}/>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\nexport default Dialogs;","import React from 'react';\r\nimport {messageTextActionCreator, sendMessageActionCreator} from \"../../Redux/messages-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../HOC/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        messagesPage: state.messagesPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (text) => {\r\n            dispatch(sendMessageActionCreator(text));\r\n        },\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\nwithAuthRedirect\r\n)(Dialogs);","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\nconst Navbar = (props) => {\r\n\r\n    return (\r\n        <div className={s.navbar}>\r\n            <nav className={s.nav}>\r\n                <div className={s.item}>\r\n                    <NavLink to=\"/profile\" activeClassName={s.active}>Профиль</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to=\"/dialogs\" activeClassName={s.active}>Сообщения</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to=\"/news\" activeClassName={s.active}> Новости</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to=\"/music\" activeClassName={s.active}>Музыка</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to=\"/settings\" activeClassName={s.active}> Настройки</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to=\"/users\" activeClassName={s.active}> Пользователи</NavLink>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport Navbar from \"./Navbar\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n        sidebar: state.sidebar\r\n    }\r\n}\r\nlet mapDispatchToProps = () => {\r\n    return{\r\n\r\n    }\r\n}\r\n\r\nconst NavbarContainer = connect(mapStateToProps, mapDispatchToProps)(Navbar);\r\n\r\nexport default NavbarContainer;\r\n","import s from \"./Users.module.css\";\r\nimport userPhoto from \"../../img/1.png\";\r\nimport React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Button} from \"react-bootstrap\";\r\n\r\n\r\n\r\nconst Users = (props) => {\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    return <div>\r\n        <div>\r\n            {pages.map(p => {\r\n                return <button className={props.currentPage === p && s.selectedPage}\r\n                               onClick={(e) => {\r\n                                   props.onPageChange(p)\r\n                               }}\r\n                >{p}</button>\r\n            })}\r\n\r\n        </div>\r\n\r\n        {props.users.map(u => <div key={u.id}>\r\n                    <span>\r\n                        <div>\r\n                            <NavLink to={\"/profile/\" + u.id}>\r\n                            <img src={u.photos.small != null ? u.photos.small : userPhoto} className={s.userPhoto}/>\r\n                        </NavLink>\r\n                            </div>\r\n                        <div>\r\n                            {u.followed ?\r\n                                <Button size=\"sm\" disabled={props.followingInProgress.some(id => id === u.id)}\r\n                                        onClick={() => {\r\n                                            props.unfollow(u.id);\r\n                                        }}> Unfollow </Button> :\r\n\r\n                                <Button size=\"sm\" disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => {\r\n                                   props.follow(u.id);\r\n\r\n\r\n                                }}>Follow</Button>}\r\n                        </div>\r\n                    </span>\r\n            <span>\r\n                        <span>\r\n                            <div>{u.name}</div>\r\n                            <div>{u.status}</div>\r\n                        </span>\r\n                        <span>\r\n                            <div>\"u.location.country\"</div>\r\n                                <div>{\"u.location.city\"}</div>\r\n                                </span>\r\n                                </span>\r\n        </div>)\r\n        }\r\n    </div>\r\n}\r\nexport default Users;","import {createSelector} from \"reselect\";\r\n\r\nexport const getUsers = (state) => {\r\n   return  state.usersPage.users;\r\n}\r\nexport const getUsersSuperSelector = createSelector(getUsers, (users) => {\r\n   return  users;\r\n})\r\n\r\n\r\nexport const getPageSize = (state) => {\r\n   return  state.usersPage.pageSize;\r\n}\r\nexport const getTotalUsersCount = (state) => {\r\n   return  state.usersPage.totalUsersCount;\r\n}\r\nexport const getCurrentPage = (state) => {\r\n   return  state.usersPage.currentPage;\r\n}\r\nexport const getIsFetching = (state) => {\r\n   return  state.usersPage.isFetching;\r\n}\r\nexport const getFollowingInProgress = (state) => {\r\n   return  state.usersPage.followingInProgress;\r\n}\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow, followTh, getUsersTh,\r\n    setCurrentPage,\r\n    unfollow, unfollowTh\r\n} from \"../../Redux/users-reducer\";\r\n\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../Common/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../HOC/WithAuthRedirect\";\r\nimport {\r\n    getCurrentPage, getFollowingInProgress, getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount, getUsers, getUsersSuperSelector,\r\n} from \"../../Redux/users-selectors\";\r\n\r\nclass UsersAPI extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsersTh(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChange = (pageNumber) => {\r\n        this.props.getUsersTh(pageNumber, this.props.pageSize);\r\n    }\r\n\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChange={this.onPageChange}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   users={this.props.users}\r\n                   isFetching={this.props.isFetching}\r\n                   followingInProgress={this.props.followingInProgress}\r\n                   toggleFollowingInProgress={this.props.toggleFollowingInProgress}\r\n                   unfollow={this.props.unfollowTh}\r\n                   follow={this.props.followTh}\r\n            /></ >\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsersSuperSelector(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n    }\r\n}\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps,\r\n        {\r\n            follow, unfollow, setCurrentPage, getUsersTh, unfollowTh, followTh\r\n        }))(UsersAPI);\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Preloader from \"../Common/Preloader\";\r\nimport {Button} from \"react-bootstrap\";\r\n\r\nconst Header = (props) => {\r\n\r\n    return (\r\n        <header className={s.header}>\r\n        <img src='https://logoza.ru/img/rock.png' />\r\n        <div className={s.loginBlock}>\r\n            {props.isAuth? <div> {props.login} - <Button onClick={props.logout}>Log out</Button></div>\r\n            :<NavLink to={'/login'}>Login</NavLink>}\r\n        </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import {authMe, loginAPI} from \"../API/API\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\nconst SET_AUTH_PROFILE = 'SET_AUTH_PROFILE';\r\n\r\n\r\nlet initialState = {\r\n    id: null,\r\n    login: null,\r\n    email: null,\r\n    isAuth: false,\r\n    isFetching: false,\r\n    authUserProfile: null,\r\n\r\n\r\n}\r\nconst authReducer = (state = initialState, action) => {\r\n\r\n\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                ...action.payload.isAuth,\r\n\r\n            }\r\n        case SET_AUTH_PROFILE:\r\n            return {\r\n                ...state,\r\n                authUserProfile: action.authProfile,\r\n\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}\r\nexport const setAuthUserData = (id, login, email, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    payload: {id, login, email, isAuth}\r\n});\r\nexport const setAuthUserProfile = (authProfile) => ({type: SET_AUTH_PROFILE, authProfile});\r\n\r\n\r\nexport const authMeTh = () => (dispatch) => {\r\n   return  authMe().then(response => {\r\n        if (response.data.resultCode === 0) {\r\n            let {id, login, email} = response.data.data;\r\n            dispatch(setAuthUserData(id, login, email, true));\r\n\r\n        }\r\n\r\n    });\r\n}\r\nexport const login = (email, password, rememberMe) => (dispatch) => {\r\n\r\n    loginAPI.login(email, password, rememberMe).then(response => {\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(authMeTh());\r\n        } else {\r\n            let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n            dispatch(stopSubmit(\"login\", {_error: message}));\r\n        }\r\n\r\n    });\r\n}\r\nexport const logout = () => (dispatch) => {\r\n    loginAPI.logout().then(response => {\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setAuthUserData(null, null, null, false));\r\n        }\r\n\r\n    });\r\n}\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {authMeTh, logout, setAuthUserData, setAuthUserProfile} from \"../../Redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    login: state.authReducer.login,\r\n    isAuth: state.authReducer.isAuth,\r\n    authUserProfile: state.authReducer.authUserProfile,\r\n\r\n});\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from 'react'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../utilits/validators/validators\";\r\nimport {Input} from \"../Common/FormControls\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport style from \"./../Common/FormControls.module.css\"\r\n\r\nconst maxLength20 = maxLengthCreator(20)\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder={\"Email\"} name={\"email\"} component={Input} validate={[required, maxLength20]}/>\r\n            </div>\r\n            <div>\r\n                <Field placeholder={\"Password\"} name={\"password\"} type={\"password\"} component={Input}\r\n                       validate={[required, maxLength20]}/>\r\n            </div>\r\n            <div>\r\n                <Field type={\"checkbox\"} name={\"rememberMe\"} component={Input}/> Remember me\r\n            </div>\r\n            { props.error && <div className={style.formSummaryError}>\r\n                {props.error}\r\n            </div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\nconst LoginReduxForm = reduxForm({\r\n    form: \"login\"\r\n})(LoginForm);\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe);\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    } else {\r\n        return <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react'\r\nimport Login from \"./Login\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../Redux/auth-reducer\";\r\n\r\n\r\nclass LoginContainer extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div><Login login={this.props.login} isAuth={this.props.isAuth}/></div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.authReducer.isAuth\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {login}),\r\n)(LoginContainer);","import {authMeTh} from \"./auth-reducer\";\r\n\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n\r\n\r\n}\r\nconst appReducer = (state = initialState, action) => {\r\n\r\n\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n               initialized: true,\r\n\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}\r\nexport const initializedSuccess = () => ({\r\n    type: INITIALIZED_SUCCESS,\r\n});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(authMeTh());\r\npromise.then(()=>{\r\n    dispatch(initializedSuccess());\r\n});\r\n\r\n\r\n}\r\nexport default appReducer;","import React from 'react';\nimport './App.css';\nimport ProfileContainer from './Components/Profile/ProfileContainer';\nimport News from \"./Components/News/News\";\nimport {Route, withRouter} from \"react-router-dom\";\nimport Music from \"./Components/Music/Music\";\nimport Settings from \"./Components/Settings/Settings\";\nimport DialogsContainer from \"./Components/Dialogs/DialogsContainer\";\nimport NavbarContainer from \"./Components/Navbar/NavbarContainer\";\nimport UsersContainer from \"./Components/Users/UsersContainer\";\nimport HeaderContainer from \"./Components/Header/HeaderContainer\";\nimport LoginContainer from \"./Components/Login/LoginContainer\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./Redux/app-reducer\";\nimport Preloader from \"./Components/Common/Preloader\";\nimport Navbar from \"./Components/Navbar/Navbar\";\n\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n        return (\n\n            <div className='app-wrapper'>\n                <HeaderContainer/>\n\n                <div className='app-wrapper-content'>\n                    <Route path='/dialogs' render={() => <DialogsContainer/>}/>\n                    <Route path='/profile/:userID?' render={() => <ProfileContainer/>}/>\n                    <Route path='/news' render={() => <News/>}/>\n                    <Route path='/music' render={() => <Music/>}/>\n                    <Route path='/settings' render={() => <Settings/>}/>\n                    <Route path='/users' render={() => <UsersContainer/>}/>\n                    <Route path='/login' render={() => <LoginContainer/>}/>\n                </div>\n                <Navbar/>\n            </div>\n\n        );\n\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n})\n\nexport default compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp}))(App);","\r\nlet initialState ={\r\n    friendName:[\r\n        {friendsName: \"Diana\"},\r\n        {friendsName: \"Ihor\"},\r\n        {friendsName: \"Ruslan\"}\r\n    ]\r\n}\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n    return state;\r\n}\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport messagesReducer from \"./messages-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddlware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet redusers = combineReducers({\r\n   profilePage: profileReducer,\r\n    messagesPage: messagesReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    authReducer: authReducer,\r\n    app: appReducer,\r\n    form: formReducer,\r\n});\r\n\r\nlet store = createStore(redusers, applyMiddleware(thunkMiddlware));\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from \"./Redux/redux-store\";\nimport {BrowserRouter, HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\n\n\nReactDOM.render(\n    <HashRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </HashRouter>,\n    document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__2Y3MO\",\"error\":\"FormControls_error__3fwNV\",\"formSummaryError\":\"FormControls_formSummaryError__3uC7c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3d0hk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__qgLu_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__IKVWh\",\"posts\":\"MyPosts_posts__2281S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"discriptionBlock\":\"ProfileInfo_discriptionBlock__18aui\",\"largeUserPhoto\":\"ProfileInfo_largeUserPhoto__2cOi9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Dialog_item__1E3wH\",\"active\":\"Dialog_active__22o0r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__3V6cJ\",\"selectedPage\":\"Users_selectedPage__30Z6v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1Ya28\",\"loginBlock\":\"Header_loginBlock__AUhM_\"};"],"sourceRoot":""}