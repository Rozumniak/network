{"version":3,"sources":["Components/Dialogs/Dialogs.module.css","Components/Navbar/TopFriends/TopFriends.module.css","Components/Profile/MyPosts/Post/Post.module.css","Components/Profile/MyPosts/MyPosts.module.css","Components/Profile/MyPosts/ProfileInfo/ProfileInfo.module.css","Components/Dialogs/Dialog/Dialog.module.css","Components/Users/Users.module.css","Components/Header/Header.module.css","Components/Dialogs/Message/Message.module.css","Components/Navbar/Navbar.module.css","Components/Navbar/TopFriends/TopFriends.jsx","Components/Navbar/Navbar.jsx","img/Curve-Loading.gif","Components/Preloader.jsx","img/1.png","Components/Profile/MyPosts/Post/Post.jsx","Components/Profile/MyPosts/MyPosts.jsx","Components/Profile/MyPosts/ProfileInfo/ProfileStatus.jsx","Components/Profile/MyPosts/ProfileInfo/ProfileInfo.jsx","API/API.js","Redux/users-reducer.js","Redux/profile-reducer.js","Components/Profile/MyPosts/MyPostsContainer.jsx","Components/Profile/Profile.jsx","HOC/WithAuthRedirect.jsx","Components/Profile/ProfileContainer.jsx","Components/Dialogs/Dialog/Dialog.js","Components/Dialogs/Message/Message.js","Components/Dialogs/Dialogs.js","Components/News/News.js","Components/Music/Music.js","Components/Settings/Settings.js","Redux/messages-reducer.js","Components/Dialogs/DialogsContainer.js","Components/Navbar/NavbarContainer.jsx","Components/Users/Users.js","Components/Users/UsersContainer.jsx","Components/Header/Header.jsx","Redux/auth-reducer.js","Components/Header/HeaderContainer.jsx","Components/Login/Login.jsx","App.js","Redux/sidebar-reducer.js","Redux/redux-store.js","index.js"],"names":["module","exports","TopFriends","props","className","s","best_friends","friend_ava","src","friendName","Navbar","friends","sidebar","map","el","friendsName","navbar","nav","item","to","activeClassName","active","bestFriend","Preloader","preloader","Post","profile","photos","small","userPhoto","message","like","onClick","MyPosts","posts","profilePage","post","text","likesCount","dispatch","newPost","React","createRef","postsBlock","onChange","current","value","onPostChange","ref","newPostText","addPost","ProfileStatus","state","editMode","localStatus","status","activateEditMode","setState","deactivateEditMode","updateStatus","updateText","e","currentTarget","prevProps","prevState","this","onDoubleClick","autoFocus","onBlur","Component","ProfileInfo","large","largeUserPhoto","id","discriptionBlock","instance","axios","withCredentials","headers","baseURL","userAPI","currentPage","pageSize","get","then","response","data","delete","profileAPI","userId","put","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_USERS_TOTAL_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_IN_PROGRESS","initialState","users","totalUsersCount","isFetching","followingInProgress","follow","userID","type","unfollow","toggleIsFetching","toggleFollowingInProgress","isFollowing","usersReducer","action","u","followed","count","filter","ADD_POST","UPDATE_NEW_POST_TEXT","SET_USER_PROFILE","SET_USER_STATUS","STATUS_UPDATE","setUserProfile","setUserStatus","profileReducer","body","newText","statusInProgress","isUpdate","MyPostsContainer","connect","action1","updateNewPostTextActionCreator","Profile","mapStateToPropsRedirect","isAuth","authReducer","withAuthRedirect","RedirectComponent","ProfileContainer","match","params","getProfileTh","getUserStatusTh","updateStatusTh","compose","resultCode","withRouter","Dialog","path","name","Message","messages","Dialogs","messagesPage","newMessage","dialogs","dialog","dialogsItem","messageChange","messageText","sendMessage","News","Music","Settings","SEND_MESSAGE","UPDATE_NEW_MESSAGE_TEXT","messagesReducer","NavbarContainer","Users","pagesCount","Math","ceil","pages","i","push","p","Button","variant","size","selectedPage","onPageChange","disabled","some","UsersAPI","pageNumber","getUsersTh","unfollowTh","followTh","usersPage","setCurrentPage","totalCount","items","Header","header","loginBlock","login","SET_USER_DATA","SET_AUTH_PROFILE","email","authUserProfile","setAuthUserData","authProfile","HeaderContainer","authMeTh","setAuthUserProfile","Login","App","render","DialogsContainer","UsersContainer","sidebarReducer","redusers","combineReducers","store","createStore","applyMiddleware","thunkMiddlware","window","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.96176c78.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3d0hk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend_ava\":\"TopFriends_friend_ava__38fXq\",\"friend_name\":\"TopFriends_friend_name__thUpe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__qgLu_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__IKVWh\",\"posts\":\"MyPosts_posts__2281S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"discriptionBlock\":\"ProfileInfo_discriptionBlock__18aui\",\"largeUserPhoto\":\"ProfileInfo_largeUserPhoto__2cOi9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Dialog_item__1E3wH\",\"active\":\"Dialog_active__22o0r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__3V6cJ\",\"selectedPage\":\"Users_selectedPage__30Z6v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1Ya28\",\"loginBlock\":\"Header_loginBlock__AUhM_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Message_item__3PE_v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1BCBQ\",\"item\":\"Navbar_item__3RZJI\",\"active\":\"Navbar_active__3bnlt\",\"bestFriend\":\"Navbar_bestFriend__2bEkG\",\"navbar\":\"Navbar_navbar__2QnsP\"};","import React from 'react';\r\nimport s from './TopFriends.module.css'\r\n\r\nconst TopFriends = (props) => {\r\n    return (\r\n        <div className={s.best_friends}>\r\n            <div className={s.friend_ava}>\r\n                <img\r\n                    src=\"https://www.nj.com/resizer/h8MrN0-Nw5dB5FOmMVGMmfVKFJo=/450x0/smart/cloudfront-us-east-1.images.arcpublishing.com/advancelocal/SJGKVE5UNVESVCW7BBOHKQCZVE.jpg\"/>\r\n                {props.friendName}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default TopFriends;","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport TopFriends from \"./TopFriends/TopFriends\";\r\n\r\n\r\n\r\nconst Navbar = (props) => {\r\n    let friends = props.sidebar.friendName.map\r\n    (el => (<TopFriends friendName={el.friendsName}/>));\r\n    return (\r\n        <div className={s.navbar}>\r\n            <nav className={s.nav}>\r\n                <div className={s.item}>\r\n                    <NavLink to=\"/profile\" activeClassName={s.active}>Профиль</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to=\"/dialogs\" activeClassName={s.active}>Сообщения</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to=\"/news\" activeClassName={s.active}> Новости</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to=\"/music\" activeClassName={s.active}>Музыка</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to=\"/settings\" activeClassName={s.active}> Настройки</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to=\"/users\" activeClassName={s.active}> Пользователи</NavLink>\r\n                </div>\r\n            </nav>\r\n            <div className={s.bestFriend}>{friends}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navbar;","export default __webpack_public_path__ + \"static/media/Curve-Loading.5e01ee79.gif\";","import React from 'react';\r\nimport preloader from '../img/Curve-Loading.gif';\r\n\r\n\r\nconst Preloader = () => {\r\n    return <div>\r\n        <img src={preloader}/>\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","export default __webpack_public_path__ + \"static/media/1.a2446033.png\";","import React from 'react';\r\nimport s from './Post.module.css';\r\nimport Preloader from \"../../../Preloader\";\r\nimport userPhoto from \"../../../../img/1.png\";\r\nconst Post = (props) => {\r\n    let addLike = () => {\r\n\r\n    }\r\n    if (!props.profile){\r\n        return null\r\n    }\r\n    return (\r\n        <div className={s.item}>\r\n            <img src={props.profile.photos.small != null ? props.profile.photos.small : userPhoto} className={s.userPhoto}/>\r\n            {props.message}\r\n            <div>\r\n                <span>like {props.like}</span>\r\n            </div>\r\n            <div><button onClick={addLike}>Like</button></div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport Post from './Post/Post';\r\nimport s from './MyPosts.module.css'\r\n\r\n\r\nconst MyPosts = (props) => {\r\n    let posts = props.profilePage.posts.map(post => (<Post message={post.text}\r\n                                                           like={post.likesCount} dispatch={props.dispatch}\r\n                                                           profile={props.profile}/>))\r\n    let newPost = React.createRef();\r\n\r\n    let onAddPost = () => {\r\n        props.addPost();\r\n    }\r\n    let onPostChange = () => {\r\n        let text = newPost.current.value;\r\n        props.onPostChange(text);\r\n    }\r\n    if (!props.profile) {\r\n        return null\r\n    }\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <div><textarea onChange={onPostChange} ref={newPost} value={props.profilePage.newPostText}/></div>\r\n                <div>\r\n                    <button onClick={onAddPost}>New post</button>\r\n                </div>\r\n\r\n\r\n            </div>\r\n            <div className={s.posts}>\r\n                {posts}\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default MyPosts;\r\n","import React from \"react\";\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n    state = {\r\n        editMode: false,\r\n        localStatus: this.props.status\r\n    }\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n\r\n    }\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n\r\n        this.props.updateStatus(this.state.localStatus);\r\n    }\r\n\r\n    updateText = (e) => {\r\n        this.setState({\r\n            localStatus: e.currentTarget.value\r\n        })\r\n\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if(prevProps.status !== this.props.status){\r\n            this.setState({\r\n                localStatus: this.props.status\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div>\r\n                {!this.state.editMode &&\r\n                <div>\r\n                    <span onDoubleClick={this.activateEditMode}>{this.props.status || \"------\"}</span>\r\n                </div>\r\n                }\r\n                {this.state.editMode &&\r\n                <div>\r\n                    <input autoFocus={true} onBlur={this.deactivateEditMode} onChange={this.updateText}\r\n                           value={this.state.localStatus}/>\r\n                </div>\r\n                }\r\n            </div>\r\n        )\r\n            ;\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React from 'react';\r\nimport preloader from '../../../../img/Curve-Loading.gif';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../../Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport userPhoto from \"../../../../img/1.png\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <div>\r\n            <Preloader/>\r\n        </div>\r\n    }\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img\r\n                    src={props.profile.photos.large != null ? props.profile.photos.large : userPhoto}\r\n                    className={s.largeUserPhoto}/>\r\n                <ProfileStatus id={props.id} status={props.status} updateStatus={props.updateStatus}/>\r\n            </div>\r\n            <div className={s.discriptionBlock}>\r\n\r\n                avatar + description\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    headers: {\r\n        'API-KEY': 'f91eee3f-9dff-4917-9b8c-59b790c9fee2'\r\n    },\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n});\r\nexport const userAPI = {\r\n    getUsers(currentPage, pageSize) {\r\n        return instance.get(`users?page=${currentPage} &count=${pageSize}`)\r\n            .then(response => response.data);\r\n    },\r\n\r\n    unfollow(id) {\r\n        return instance.delete(`follow/${id}`)\r\n    },\r\n    follow(id) {\r\n        return instance.post(`follow/${id}`)\r\n    }\r\n}\r\nexport const profileAPI ={\r\n    getProfile (userId) {\r\n        return instance.get(`profile/` + userId)\r\n    },\r\n    getStatus (userId){\r\n        return instance.get(`profile/status/`+ userId)\r\n    },\r\n   updateStatus (status){\r\n        return instance.put(`profile/status`, {status: status})\r\n   }\r\n}\r\nexport const authMe = () => {\r\n    return instance.get(`auth/me`)\r\n}","import {userAPI} from \"../API/API\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_USERS_TOTAL_COUNT = 'SET_USERS_TOTAL_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_IN_PROGRESS = 'TOGGLE_IS_FOLLOWING_IN_PROGRESS';\r\n\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [],\r\n}\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n\r\n    switch (action.type) {\r\n        case FOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return {...u, followed: true};\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        }\r\n        case UNFOLLOW : {\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        }\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_USERS_TOTAL_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_IN_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFollowing ?\r\n                    [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}\r\nexport const follow = (userID) => ({type: FOLLOW, userID});\r\nexport const unfollow = (userID) => ({type: UNFOLLOW, userID});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setUsersTotalCount = (totalCount) => ({type: SET_USERS_TOTAL_COUNT, count: totalCount});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleFollowingInProgress = (isFollowing, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_IN_PROGRESS,\r\n    isFollowing,\r\n    userId\r\n});\r\nexport const getUsersTh= (currentPage, pageSize) => (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n    userAPI.getUsers(currentPage, pageSize).then(data => {\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setUsersTotalCount(data.totalCount));\r\n    })\r\n}\r\nexport const unfollowTh = (userId) => (dispatch) =>{\r\n    dispatch(toggleFollowingInProgress(true, userId));\r\n    userAPI.unfollow(userId).then(response => {\r\n        if (response.data.resultCode == 0) {\r\n            dispatch(unfollow(userId));\r\n        }\r\n        dispatch(toggleFollowingInProgress(false, userId));\r\n    });\r\n}\r\nexport const followTh = (userId) => (dispatch) =>{\r\n    dispatch(toggleFollowingInProgress(true, userId));\r\n    userAPI.follow(userId).then(response => {\r\n        if (response.data.resultCode == 0) {\r\n            dispatch(follow(userId));\r\n        }\r\n        dispatch(toggleFollowingInProgress(false, userId));\r\n    });\r\n}\r\nexport default usersReducer;","import {getProfile, profileAPI} from \"../API/API\";\r\nimport {unfollow} from \"./users-reducer\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_USER_STATUS = 'SET_USER_STATUS';\r\nconst STATUS_UPDATE = 'STATUS_UPDATE';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, text: \"Hello world\", likesCount: 12},\r\n        {id: 2, text: \"This is my first post\", likesCount: 10},\r\n        {id: 3, text: \"Yo, i know what is the .map\", likesCount: 10},\r\n        {id: 4, text: \"Motherfucker\", likesCount: 10},\r\n        {id: 5, text: \"Component- is the great thing\", likesCount: 22},\r\n        {id: 6, text: \"I know what is the props\", likesCount: 30},\r\n        {id: 7, text: \"Component- is the great thing\", likesCount: 1},\r\n\r\n    ],\r\n    newPostText: 'kek',\r\n    profile: null,\r\n    status: \"\",\r\n}\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let body = state.newPostText;\r\n            return {\r\n                ...state,\r\n                newPostText: '',\r\n                posts: [...state.posts,\r\n                    {id: 6, text: body, likesCount: 0}]\r\n            }\r\n\r\n        case UPDATE_NEW_POST_TEXT:\r\n            return {\r\n                ...state,\r\n                newPostText: action.newText\r\n            }\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        case SET_USER_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        case STATUS_UPDATE:\r\n            return {\r\n                ...state,\r\n                statusInProgress: action.isUpdate\r\n            }\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport const getProfileTh = (userID) => (dispatch) => {\r\n    profileAPI.getProfile(userID).then(response => {\r\n        dispatch(setUserProfile(response.data));\r\n    });\r\n}\r\nexport const getUserStatusTh = (userId) => (dispatch) => {\r\n    profileAPI.getStatus(userId)\r\n        .then(response => {\r\n            debugger\r\n            dispatch(setUserStatus(response.data));\r\n        });\r\n}\r\nexport const updateStatusTh = (status) => (dispatch) => {\r\n    profileAPI.updateStatus(status)\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setUserStatus(status));\r\n            }\r\n        });\r\n}\r\nexport const addPostActionCreator = () => ({type: ADD_POST})\r\nexport const updateNewPostTextActionCreator = (text) =>\r\n    ({type: UPDATE_NEW_POST_TEXT, newText: text})\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const setUserStatus = (status) => ({type: SET_USER_STATUS, status})\r\n\r\n\r\nexport default profileReducer;","import React from 'react';\r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../Redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        profilePage: state.profilePage,\r\n        profile: state.profilePage.profile\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) =>{\r\n    return {\r\n        addPost: (text) => {\r\n            let action = addPostActionCreator(text);\r\n            dispatch(action);\r\n        },\r\n        onPostChange: (text) => {\r\n            let action1 = updateNewPostTextActionCreator(text);\r\n            dispatch(action1);\r\n\r\n\r\n      }\r\n    }\r\n}\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\nexport  default MyPostsContainer;\r\n\r\n\r\n","import React from 'react';\r\nimport MyPosts from './MyPosts/MyPosts';\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from \"./MyPosts/ProfileInfo/ProfileInfo\";\r\nimport Post from \"./MyPosts/Post/Post\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div className=''>\r\n            <ProfileInfo profile={props.profile} id={props.id} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    );\r\n}\r\nexport default Profile;","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsRedirect = (state) => {\r\n    return {\r\n        isAuth: state.authReducer.isAuth\r\n    }\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'}/>;\r\n            return <Component {...this.props}/>;\r\n        }\r\n    }\r\n\r\n let   ConnectedRedirectComponent = connect(mapStateToPropsRedirect)(RedirectComponent);\r\n    return ConnectedRedirectComponent;\r\n}","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport * as axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProfileTh, getUserStatusTh, setUserProfile, updateStatusTh} from \"../../Redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../HOC/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userID = this.props.match.params.userID;\r\n        if (!userID) {\r\n            userID = this.props.id;\r\n        }\r\n\r\n        this.props.getProfileTh(userID);\r\n\r\n\r\n        this.props.getUserStatusTh(userID);\r\n\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile {...this.props} profile={this.props.profile} id={this.props.id} status={this.props.status}\r\n                         updateStatus={this.props.updateStatusTh}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    id: state.authReducer.id,\r\n    status: state.profilePage.status,\r\n});\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {setUserProfile, getProfileTh, getUserStatusTh, updateStatusTh}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer);","import React from 'react';\r\nimport s from './Dialog.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Dialog = (props) => {\r\n    let path= \"/dialogs/\" + props.id;\r\n    return (\r\n        <div className={s.item}>\r\n           <NavLink to={path} activeClassName={s.active}> {props.name}</NavLink>\r\n        </div>\r\n\r\n    );\r\n}\r\nexport default Dialog;","import React from 'react';\r\nimport s from './Message.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            {props.messages}\r\n        </div>\r\n    );\r\n}\r\nexport default Message;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport Dialog from \"./Dialog/Dialog\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n\r\n    let messages = props.messagesPage.messages.map\r\n    (el => (<Message messages={el.message}/>));\r\n\r\n    let newMessage = React.createRef();\r\n\r\n    let dialogs = props.messagesPage.dialogs.map(dialog =>\r\n        (<Dialog name={dialog.name} activeClassName={s.active} id={dialog.id}/>));\r\n\r\n\r\n    let onSendMessage = () => {\r\n        props.sendMessage();\r\n    }\r\n    let onMessageChange = () => {\r\n        let text = newMessage.current.value;\r\n        props.messageChange(text);\r\n    }\r\n\r\n        return (\r\n            <div className={s.dialogs}>\r\n                <div className={s.dialogsItem}>\r\n                    {dialogs}\r\n                </div>\r\n                <div className={s.messages}>\r\n                    {messages}\r\n                    <div>\r\n                        <textarea onChange={onMessageChange} ref={newMessage} value={props.messagesPage.messageText}/>\r\n                    </div>\r\n                    <div>\r\n                        <button onClick={onSendMessage}>Отправить</button>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n    export default Dialogs;","import React from 'react';\r\nimport s from './News.module.css'\r\n\r\nconst News = (props) =>{\r\n    return(\r\n        <div>\r\n            News\r\n        </div>\r\n    );\r\n}\r\nexport default News;","import React from 'react';\r\nimport s from './Music.module.css';\r\n\r\nconst Music = (props) =>{\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    );\r\n}\r\nexport default Music;","import React from 'react';\r\nimport s from './Settings.module.css';\r\n\r\nconst Settings = (props) =>{\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    );\r\n}\r\nexport default Settings;","const SEND_MESSAGE = 'SEND-MESSAGE';\r\nconst UPDATE_NEW_MESSAGE_TEXT = 'UPDATE-NEW-MESSAGE-TEXT'\r\nlet initialState = {\r\n\r\n    dialogs: [\r\n        {id: 1, name: \"Ruslan\"},\r\n        {id: 2, name: \"Ihor\"},\r\n        {id: 3, name: \"Diana\"},\r\n    ],\r\n    messages: [\r\n        {id: 1, message: \"Hello world\"},\r\n        {id: 2, message: \"Yo\"},\r\n        {id: 3, message: \"Yo\"},\r\n        {id: 3, message: \"Yawawdaao\"},\r\n\r\n    ],\r\n    messageText: 'lol'\r\n\r\n}\r\n\r\nconst messagesReducer = (state = initialState, action) => {\r\n\r\n\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = state.messageText;\r\n            return {\r\n                ...state,\r\n                messageText:'',\r\n                messages: [...state.messages,\r\n                    {id: 1,\r\n                    message: body}]\r\n            }\r\n        case UPDATE_NEW_MESSAGE_TEXT:\r\n            return {\r\n                ...state,\r\n                messageText: action.messageText\r\n            }\r\n        default:   return state;\r\n    }\r\n\r\n}\r\nexport const sendMessageActionCreator = () => ({type : SEND_MESSAGE})\r\nexport const messageTextActionCreator = (text) =>\r\n    ({type : UPDATE_NEW_MESSAGE_TEXT, messageText: text})\r\nexport default messagesReducer;","import React from 'react';\r\nimport {messageTextActionCreator, sendMessageActionCreator} from \"../../Redux/messages-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../HOC/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        messagesPage: state.messagesPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: () => {\r\n            dispatch(sendMessageActionCreator());\r\n        },\r\n        messageChange: (body) => {\r\n            let action = messageTextActionCreator(body);\r\n            dispatch(action);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\nwithAuthRedirect\r\n)(Dialogs);","import React from 'react';\r\nimport Navbar from \"./Navbar\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n        sidebar: state.sidebar\r\n    }\r\n}\r\nlet mapDispatchToProps = () => {\r\n    return{\r\n\r\n    }\r\n}\r\n\r\nconst NavbarContainer = connect(mapStateToProps, mapDispatchToProps)(Navbar);\r\n\r\nexport default NavbarContainer;\r\n","import s from \"./Users.module.css\";\r\nimport userPhoto from \"../../img/1.png\";\r\nimport React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Button} from \"react-bootstrap\";\r\n\r\n\r\n\r\nconst Users = (props) => {\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    return <div>\r\n        <div>\r\n            {pages.map(p => {\r\n                return <Button variant=\"secondary\" size=\"sm\" className={props.currentPage === p && s.selectedPage}\r\n                               onClick={(e) => {\r\n                                   props.onPageChange(p)\r\n                               }}\r\n                >{p}</Button>\r\n            })}\r\n\r\n        </div>\r\n\r\n        {props.users.map(u => <div key={u.id}>\r\n                    <span>\r\n                        <div>\r\n                            <NavLink to={\"/profile/\" + u.id}>\r\n                            <img src={u.photos.small != null ? u.photos.small : userPhoto} className={s.userPhoto}/>\r\n                        </NavLink>\r\n                            </div>\r\n                        <div>\r\n                            {u.followed ?\r\n                                <Button size=\"sm\" disabled={props.followingInProgress.some(id => id === u.id)}\r\n                                        onClick={() => {\r\n                                            props.unfollow(u.id);\r\n                                        }}> Unfollow </Button> :\r\n\r\n                                <Button size=\"sm\" disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => {\r\n                                   props.follow(u.id);\r\n\r\n\r\n                                }}>Follow</Button>}\r\n                        </div>\r\n                    </span>\r\n            <span>\r\n                        <span>\r\n                            <div>{u.name}</div>\r\n                            <div>{u.status}</div>\r\n                        </span>\r\n                        <span>\r\n                            <div>\"u.location.country\"</div>\r\n                                <div>{\"u.location.city\"}</div>\r\n                                </span>\r\n                                </span>\r\n        </div>)\r\n        }\r\n    </div>\r\n}\r\nexport default Users;","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow, followTh, getUsersTh,\r\n    setCurrentPage,\r\n    unfollow, unfollowTh\r\n} from \"../../Redux/users-reducer\";\r\n\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../HOC/WithAuthRedirect\";\r\n\r\nclass UsersAPI extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsersTh(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChange = (pageNumber) => {\r\n        this.props.getUsersTh(pageNumber, this.props.pageSize);\r\n    }\r\n\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChange={this.onPageChange}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   users={this.props.users}\r\n                   isFetching={this.props.isFetching}\r\n                   followingInProgress={this.props.followingInProgress}\r\n                   toggleFollowingInProgress={this.props.toggleFollowingInProgress}\r\n                   unfollow={this.props.unfollowTh}\r\n                   follow={this.props.followTh}\r\n            /></ >\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress,\r\n    }\r\n}\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps,\r\n        {\r\n            follow, unfollow, setCurrentPage, getUsersTh, unfollowTh, followTh\r\n        }))(UsersAPI);\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Preloader from \"../Preloader\";\r\n\r\nconst Header = (props) => {\r\n\r\n    return (\r\n        <header className={s.header}>\r\n        <img src='https://logoza.ru/img/rock.png' />\r\n        <div className={s.loginBlock}>\r\n            {props.isAuth? <div> {props.login}</div>\r\n            :<NavLink to={'/login'}>Login</NavLink>}\r\n        </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import {authMe, getProfile} from \"../API/API\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\nconst SET_AUTH_PROFILE = 'SET_AUTH_PROFILE';\r\nconst SET_MY_USER_PROFILE = 'SET_MY_USER_PROFILE';\r\n\r\n\r\nlet initialState = {\r\n    id: null,\r\n    login: null,\r\n    email: null,\r\n    isAuth: false,\r\n    isFetching: false,\r\n    authUserProfile: null,\r\n\r\n\r\n}\r\nconst authReducer = (state = initialState, action) => {\r\n\r\n\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n                isAuth: true,\r\n\r\n            }\r\n        case SET_AUTH_PROFILE:\r\n            return {\r\n                ...state,\r\n                authUserProfile: action.authProfile,\r\n\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}\r\nexport const setAuthUserData = (id, login, email) => ({type: SET_USER_DATA, data: {id, login, email}});\r\nexport const setAuthUserProfile = (authProfile) => ({type: SET_AUTH_PROFILE, authProfile});\r\n\r\n\r\nexport const authMeTh = () => (dispatch) => {\r\n    authMe().then(response => {\r\n        if (response.data.resultCode === 0) {\r\n            let {id, login, email} = response.data.data;\r\n            dispatch(setAuthUserData(id, login, email));\r\n\r\n        }\r\n\r\n    });\r\n}\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {authMeTh, setAuthUserData, setAuthUserProfile} from \"../../Redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.authMeTh();\r\n    }\r\n\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    login: state.authReducer.login,\r\n    isAuth: state.authReducer.isAuth,\r\n    authUserProfile: state.authReducer.authUserProfile,\r\n\r\n});\r\nexport default connect(mapStateToProps, {setAuthUserData, setAuthUserProfile, authMeTh})(HeaderContainer);","import React from 'react'\r\n\r\n\r\nconst Login = (props) => {\r\n    return <h1>Login</h1>\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\nimport './App.css';\nimport Navbar from './Components/Navbar/Navbar';\nimport ProfileContainer from './Components/Profile/ProfileContainer';\nimport Dialogs from \"./Components/Dialogs/Dialogs\";\nimport News from \"./Components/News/News\";\nimport {Route} from \"react-router-dom\";\nimport Music from \"./Components/Music/Music\";\nimport Settings from \"./Components/Settings/Settings\";\nimport DialogsContainer from \"./Components/Dialogs/DialogsContainer\";\nimport NavbarContainer from \"./Components/Navbar/NavbarContainer\";\nimport UsersContainer from \"./Components/Users/UsersContainer\";\nimport HeaderContainer from \"./Components/Header/HeaderContainer\";\nimport Login from \"./Components/Login/Login\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nconst App = () => {\n\n    return (\n\n        <div className='app-wrapper'>\n            <HeaderContainer/>\n\n            <div className='app-wrapper-content'>\n                <Route path='/dialogs' render={() => <DialogsContainer/>}/>\n                <Route path='/profile/:userID?' render={() => <ProfileContainer/>}/>\n                <Route path='/news' render={() => <News/>}/>\n                <Route path='/music' render={() => <Music/>}/>\n                <Route path='/settings' render={() => <Settings/>}/>\n                <Route path='/users' render={() => <UsersContainer/>}/>\n                <Route path='/login' render={() => <Login/>}/>\n            </div>\n            <NavbarContainer/>\n        </div>\n\n    );\n\n}\n\n\nexport default App;\n","\r\nlet initialState ={\r\n    friendName:[\r\n        {friendsName: \"Diana\"},\r\n        {friendsName: \"Ihor\"},\r\n        {friendsName: \"Ruslan\"}\r\n    ]\r\n}\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n    return state;\r\n}\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport messagesReducer from \"./messages-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddlware from 'redux-thunk';\r\n\r\nlet redusers = combineReducers({\r\n   profilePage: profileReducer,\r\n    messagesPage: messagesReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    authReducer: authReducer,\r\n});\r\n\r\nlet store = createStore(redusers, applyMiddleware(thunkMiddlware));\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from \"./Redux/redux-store\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\n\n\n    ReactDOM.render(\n        <BrowserRouter>\n            <Provider store={store}>\n                <App />\n            </Provider>\n\n        </BrowserRouter>,\n        document.getElementById('root')\n    );\n\n"],"sourceRoot":""}