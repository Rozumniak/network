{"version":3,"sources":["Components/Profile/MyPosts/Post/Post.module.css","Components/Common/Paginator.module.css","Components/Profile/MyPosts/MyPosts.module.css","Components/Common/FormControls.module.css","Components/Dialogs/Dialog/Dialog.module.css","Components/Users/Users.module.css","Components/Header/Header.module.css","utilits/validators/validators.js","img/1.png","Components/Profile/MyPosts/Post/Post.jsx","API/API.js","Redux/profile-reducer.ts","Components/Profile/MyPosts/MyPosts.jsx","img/Curve-Loading.gif","Components/Common/Preloader.jsx","Components/Profile/MyPosts/ProfileInfo/ProfileStatusWithHooks.jsx","Components/Common/FormControls.js","Components/Profile/MyPosts/ProfileInfo/ProfileDataForm.jsx","Components/Profile/MyPosts/ProfileInfo/ProfileInfo.jsx","Components/Profile/MyPosts/MyPostsContainer.jsx","Components/Profile/Profile.jsx","HOC/WithAuthRedirect.jsx","Components/Profile/ProfileContainer.jsx","Components/News/News.js","Components/Music/Music.js","Components/Settings/Settings.js","Redux/messages-reducer.ts","Components/Dialogs/Dialog/Dialog.js","Components/Dialogs/Message/Message.js","Components/Dialogs/Dialogs.js","Components/Dialogs/DialogsContainer.js","Components/Navbar/Navbar.jsx","Components/Navbar/NavbarContainer.jsx","Redux/users-reducer.js","Components/Common/Paginator.jsx","Components/Users/Users.js","Redux/users-selectors.js","Components/Users/UsersContainer.jsx","Components/Header/Header.jsx","Redux/auth-reducer.ts","Components/Header/HeaderContainer.jsx","Components/Login/Login.jsx","Components/Login/LoginContainer.jsx","Redux/app-reducer.ts","App.js","Redux/sidebar-reducer.js","Redux/redux-store.js","index.js","Components/Navbar/Navbar.module.css","Components/Dialogs/Dialogs.module.css","Components/Profile/MyPosts/ProfileInfo/ProfileInfo.module.css","Components/Dialogs/Message/Message.module.css"],"names":["module","exports","maxLength","Post","props","useState","islike","addLike","profile","className","s","item","src","photos","small","userPhoto","message","like","likeButton","onClick","deletePost","instance","axios","withCredentials","headers","baseURL","userAPI","currentPage","pageSize","get","then","response","data","id","delete","post","profileAPI","userId","status","put","photo","formData","FormData","append","loginAPI","email","password","rememberMe","captcha","securityAPI","ADD_POST","SET_USER_PROFILE","SET_USER_STATUS","STATUS_UPDATE","SAVE_PHOTO_SUCCESS","ACTIVATE_EDIT_MODE","DEACTIVATE_EDIT_MODE","DELETE_POST","initialState","posts","text","likesCount","profileEditMode","statusInProgress","setUserProfile","type","setUserStatus","savePhotoSuccess","editModeOn","editModeOff","profileReducer","state","action","newText","isUpdate","filter","p","postID","layout","labelCol","span","wrapperCol","AddPostReduxForm","Input","TextArea","reduxForm","form","name","onFinish","onSubmit","Item","size","rules","required","offset","htmlType","MyPosts","React","memo","console","log","profilePage","reverse","map","i","dispatch","postsBlock","postText","addPost","Preloader","preloader","ProfileStatusWithHooks","editMode","setEditMode","setStatus","useEffect","onDoubleClick","isOwner","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","FormControl","input","meta","child","hasError","error","touched","styles","formControl","children","Textarea","restProps","createField","placeholder","validators","component","Field","validate","ProfileDataReduxForm","handleSubmit","photoUpload","icon","UploadOutlined","target","files","length","savePhoto","Object","keys","contacts","key","ProfileData","discriptionBlock","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contacts","ProfileInfo","editProfile","deactivateProfileEditMode","activateProfileEditMode","large","largeUserPhoto","initialValues","saveProfile","myPostsContainer","this","addPostActionCreator","Component","compose","connect","Profile","MyPostsContainer","mapStateToPropsRedirect","isAuth","authReducer","withAuthRedirect","RedirectComponent","to","ProfileContainer","userID","match","params","getProfileTh","getUserStatusTh","refreshProfile","prevProps","prevState","snapshot","updateStatusTh","a","resultCode","getState","withRouter","News","Music","Settings","SEND_MESSAGE","dialogs","messages","messageText","messagesReducer","Dialog","path","activeClassName","active","Message","cn","messageContainer","justifyEnd","messageBox","backgroundBlue","colorWhite","Dialogs","editMessage","message1","sendMessage","messages1","el","nullMessage","messagesPage","dialog","outerContainer","container","messageInput","onKeyPress","event","sendButton","DialogsContainer","sendMessageActionCreator","Navbar","navbar","nav","sidebar","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_USERS_TOTAL_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_IN_PROGRESS","users","totalUsersCount","isFetching","followingInProgress","follow","unfollow","setCurrentPage","toggleIsFetching","toggleFollowingInProgress","isFollowing","usersReducer","u","followed","count","Paginator","totalItemsCount","portionSize","onPageChange","pagesCount","Math","ceil","pages","push","portionCount","portionNumber","setPortionNumber","leftPortionNumber","rightPortionNumber","paginator","selectedPage","pageNumber","Users","followButton","disabled","some","getUsersSuperSelector","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersAPI","getUsersTh","unfollowTh","followTh","totalCount","items","Header","header","loginBlock","login","Button","logout","SET_USER_DATA","SET_AUTH_PROFILE","GET_CAPTCHA_URL","authUserProfile","captchaUrl","setAuthUserData","payload","getCaptchaUrlSuccess","authMeTh","getCaptchaUrl","url","authProfile","HeaderContainer","LoginForm","remember","label","Password","valuePropName","Login","values","username","LoginContainer","stopSubmit","_error","INITIALIZED_SUCCESS","initialized","appReducer","Layout","Sider","Content","App","collapsed","toggle","setState","catchAllUnhandledError","alert","initializeApp","window","addEventListener","removeEventListener","trigger","collapsible","theme","mode","defaultSelectedKeys","UserOutlined","FormOutlined","TeamOutlined","style","padding","createElement","MenuUnfoldOutlined","MenuFoldOutlined","margin","minHeight","exact","render","UsersContainer","app","friendName","friendsName","sidebarReducer","redusers","combineReducers","formReducer","store","createStore","applyMiddleware","thunkMiddlware","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.b68f9e69.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__qgLu_\",\"likeButton\":\"Post_likeButton__3j_qt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__TmYM-\",\"pageNumber\":\"Paginator_pageNumber__VTzaX\",\"selectedPage\":\"Paginator_selectedPage__3SkPi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__IKVWh\",\"posts\":\"MyPosts_posts__2281S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__2Y3MO\",\"error\":\"FormControls_error__3fwNV\",\"formSummaryError\":\"FormControls_formSummaryError__3uC7c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Dialog_item__1E3wH\",\"active\":\"Dialog_active__22o0r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__3V6cJ\",\"followButton\":\"Users_followButton__10njZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1Ya28\",\"loginBlock\":\"Header_loginBlock__AUhM_\"};","export const required = value => {\r\n    if (value) return undefined;\r\n\r\n    return \"Field is required\";\r\n}\r\n\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/1.a2446033.png\";","import React, {useState} from 'react';\r\nimport s from './Post.module.css';\r\n\r\nimport {Button,} from 'antd';\r\nimport {LikeOutlined} from '@ant-design/icons';\r\nimport userPhoto from \"../../../../img/1.png\";\r\n\r\nconst Post = (props) => {\r\n\r\n    let [islike, addLike] = useState(false)\r\n\r\n    if (!props.profile) {\r\n        return null\r\n    }\r\n    return (\r\n        <div className={s.item}>\r\n            <img src={props.profile.photos.small || userPhoto} className={s.userPhoto}/>\r\n            {props.message}\r\n            <div>\r\n                <span>like {props.like}</span>\r\n            </div>\r\n            {islike === false ?  <div className={s.likeButton}><button onClick={()=> addLike(true)} >Like</button></div>\r\n            : <div><button onClick={()=> addLike(false)} >like</button></div>}\r\n            <div><Button onClick={props.deletePost}> X </Button></div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Post;","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n\r\n    withCredentials: true,\r\n    headers: {\r\n        'API-KEY': 'cc3bd8cc-4d54-4fd5-94a6-1a89051413f6'\r\n    },\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n\r\n});\r\n\r\n\r\n\r\nexport const userAPI = {\r\n    getUsers(currentPage, pageSize) {\r\n        return instance.get(`users?page=${currentPage} &count=${pageSize}`)\r\n            .then(response => response.data);\r\n    },\r\n\r\n    unfollow(id) {\r\n        return instance.delete(`follow/${id}`)\r\n    },\r\n    follow(id) {\r\n        return instance.post(`follow/${id}`)\r\n    }\r\n}\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId)\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {status: status})\r\n    },\r\n    savePhoto(photo) {\r\n        let formData = new FormData();\r\n        formData.append(\"image\", photo)\r\n        return instance.put(`profile/photo`, formData, {headers: {'Content-Type': 'multipart/form/data'}})\r\n    },\r\n    saveProfile(profile) {\r\n        return instance.put(`profile`, profile)\r\n    }\r\n}\r\nexport const loginAPI = {\r\n    login(email, password, rememberMe = false, captcha) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe, captcha});\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    },\r\n\r\n}\r\nexport const securityAPI ={\r\n    getCaptchaUrl(){\r\n        return instance.get(`/security/get-captcha-url`);\r\n    },\r\n}\r\n\r\nexport const authMe = () => {\r\n    return instance.get(`auth/me`)\r\n}","import {profileAPI} from \"../API/API\";\r\n\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_USER_STATUS = 'SET_USER_STATUS';\r\nconst STATUS_UPDATE = 'STATUS_UPDATE';\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\r\nconst ACTIVATE_EDIT_MODE = 'ACTIVATE_EDIT_MODE';\r\nconst DEACTIVATE_EDIT_MODE = 'DEACTIVATE_EDIT_MODE';\r\nconst DELETE_POST = 'DELETE_POST';\r\n\r\ntype PostsType={\r\n    id: number\r\n    text: string\r\n    likesCount: number | null\r\n}\r\ntype ContactsType={\r\n    github: string\r\n    vk: string\r\n    facebook: string\r\n    instagram: string\r\n    twitter: string\r\n    website: string\r\n    youtube: string\r\n    mainLink: string\r\n}\r\ntype PhotosType={\r\n    small: string\r\n    large: string\r\n}\r\ntype ProfileType={\r\n    userId: number\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string\r\n    fullName: string\r\n    contacts: ContactsType\r\n    photos: PhotosType\r\n}\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, text: \"Hello world\", likesCount: 12},\r\n        {id: 2, text: \"This is my first post\", likesCount: 10},\r\n\r\n    ] as Array<PostsType>,\r\n    profile: null as ProfileType | null,\r\n    status: \"\",\r\n    profileEditMode: false as boolean,\r\n    statusInProgress: false as boolean\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst profileReducer = (state = initialState, action: any): InitialStateType => {\r\n\r\n\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts,\r\n                    {id: 6, text: action.newText, likesCount: 0}]\r\n            }\r\n\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        case SET_USER_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        case STATUS_UPDATE:\r\n            return {\r\n                ...state,\r\n                statusInProgress: action.isUpdate\r\n            }\r\n        case SAVE_PHOTO_SUCCESS:\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.photos} as ProfileType\r\n            }\r\n        case ACTIVATE_EDIT_MODE:\r\n            return {\r\n                ...state,\r\n                profileEditMode: true\r\n            }\r\n        case DEACTIVATE_EDIT_MODE:\r\n            return {\r\n                ...state,\r\n                profileEditMode: false\r\n            }\r\n        case DELETE_POST:\r\n            return {\r\n                ...state, posts: {...state.posts.filter(p=> p.id != action.postID)}\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const getProfileTh = (userID: number) => async (dispatch: any) => {\r\n    let response = await profileAPI.getProfile(userID)\r\n        dispatch(setUserProfile(response.data));\r\n\r\n}\r\nexport const getUserStatusTh = (userId: number) => async (dispatch: any) => {\r\n  let response = await profileAPI.getStatus(userId)\r\n\r\n            dispatch(setUserStatus(response.data));\r\n\r\n}\r\nexport const updateStatusTh = (status: string) => async (dispatch: any) => {\r\n    let response = await profileAPI.updateStatus(status)\r\n\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setUserStatus(status));\r\n            }\r\n\r\n}\r\n\r\nexport const savePhoto = (photo: any) => (dispatch: any) => {\r\n    let response = profileAPI.savePhoto(photo)\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(savePhotoSuccess(response.data.data.photos));\r\n            }\r\n}\r\n\r\nexport const saveProfile = (data: ProfileType) => (dispatch: any, getState: any) => {\r\n    dispatch(editModeOff());\r\n   const userID = getState().authReducer.id\r\n    let response = profileAPI.saveProfile(data)\r\n\r\n            if (response.data.resultCode === 0) {\r\n                let response = profileAPI.getProfile(userID)\r\n                    dispatch(setUserProfile(response.data));\r\n            }\r\n}\r\nexport const activateProfileEditMode = () => (dispatch: any) => {\r\n\r\n    dispatch(editModeOn());\r\n}\r\nexport const deactivateProfileEditMode = () => (dispatch: any) => {\r\n    dispatch(editModeOff());\r\n}\r\n\r\ntype AddPostActionType = {\r\n    type: typeof  ADD_POST\r\n    newText: string\r\n}\r\nexport const addPostActionCreator = (text: string): AddPostActionType => ({type: ADD_POST, newText: text});\r\n\r\ntype SetUserProfile = {\r\n    type: typeof SET_USER_PROFILE\r\n    profile: ProfileType\r\n}\r\nexport const setUserProfile = (profile: ProfileType): SetUserProfile => ({type: SET_USER_PROFILE, profile});\r\n\r\ntype SetUserStatus = {\r\n    type: typeof SET_USER_STATUS\r\n    status: string\r\n}\r\nexport const setUserStatus = (status: string): SetUserStatus => ({type: SET_USER_STATUS, status});\r\n\r\ntype SavePhotoSuccessType = {\r\n    type: typeof SAVE_PHOTO_SUCCESS\r\n    photos: PhotosType\r\n}\r\nexport const savePhotoSuccess = (photos: PhotosType): SavePhotoSuccessType => ({type: SAVE_PHOTO_SUCCESS, photos});\r\n\r\ntype EditModeOn = {\r\n    type: typeof ACTIVATE_EDIT_MODE\r\n}\r\nexport const editModeOn = (): EditModeOn => ({type: ACTIVATE_EDIT_MODE});\r\n\r\ntype EditModeOff = {\r\n    type: typeof DEACTIVATE_EDIT_MODE\r\n}\r\nexport const editModeOff = (): EditModeOff => ({type: DEACTIVATE_EDIT_MODE});\r\n\r\ntype DeletePostType ={\r\n    type: typeof DELETE_POST\r\n    postID: number\r\n}\r\nexport const deletePost = (postID: number): DeletePostType => ({ type:DELETE_POST, postID })\r\n\r\n\r\nexport default profileReducer;","import React from 'react';\r\nimport Post from './Post/Post';\r\nimport s from './MyPosts.module.css'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utilits/validators/validators\";\r\n//import {Textarea} from \"../../Common/FormControls\";\r\nimport {Form, Input, InputNumber, Button} from 'antd';\r\nimport {deletePost} from \"../../../Redux/profile-reducer\";\r\n\r\nconst layout = {\r\n    labelCol: {\r\n        span: 8,\r\n    },\r\n    wrapperCol: {\r\n        span: 16,\r\n    },\r\n};\r\nconst {TextArea} = Input;\r\nconst maxLength100 = maxLengthCreator(100);\r\n\r\nconst AddPostForm = (props) => {\r\n    return <Form {...layout} name=\"nest-messages\" onFinish={props.onSubmit}>\r\n        <Form.Item name=\"post\" size=\"large\" rules={[\r\n            {\r\n                required: true,\r\n                message: 'Please input text!',\r\n            },\r\n        ]}>\r\n            <Input.TextArea/>\r\n        </Form.Item>\r\n        <Form.Item wrapperCol={{...layout.wrapperCol, offset: 6,\r\n            span: 100}}>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n                Отправить\r\n            </Button>\r\n        </Form.Item>\r\n    </Form>\r\n}\r\nconst AddPostReduxForm = reduxForm({\r\n    form: \"addPost\"\r\n})(AddPostForm);\r\n\r\nconst MyPosts = React.memo(props => {\r\n    console.log(\"RENDER\");\r\n    let posts = [...props.profilePage.posts]\r\n        .reverse()\r\n        .map((post, i) => <div key={i}><Post message={post.text}\r\n                            like={post.likesCount} dispatch={props.dispatch}\r\n                            profile={props.profile} deletePost={props.deletePost}/></div>)\r\n    if (!props.profile) {\r\n        return null\r\n    }\r\n    const onSubmit = (formData) => {\r\n        let postText = formData.post\r\n        props.addPost(postText);\r\n        formData.post = null;\r\n    }\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddPostReduxForm onSubmit={onSubmit}/>\r\n\r\n            <div className={s.posts}>\r\n                {posts}\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n});\r\n\r\nexport default MyPosts;\r\n","export default __webpack_public_path__ + \"static/media/Curve-Loading.5e01ee79.gif\";","import React from 'react';\r\nimport preloader from '../../img/Curve-Loading.gif';\r\n\r\n\r\nconst Preloader = () => {\r\n    return <div>\r\n        <img src={preloader}/>\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    },[props.status]);\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n\r\n    }\r\n    const activateEditMode = () => {\r\n        if (props.isOwner) { setEditMode(true)}\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n    return (\r\n\r\n        <div>\r\n\r\n            {!editMode &&\r\n            <div>\r\n                <b>Status:   </b>\r\n                <span onDoubleClick={activateEditMode}>{props.status || \"------\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input autoFocus={true} onBlur={deactivateEditMode} onChange={onStatusChange}\r\n                       value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n        ;\r\n\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport styles from \"./FormControls.module.css\";\r\nimport {Field} from \"redux-form\";\r\n\r\nexport const FormControl = ({input, meta, child, ...props}) => {\r\n    const hasError = meta.error && meta.touched;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \" \")}>\r\n            <div>{props.children}</div>\r\n            <div>\r\n                {hasError && <span>{meta.error}</span>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl{...props}><textarea {...input}{...restProps} /></FormControl>\r\n}\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl{...props}><input {...input}{...restProps}/></FormControl>\r\n}\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name}\r\n               validate={validators} component={component}\r\n               {...props}\r\n        /> {text}\r\n    </div>\r\n)","import s from \"./ProfileInfo.module.css\";\r\nimport {Input} from \"antd\";\r\nimport {UploadOutlined} from '@ant-design/icons';\r\nimport React from \"react\";\r\nimport {createField, Textarea} from \"../../../Common/FormControls\";\r\nimport {reduxForm} from \"redux-form\";\r\n\r\nconst ProfileDataForm = ({handleSubmit, props, profile}) => {\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            props.savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n    return <div>\r\n        <div className={s.photoUpload}><Input icon={<UploadOutlined/>} type={\"file\"}\r\n                                              onChange={onMainPhotoSelected}/></div>\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <button onClick={() => {\r\n                }}>Save\r\n                </button>\r\n            </div>\r\n            <div>\r\n                <b>Full name:</b> {createField(\"Full name\", \"fullName\", [], \"input\")}\r\n            </div>\r\n            <div>\r\n                <b>В поисках работы:</b> {createField(\"\", \"lookingForAJob\", [], \"input\", {type: \"checkbox\"})}\r\n            </div>\r\n            <div>\r\n                <b>Мои навыки:</b> {createField(\"\", \"lookingForAJobDescription\", [], Textarea)}\r\n            </div>\r\n            <div>\r\n                <b>Обо мне:</b> {createField(\"\", \"aboutMe\", [], Textarea)}\r\n            </div>\r\n\r\n            <div>\r\n                <b>Контакты:</b> {Object.keys(profile.contacts).map(key => {\r\n                return <div>\r\n                    <b>{key}:</b> {createField(key, \"contacts.\" + key, [], \"input\")}\r\n                </div>\r\n            })}\r\n            </div>\r\n\r\n        </form>\r\n\r\n    </div>\r\n}\r\nconst ProfileDataReduxForm = reduxForm({form: \"edit-profile\"})(ProfileDataForm)\r\nexport default ProfileDataReduxForm","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../../Common/Preloader\";\r\n\r\nimport userPhoto from \"../../../../img/1.png\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport {Button, Input} from \"antd\";\r\nimport ProfileDataReduxForm from \"./ProfileDataForm\";\r\n\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <div>\r\n            <Preloader/>\r\n        </div>\r\n    }\r\n    const isEditMode = () => {\r\n        if (props.editMode) {\r\n            return props.deactivateProfileEditMode;\r\n        }\r\n        return props.activateProfileEditMode;\r\n    }\r\n    const onSubmit = (formData) => {\r\n        props.saveProfile(formData);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {props.isOwner &&\r\n            <div className={s.editProfile}>\r\n                <Button onClick={isEditMode()}> {props.editMode ? \"Cancel\" : \"Edit\"}</Button>\r\n            </div>\r\n            }\r\n            <div>\r\n                <img\r\n                    src={props.profile.photos.large || userPhoto}\r\n                    className={s.largeUserPhoto}/>\r\n                <ProfileStatusWithHooks id={props.id} status={props.status} updateStatus={props.updateStatus}\r\n                                        isOwner={props.isOwner}/>\r\n\r\n                {props.isOwner && props.editMode ?\r\n                    <ProfileDataReduxForm initialValues={props.profile} profile={props.profile} savePhoto={props.savePhoto} onSubmit={onSubmit}/> :\r\n                    <ProfileData profile={props.profile}/>\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst ProfileData = (props) => {\r\n    return <div className={s.discriptionBlock}>\r\n        <div>\r\n            <b>Full name:</b> {props.profile.fullName}\r\n        </div>\r\n        <div>\r\n            <b>looking For A Job:</b> {props.profile.lookingForAJob ? \"yes\" : \"no\"}\r\n        </div>\r\n        {props.profile.lookingForAJob &&\r\n        <div>\r\n            <b>My professional skills:</b> {props.profile.lookingForAJobDescription}\r\n        </div>\r\n        }\r\n        <div>\r\n            <b>About me:</b> {props.profile.aboutMe}\r\n        </div>\r\n        <div>\r\n            <b>Contacts:</b> {Object.keys(props.profile.contacts).map(key => {\r\n            return <Contacts key={key} contactTitle={key} contactValue={props.profile.contacts[key]}/>\r\n        })}\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\nconst Contacts = ({contactTitle, contactValue}) => {\r\n    return <div className={s.contacts}>\r\n        <b>{contactTitle}:</b> {contactValue}\r\n\r\n    </div>\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport {addPostActionCreator, deletePost, updateNewPostTextActionCreator} from \"../../../Redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\n\r\nclass myPostsContainer extends React.Component {\r\n\r\n    render() {\r\n        return <div>\r\n            <MyPosts profilePage={this.props.profilePage} profile={this.props.profile} deletePost={this.props.deletePost}\r\n                     addPost={this.props.addPostActionCreator}/>\r\n        </div>\r\n    }\r\n}\r\n\r\n    let mapStateToProps = (state) => {\r\n        return {\r\n            profilePage: state.profilePage,\r\n            profile: state.profilePage.profile\r\n        }\r\n    }\r\n    /*\r\n    let mapDispatchToProps = (dispatch) =>{\r\n        return {\r\n            addPost: (text) => {\r\n                let action = addPostActionCreator(text);\r\n                dispatch(action);\r\n            },\r\n        }\r\n    }*/\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,\r\n    {addPostActionCreator,\r\n        deletePost\r\n\r\n} ))(myPostsContainer);\r\n\r\n\r\n","import React from 'react';\r\nimport MyPosts from './MyPosts/MyPosts';\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from \"./MyPosts/ProfileInfo/ProfileInfo\";\r\nimport Post from \"./MyPosts/Post/Post\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div className=''>\r\n            <ProfileInfo profile={props.profile} id={props.id} status={props.status} updateStatus={props.updateStatus}\r\n                         isOwner={props.isOwner} savePhoto={props.savePhoto}\r\n                         activateProfileEditMode={props.activateProfileEditMode}\r\n                         deactivateProfileEditMode={props.deactivateProfileEditMode} editMode={props.editMode}\r\n                         saveProfile={props.saveProfile}\r\n            />\r\n            <MyPostsContainer/>\r\n        </div>\r\n    );\r\n}\r\nexport default Profile;","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsRedirect = (state) => {\r\n    return {\r\n        isAuth: state.authReducer.isAuth\r\n    }\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'}/>;\r\n            return <Component {...this.props}/>;\r\n        }\r\n    }\r\n\r\n let   ConnectedRedirectComponent = connect(mapStateToPropsRedirect)(RedirectComponent);\r\n    return ConnectedRedirectComponent;\r\n}","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport * as axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    activateProfileEditMode, deactivateProfileEditMode, deletePost,\r\n    getProfileTh,\r\n    getUserStatusTh,\r\n    savePhoto, saveProfile,\r\n    setUserProfile,\r\n    updateStatusTh\r\n} from \"../../Redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../HOC/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    refreshProfile() {\r\n        let userID = this.props.match.params.userID;\r\n        if (!userID) {\r\n            userID = this.props.id;\r\n        }\r\n        this.props.getProfileTh(userID);\r\n        this.props.getUserStatusTh(userID);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userID != prevProps.match.params.userID) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile {...this.props} profile={this.props.profile} id={this.props.id} status={this.props.status}\r\n                         updateStatus={this.props.updateStatusTh} isOwner={!this.props.match.params.userID}\r\n                         savePhoto={this.props.savePhoto} activateProfileEditMode={this.props.activateProfileEditMode}\r\n                         deactivateProfileEditMode={this.props.deactivateProfileEditMode}\r\n                         editMode={this.props.editMode} saveProfile={this.props.saveProfile}\r\n                         deletePost={this.props.deletePost}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    id: state.authReducer.id,\r\n    status: state.profilePage.status,\r\n    editMode: state.profilePage.profileEditMode\r\n\r\n});\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        setUserProfile,\r\n        getProfileTh,\r\n        getUserStatusTh,\r\n        updateStatusTh,\r\n        savePhoto,\r\n        activateProfileEditMode,\r\n        deactivateProfileEditMode,\r\n        saveProfile\r\n    }),\r\n    withAuthRedirect,\r\n    withRouter,\r\n)(ProfileContainer);","import React from 'react';\r\nimport s from './News.module.css'\r\n\r\nconst News = (props) =>{\r\n    return(\r\n        <div>\r\n            News\r\n        </div>\r\n    );\r\n}\r\nexport default News;","import React from 'react';\r\nimport s from './Music.module.css';\r\n\r\nconst Music = (props) =>{\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    );\r\n}\r\nexport default Music;","import React from 'react';\r\nimport s from './Settings.module.css';\r\n\r\nconst Settings = (props) =>{\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    );\r\n}\r\nexport default Settings;","const SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\ntype DialogsType ={\r\n    id: number\r\n    name: string\r\n}\r\ntype MessagesType ={\r\n    id: number\r\n    message: string\r\n}\r\n\r\nlet initialState = {\r\n\r\n    dialogs: [\r\n        {id: 1, name: \"Ruslan\"},\r\n        {id: 2, name: \"Ihor\"},\r\n        {id: 3, name: \"Diana\"}\r\n    ] as Array<DialogsType>,\r\n    messages: [\r\n        {id: 1, message: \"Hello world\"},\r\n        {id: 2, message: \"Yo\"},\r\n        {id: 3, message: \"Yo\"},\r\n        {id: 3, message: \"Yawawdaao\"},\r\n\r\n    ]as Array<MessagesType>,\r\n    messageText: \"\"\r\n\r\n}\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst messagesReducer = (state = initialState, action: any): InitialStateType => {\r\n\r\n\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            return {\r\n                ...state,\r\n                messageText: \"\",\r\n                messages: [...state.messages,\r\n                    {id: 1,\r\n                    message: action.messageText\r\n                    }]\r\n            }\r\n        default:   return state;\r\n    }\r\n\r\n}\r\ntype sendMessageActionCreatorType = {\r\n    type: typeof SEND_MESSAGE\r\n    messageText: string\r\n}\r\nexport const sendMessageActionCreator = (text: string): sendMessageActionCreatorType => ({type : SEND_MESSAGE, messageText: text})\r\nexport default messagesReducer;","import React from 'react';\r\nimport s from './Dialog.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Dialog = (props) => {\r\n    let path= \"/dialogs/\" + props.id;\r\n    return (\r\n        <div className={s.item}>\r\n           <NavLink to={path} activeClassName={s.active}> {props.name}</NavLink>\r\n        </div>\r\n\r\n    );\r\n}\r\nexport default Dialog;","import React from 'react';\r\nimport s from './Message.module.css';\r\nimport cn from \"classnames\";\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={cn (s.messageContainer, s.justifyEnd)}>\r\n            <div className={cn (s.messageBox, s.backgroundBlue)}>\r\n                <p className={cn(s.messageText, s.colorWhite)}>{props.messages}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Message;","import React, {useState} from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport Dialog from \"./Dialog/Dialog\";\r\nimport Message from \"./Message/Message\";\r\nimport {Button} from \"antd\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n\r\n    let [message, editMessage] = useState('');\r\n    let [messages, sendMessage] = useState([{message1: ''}]);\r\n    console.log(messages)\r\n\r\n    let messages1 = messages.map\r\n    (el => (<Message messages={el.message1}/>));\r\n\r\n    let dialogs = props.messagesPage.dialogs.map(dialog =>\r\n        (<Dialog name={dialog.name} activeClassName={s.active} id={dialog.id}/>));\r\n    const nullMessage = () => {\r\n        editMessage('')\r\n    }\r\n    return (\r\n\r\n        <div className={s.outerContainer}>\r\n            {/* <div className={s.dialogs}>\r\n                <div className={s.dialogsItem}>\r\n                    {dialogs}\r\n                </div>\r\n            </div>*/}\r\n            <div className={s.container}>\r\n                <div className={s.messages}>\r\n                    {messages1}\r\n                </div>\r\n                <div className={s.messageInput}>\r\n                    <form className={s.form}>\r\n                        <input className={s.input} placeholder={\"Сообщение . . .\"}\r\n                               value={message}\r\n                               type={\"text\"}\r\n                               onKeyPress={event => event.key === 'Enter' ? sendMessage([...messages, {message1: message}])\r\n                                   || nullMessage : null}\r\n                               onChange={(event) => editMessage(event.target.value)}/>\r\n\r\n                        <div>\r\n                            <button className={s.sendButton}\r\n                                    onClick={(event) => sendMessage([...messages, {message1: message}])\r\n                                        || nullMessage}>\r\n                                Send\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {messageTextActionCreator, sendMessageActionCreator} from \"../../Redux/messages-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../HOC/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport MyPosts from \"../Profile/MyPosts/MyPosts\";\r\n\r\nclass DialogsContainer extends React.Component {\r\n    render() {\r\n        return <div>\r\n            <Dialogs messagesPage={this.props.messagesPage} sendMessage={this.props.sendMessageActionCreator}/>\r\n        </div>\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        messagesPage: state.messagesPage,\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {sendMessageActionCreator}),\r\n\r\n)(DialogsContainer);","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\nconst Navbar = (props) => {\r\n\r\n    return (\r\n        <div className={s.navbar}>\r\n            <nav className={s.nav}>\r\n\r\n                <div className={s.item}>\r\n                    <NavLink to=\"/news\" activeClassName={s.active}> Новости</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to=\"/music\" activeClassName={s.active}>Музыка</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to=\"/settings\" activeClassName={s.active}> Настройки</NavLink>\r\n                </div>\r\n\r\n            </nav>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport Navbar from \"./Navbar\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n        sidebar: state.sidebar\r\n    }\r\n}\r\nlet mapDispatchToProps = () => {\r\n    return{\r\n\r\n    }\r\n}\r\n\r\nconst NavbarContainer = connect(mapStateToProps, mapDispatchToProps)(Navbar);\r\n\r\nexport default NavbarContainer;\r\n","import {userAPI} from \"../API/API\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_USERS_TOTAL_COUNT = 'SET_USERS_TOTAL_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_IN_PROGRESS = 'TOGGLE_IS_FOLLOWING_IN_PROGRESS';\r\n\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [],\r\n}\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n\r\n    switch (action.type) {\r\n        case FOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return {...u, followed: true};\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        }\r\n        case UNFOLLOW : {\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        }\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_USERS_TOTAL_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_IN_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFollowing ?\r\n                    [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}\r\nexport const follow = (userID) => ({type: FOLLOW, userID});\r\nexport const unfollow = (userID) => ({type: UNFOLLOW, userID});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setUsersTotalCount = (totalCount) => ({type: SET_USERS_TOTAL_COUNT, count: totalCount});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleFollowingInProgress = (isFollowing, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_IN_PROGRESS,\r\n    isFollowing,\r\n    userId\r\n});\r\nexport const getUsersTh= (currentPage, pageSize) => (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n    dispatch(setCurrentPage(currentPage));\r\n    userAPI.getUsers(currentPage, pageSize).then(data => {\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setUsersTotalCount(data.totalCount));\r\n    })\r\n}\r\nexport const unfollowTh = (userId) => (dispatch) =>{\r\n    dispatch(toggleFollowingInProgress(true, userId));\r\n    userAPI.unfollow(userId).then(response => {\r\n        if (response.data.resultCode == 0) {\r\n            dispatch(unfollow(userId));\r\n        }\r\n        dispatch(toggleFollowingInProgress(false, userId));\r\n    });\r\n}\r\nexport const followTh = (userId) => (dispatch) =>{\r\n    dispatch(toggleFollowingInProgress(true, userId));\r\n    userAPI.follow(userId).then(response => {\r\n        if (response.data.resultCode == 0) {\r\n            dispatch(follow(userId));\r\n        }\r\n        dispatch(toggleFollowingInProgress(false, userId));\r\n    });\r\n}\r\nexport default usersReducer;","import React, {useState} from 'react';\r\nimport s from \"./Paginator.module.css\";\r\nimport cn from \"classnames\";\r\nimport {Button} from \"antd\";\r\n\r\n\r\nlet Paginator = ({totalItemsCount, portionSize, currentPage, onPageChange}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / portionSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount/portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionNumber = portionNumber * portionSize;\r\n\r\n    return <>\r\n        <div className={s.paginator}>\r\n\r\n          {portionNumber > 1 &&\r\n        <Button onClick={()=> {setPortionNumber (1)}}>First</Button>}\r\n        {portionNumber > 1 &&\r\n        <Button onClick={()=> {setPortionNumber (portionNumber- 1)}}>Previous</Button>}\r\n        {pages.filter(p => p >= leftPortionNumber && p<= rightPortionNumber)\r\n            .map(p => {\r\n            return<Button className={\r\n                cn({[s.selectedPage]: currentPage === p}, s.pageNumber)}\r\n                           key={p}\r\n                           onClick={(e) => {\r\n                               onPageChange(p)\r\n                           }}\r\n            >{p}</Button>\r\n        })}\r\n        {portionCount > portionNumber &&\r\n        <Button onClick={()=>{setPortionNumber(portionNumber+1)}}>Next</Button>}\r\n        {portionCount > portionNumber &&\r\n        <Button onClick={()=>{setPortionNumber(portionCount)}}>Last</Button>}\r\n\r\n    </div>\r\n    </>\r\n}\r\nexport default Paginator;","import s from \"./Users.module.css\";\r\nimport userPhoto from \"../../img/1.png\";\r\nimport React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Paginator from \"../Common/Paginator\";\r\nimport 'antd/dist/antd.css';\r\nimport {Button} from 'antd';\r\n\r\n\r\nconst Users = (props) => {\r\n\r\n    return <div>\r\n        <div>\r\n            <Paginator totalItemsCount={props.totalUsersCount} onPageChange={props.onPageChange}\r\n                       currentPage={props.currentPage}\r\n                       portionSize={props.pageSize}/>\r\n        </div>\r\n\r\n        {props.users.map(u => <div key={u.id}>\r\n                    <span>\r\n                        <div>\r\n                            <NavLink to={\"/profile/\" + u.id}>\r\n                            <img src={u.photos.small != null ? u.photos.small : userPhoto} className={s.userPhoto}/>\r\n                        </NavLink>\r\n                            </div>\r\n                        <div className={s.followButton}>\r\n                            {u.followed ?\r\n                                <Button type=\"primary\" size=\"middle\"\r\n                                        disabled={props.followingInProgress.some(id => id === u.id)}\r\n                                        onClick={() => {\r\n                                            props.unfollow(u.id);\r\n                                        }}> Unfollow </Button> :\r\n\r\n                                <Button type=\"primary\" size=\"middle\"\r\n                                        disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => {\r\n                                    props.follow(u.id);\r\n\r\n\r\n                                }}>Follow</Button>}\r\n                        </div>\r\n                    </span>\r\n            <span>\r\n                        <span>\r\n                            <div>{u.name}</div>\r\n                            <div>{u.status}</div>\r\n                        </span>\r\n            </span>\r\n        </div>)\r\n        }\r\n    </div>\r\n}\r\nexport default Users;","import {createSelector} from \"reselect\";\r\n\r\nexport const getUsers = (state) => {\r\n   return  state.usersPage.users;\r\n}\r\nexport const getUsersSuperSelector = createSelector(getUsers, (users) => {\r\n   return  users;\r\n})\r\n\r\n\r\nexport const getPageSize = (state) => {\r\n   return  state.usersPage.pageSize;\r\n}\r\nexport const getTotalUsersCount = (state) => {\r\n   return  state.usersPage.totalUsersCount;\r\n}\r\nexport const getCurrentPage = (state) => {\r\n   return  state.usersPage.currentPage;\r\n}\r\nexport const getIsFetching = (state) => {\r\n   return  state.usersPage.isFetching;\r\n}\r\nexport const getFollowingInProgress = (state) => {\r\n   return  state.usersPage.followingInProgress;\r\n}\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow, followTh, getUsersTh,\r\n    setCurrentPage,\r\n    unfollow, unfollowTh\r\n} from \"../../Redux/users-reducer\";\r\n\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../Common/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../HOC/WithAuthRedirect\";\r\nimport {\r\n    getCurrentPage, getFollowingInProgress, getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount, getUsers, getUsersSuperSelector,\r\n} from \"../../Redux/users-selectors\";\r\n\r\nclass UsersAPI extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsersTh(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChange = (pageNumber) => {\r\n        this.props.getUsersTh(pageNumber, this.props.pageSize);\r\n    }\r\n\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChange={this.onPageChange}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   users={this.props.users}\r\n                   isFetching={this.props.isFetching}\r\n                   followingInProgress={this.props.followingInProgress}\r\n                   toggleFollowingInProgress={this.props.toggleFollowingInProgress}\r\n                   unfollow={this.props.unfollowTh}\r\n                   follow={this.props.followTh}\r\n            /></ >\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsersSuperSelector(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n    }\r\n}\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps,\r\n        {\r\n            follow, unfollow, setCurrentPage, getUsersTh, unfollowTh, followTh\r\n        }))(UsersAPI);\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Preloader from \"../Common/Preloader\";\r\nimport {Button} from \"react-bootstrap\";\r\n\r\nconst Header = (props) => {\r\n\r\n    return (\r\n        <header className={s.header}>\r\n        <img src='https://logoza.ru/img/rock.png' />\r\n        <div className={s.loginBlock}>\r\n            {props.isAuth? <div> {props.login} - <Button onClick={props.logout}>Log out</Button></div>\r\n            :<NavLink to={'/login'}>Login</NavLink>}\r\n        </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import {authMe, loginAPI, securityAPI} from \"../API/API\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\nconst SET_AUTH_PROFILE = 'SET_AUTH_PROFILE';\r\nconst GET_CAPTCHA_URL = 'GET_CAPTCHA_URL';\r\n\r\n\r\nexport type InitialStateType = {\r\n    id: string | null,\r\n    login: string | null,\r\n    email: string | null,\r\n    isAuth: boolean,\r\n    isFetching: boolean,\r\n    authUserProfile: object | null,\r\n    captchaUrl: string | null\r\n}\r\n\r\nlet initialState: InitialStateType = {\r\n    id: null,\r\n    login: null,\r\n    email: null,\r\n    isAuth: false,\r\n    isFetching: false,\r\n    authUserProfile: null,\r\n    captchaUrl: null\r\n\r\n\r\n}\r\nconst authReducer = (state = initialState, action: any): InitialStateType => {\r\n\r\n\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                ...action.payload.isAuth,\r\n\r\n            }\r\n        case SET_AUTH_PROFILE:\r\n            return {\r\n                ...state,\r\n                authUserProfile: action.authProfile,\r\n\r\n            }\r\n        case GET_CAPTCHA_URL:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                captchaUrl: action.payload.captchaUrl\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}\r\ntype SetAuthUserDataActionPayloadType ={\r\n    id: number | null\r\n    login: string | null\r\n    email:string | null\r\n    isAuth:boolean\r\n}\r\ntype SetAuthUserDataActionType = {\r\n    type: typeof SET_USER_DATA,\r\n    payload: SetAuthUserDataActionPayloadType\r\n}\r\ntype SetGetCaptchaUrlSuccess = {\r\n    type: typeof SET_USER_DATA,\r\n    payload: any\r\n}\r\n\r\nexport const setAuthUserData = (id: number | null, login: string | null, email: string | null, isAuth: boolean): SetAuthUserDataActionType => ({\r\n    type: SET_USER_DATA,\r\n    payload: {id, login, email, isAuth}\r\n});\r\n\r\nexport const getCaptchaUrlSuccess = (captchaUrl: string | null): SetGetCaptchaUrlSuccess => ({\r\n    type: SET_USER_DATA,\r\n    payload: {captchaUrl}\r\n});\r\n\r\n\r\ntype SetAuthUserProfileActionType={\r\n    type: typeof SET_AUTH_PROFILE,\r\n    authProfile: {}\r\n}\r\nexport const setAuthUserProfile = (authProfile: {}): SetAuthUserProfileActionType => ({type: SET_AUTH_PROFILE, authProfile});\r\n\r\n\r\nexport const authMeTh = () => async (dispatch: any) => {\r\n    let response = await authMe()\r\n    if (response.data.resultCode === 0) {\r\n        let {id, login, email} = response.data.data;\r\n        dispatch(setAuthUserData(id, login, email, true));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const login = (email: string, password: string, rememberMe: boolean, captcha: string | null) => async (dispatch: any) => {\r\n\r\n    let response = await loginAPI.login(email, password, rememberMe, captcha);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(authMeTh());\r\n    } else  if (response.data.resultCode === 10) {\r\n        dispatch(getCaptchaUrl())\r\n    }\r\n        else{\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit(\"login\", {_error: message}));\r\n\r\n    }\r\n\r\n\r\n}\r\nexport const getCaptchaUrl = () => async (dispatch: any) => {\r\n\r\n    const response = await securityAPI.getCaptchaUrl();\r\n    const captchaUrl = response.data.url;\r\n    dispatch(getCaptchaUrlSuccess(captchaUrl))\r\n}\r\n\r\nexport const logout = () => async (dispatch: any) => {\r\n    let response = await loginAPI.logout();\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {authMeTh, logout, setAuthUserData, setAuthUserProfile} from \"../../Redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    login: state.authReducer.login,\r\n    isAuth: state.authReducer.isAuth,\r\n    authUserProfile: state.authReducer.authUserProfile,\r\n\r\n});\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from 'react'\r\nimport {Redirect} from \"react-router-dom\";\r\nimport 'antd/dist/antd.css';\r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\n\r\n\r\nconst LoginForm = (props) => {\r\n\r\n    return (<div>\r\n        <Form\r\n            name=\"basic\"\r\n            labelCol={{\r\n                span: 3,\r\n            }}\r\n            wrapperCol={{\r\n                span: 10,\r\n            }}\r\n            initialValues={{\r\n                remember: true,\r\n            }}\r\n            onFinish={props.onSubmit}\r\n\r\n\r\n        >\r\n\r\n            <Form.Item\r\n                label=\"Username\"\r\n                name=\"username\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input your username!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input/>\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                label=\"Password\"\r\n                name=\"password\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input your password!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input.Password/>\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                name=\"remember\"\r\n                valuePropName=\"checked\"\r\n                wrapperCol={{\r\n                    offset: 8,\r\n                    span: 16,\r\n                }}\r\n            >\r\n                <Checkbox>Remember me</Checkbox>\r\n            </Form.Item>\r\n            {props.captchaUrl && <Form.Item\r\n                wrapperCol={{\r\n                    offset: 8,\r\n                    span: 16,\r\n                }}\r\n            >\r\n                <img src={props.captchaUrl}/>\r\n            </Form.Item>}\r\n            {props.captchaUrl && <Form.Item\r\n                label=\"captcha\"\r\n                name=\"captcha\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input Captcha!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input/>\r\n            </Form.Item>\r\n            }\r\n\r\n            <Form.Item\r\n                wrapperCol={{\r\n                    offset: 8,\r\n                    span: 16,\r\n                }}\r\n            >\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                    Submit\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n\r\n    </div>\r\n        /*<form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder={\"Email\"} name={\"email\"} component={Input} validate={[required, maxLength20]}/>\r\n            </div>\r\n            <div>\r\n                <Field placeholder={\"Password\"} name={\"password\"} type={\"password\"} component={Input}\r\n                       validate={[required, maxLength20]}/>\r\n            </div>\r\n            <div>\r\n                <Field type={\"checkbox\"} name={\"rememberMe\"} component={Input}/> Remember me\r\n            </div>\r\n            { props.error && <div className={style.formSummaryError}>\r\n                {props.error}\r\n            </div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>*/\r\n    )\r\n};\r\n/*const LoginReduxForm = reduxForm({\r\n    form: \"login\"\r\n})(LoginForm);*/\r\nconst Login = (props) => {\r\n    const onSubmit = (values) => {\r\n        props.login(values.username, values.password, values.remember, values.captcha);\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    } else {\r\n        return <div>\r\n            <h1>Login</h1>\r\n            <LoginForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react'\r\nimport Login from \"./Login\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../Redux/auth-reducer\";\r\n\r\n\r\nclass LoginContainer extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div><Login login={this.props.login} isAuth={this.props.isAuth} captchaUrl={this.props.captchaUrl}/></div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.authReducer.isAuth,\r\n    captchaUrl: state.authReducer.captchaUrl,\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {login}),\r\n)(LoginContainer);","import {authMeTh} from \"./auth-reducer\";\r\n\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nexport type InitialStateType={\r\n    initialized: boolean,\r\n\r\n}\r\n\r\nlet initialState: InitialStateType = {\r\n    initialized: false,\r\n\r\n}\r\nconst appReducer = (state = initialState, action: any): InitialStateType => {\r\n\r\n\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n               initialized: true,\r\n\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}\r\n type InitializedSuccessActionType={\r\n    type: typeof INITIALIZED_SUCCESS\r\n}\r\nexport const initializedSuccess = (): InitializedSuccessActionType => ({\r\n    type: INITIALIZED_SUCCESS,\r\n});\r\n\r\nexport const initializeApp = () => (dispatch: any) => {\r\n    let promise = dispatch(authMeTh());\r\npromise.then(()=>{\r\n    dispatch(initializedSuccess());\r\n});\r\n\r\n\r\n}\r\nexport default appReducer;","import React from 'react';\nimport './App.css';\nimport ProfileContainer from './Components/Profile/ProfileContainer';\nimport News from \"./Components/News/News\";\nimport {NavLink, Route, withRouter, Switch, Redirect} from \"react-router-dom\";\nimport Music from \"./Components/Music/Music\";\nimport Settings from \"./Components/Settings/Settings\";\nimport DialogsContainer from \"./Components/Dialogs/DialogsContainer\";\nimport NavbarContainer from \"./Components/Navbar/NavbarContainer\";\nimport UsersContainer from \"./Components/Users/UsersContainer\";\nimport HeaderContainer from \"./Components/Header/HeaderContainer\";\nimport LoginContainer from \"./Components/Login/LoginContainer\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./Redux/app-reducer\";\nimport Preloader from \"./Components/Common/Preloader\";\nimport Navbar from \"./Components/Navbar/Navbar\";\nimport 'antd/dist/antd.css';\nimport {Layout, Menu, Button} from 'antd';\nimport {\n    MenuUnfoldOutlined,\n    MenuFoldOutlined,\n    UserOutlined,\n    VideoCameraOutlined,\n    FormOutlined,\n    TeamOutlined,\n    UploadOutlined,\n} from '@ant-design/icons';\nimport s from \"./Components/Navbar/Navbar.module.css\";\nimport {logout} from \"./Redux/auth-reducer\";\nimport ProfileStatusWithHooks from \"./Components/Profile/MyPosts/ProfileInfo/ProfileStatusWithHooks\";\n\n\nconst {Header, Sider, Content} = Layout;\n\nclass App extends React.Component {\n    state = {\n        collapsed: false,\n        size: 'large',\n    };\n\n    toggle = () => {\n        this.setState({\n            collapsed: !this.state.collapsed,\n        });\n    };\n    catchAllUnhandledError = () => {\n        alert(\"Some Error\");\n    }\n\n    componentDidMount() {\n        this.props.initializeApp();\n        window.addEventListener(\"unhandledrejection\", this.catchAllUnhandledError);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"unhandledrejection\", this.catchAllUnhandledError);\n    }\n\n    render() {\n        const {size} = this.state;\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n        return <>\n            <Layout>\n                <Sider trigger={null} collapsible collapsed={this.state.collapsed}>\n                    <div className=\"logo\"/>\n                    <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\n                        <Menu.Item key=\"1\" icon={<UserOutlined/>}>\n                            <NavLink to=\"/profile\" activeClassName={s.active}>Профиль</NavLink>\n                        </Menu.Item>\n                        <Menu.Item key=\"2\" icon={<FormOutlined/>}>\n                            <NavLink to=\"/dialogs\" activeClassName={s.active}>Сообщения</NavLink>\n                        </Menu.Item>\n                        <Menu.Item key=\"3\" icon={<TeamOutlined/>}>\n                            <NavLink to=\"/users\" activeClassName={s.active}> Пользователи</NavLink>\n                        </Menu.Item>\n\n                    </Menu>\n                </Sider>\n                <Layout className=\"site-layout\">\n                    <Header className=\"site-layout-background\" style={{padding: 0}}>\n                        <div className=\"auth-block\"> {this.props.isAuth ?\n                            <div> {this.props.login} - <Button onClick={this.props.logout}>\n                                Logout</Button></div>\n                            : <NavLink to={'/login'}>Login</NavLink>}\n                        </div>\n                        {React.createElement(this.state.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined, {\n                            className: 'trigger',\n                            onClick: this.toggle,\n                        })}\n\n                    </Header>\n                    <Content\n                        className=\"site-layout-background\"\n                        style={{\n                            margin: '24px 16px',\n                            padding: 24,\n                            minHeight: 280,\n                        }}\n                    >\n                        <Switch>\n                            <Route path='/' exact><Redirect to='/profile'/></Route>\n                            <Route path='/dialogs' render={() => <DialogsContainer/>}/>\n                            <Route path='/profile/:userID?' render={() => <ProfileContainer/>}/>\n                            <Route path='/news' render={() => <News/>}/>\n                            <Route path='/music' render={() => <Music/>}/>\n                            <Route path='/settings' render={() => <Settings/>}/>\n                            <Route path='/users' render={() => <UsersContainer/>}/>\n                            <Route path='/login' render={() => <LoginContainer/>}/>\n                            <Route path='*' render={() => <div>404 NOT FOUND</div>}/>\n                        </Switch>\n                    </Content>\n                </Layout>\n            </Layout>\n\n        </>\n\n\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized,\n    login: state.authReducer.login,\n    isAuth: state.authReducer.isAuth,\n    authUserProfile: state.authReducer.authUserProfile\n})\n\nexport default compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp, logout}))(App);","\r\nlet initialState ={\r\n    friendName:[\r\n        {friendsName: \"Diana\"},\r\n        {friendsName: \"Ihor\"},\r\n        {friendsName: \"Ruslan\"}\r\n    ]\r\n}\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n    return state;\r\n}\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport messagesReducer from \"./messages-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddlware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet redusers = combineReducers({\r\n   profilePage: profileReducer,\r\n    messagesPage: messagesReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    authReducer: authReducer,\r\n    app: appReducer,\r\n    form: formReducer,\r\n});\r\n\r\nlet store = createStore(redusers, applyMiddleware(thunkMiddlware));\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from \"./Redux/redux-store\";\nimport {BrowserRouter, HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport {reduxForm} from \"redux-form\";\n\n\nreduxForm( ReactDOM.render(\n    <HashRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </HashRouter>,\n    document.getElementById('root')\n))\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1BCBQ\",\"item\":\"Navbar_item__3RZJI\",\"active\":\"Navbar_active__3bnlt\",\"navbar\":\"Navbar_navbar__2QnsP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"outerContainer\":\"Dialogs_outerContainer__27pNM\",\"container\":\"Dialogs_container__URaYG\",\"messages\":\"Dialogs_messages__3tDVN\",\"form\":\"Dialogs_form__2tbH1\",\"input\":\"Dialogs_input__1C3Of\",\"sendButton\":\"Dialogs_sendButton__1D55q\",\"messageInput\":\"Dialogs_messageInput__1AE57\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"discriptionBlock\":\"ProfileInfo_discriptionBlock__18aui\",\"largeUserPhoto\":\"ProfileInfo_largeUserPhoto__2cOi9\",\"photoUpload\":\"ProfileInfo_photoUpload__oxH0y\",\"editProfile\":\"ProfileInfo_editProfile__3Q2Nj\",\"contacts\":\"ProfileInfo_contacts___CT2U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageBox\":\"Message_messageBox__4LClL\",\"messageText\":\"Message_messageText__39AmX\",\"messageContainer\":\"Message_messageContainer__2UX_c\",\"justifyEnd\":\"Message_justifyEnd__2dXGz\",\"colorWhite\":\"Message_colorWhite__1GeUd\",\"backgroundBlue\":\"Message_backgroundBlue__IEBpt\"};"],"sourceRoot":""}