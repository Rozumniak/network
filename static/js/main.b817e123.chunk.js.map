{"version":3,"sources":["Components/Common/Paginator.module.css","Components/Profile/MyPosts/Post/Post.module.css","Components/Profile/MyPosts/MyPosts.module.css","Components/Common/FormControls.module.css","Components/Dialogs/Dialog/Dialog.module.css","Components/Users/Users.module.css","Components/Header/Header.module.css","Components/Dialogs/Message/Message.module.css","img/1.png","Components/Profile/MyPosts/Post/Post.jsx","utilits/validators/validators.js","API/API.js","Redux/profile-reducer.ts","Components/Profile/MyPosts/MyPosts.jsx","img/Curve-Loading.gif","Components/Common/Preloader.jsx","Components/Profile/MyPosts/ProfileInfo/ProfileStatusWithHooks.jsx","Components/Common/FormControls.js","Components/Profile/MyPosts/ProfileInfo/ProfileDataForm.jsx","Components/Profile/MyPosts/ProfileInfo/ProfileInfo.jsx","Components/Profile/MyPosts/MyPostsContainer.jsx","Components/Profile/Profile.jsx","HOC/WithAuthRedirect.jsx","Components/Profile/ProfileContainer.jsx","Components/News/News.js","Components/Music/Music.js","Components/Settings/Settings.js","Redux/messages-reducer.ts","Components/Dialogs/Dialog/Dialog.js","Components/Dialogs/Message/Message.js","Components/Dialogs/Dialogs.js","Components/Dialogs/DialogsContainer.js","Components/Navbar/Navbar.jsx","Components/Navbar/NavbarContainer.jsx","Redux/users-reducer.js","Components/Common/Paginator.jsx","Components/Users/Users.js","Redux/users-selectors.js","Components/Users/UsersContainer.jsx","Components/Header/Header.jsx","Redux/auth-reducer.ts","Components/Header/HeaderContainer.jsx","Components/Login/Login.jsx","Components/Login/LoginContainer.jsx","Redux/app-reducer.ts","App.js","Redux/sidebar-reducer.js","Redux/redux-store.js","index.js","Components/Navbar/Navbar.module.css","Components/Profile/MyPosts/ProfileInfo/ProfileInfo.module.css","Components/Dialogs/Dialogs.module.css"],"names":["module","exports","Post","props","profile","className","s","item","src","photos","small","userPhoto","message","like","onClick","icon","LikeOutlined","deletePost","required","value","maxLengthCreator","maxLength","length","instance","axios","withCredentials","headers","baseURL","userAPI","currentPage","pageSize","get","then","response","data","id","delete","post","profileAPI","userId","status","put","photo","formData","FormData","append","loginAPI","email","password","rememberMe","captcha","securityAPI","ADD_POST","SET_USER_PROFILE","SET_USER_STATUS","STATUS_UPDATE","SAVE_PHOTO_SUCCESS","ACTIVATE_EDIT_MODE","DEACTIVATE_EDIT_MODE","DELETE_POST","initialState","posts","text","likesCount","profileEditMode","statusInProgress","setUserProfile","type","setUserStatus","savePhotoSuccess","editModeOn","editModeOff","profileReducer","state","action","newText","isUpdate","filter","p","postID","layout","labelCol","span","wrapperCol","AddPostReduxForm","Input","TextArea","reduxForm","form","name","onFinish","onSubmit","Item","size","rules","offset","htmlType","MyPosts","React","memo","console","log","profilePage","reverse","map","dispatch","postsBlock","postText","addPost","Preloader","preloader","ProfileStatusWithHooks","useState","editMode","setEditMode","setStatus","useEffect","onDoubleClick","isOwner","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","FormControl","input","meta","child","hasError","error","touched","styles","formControl","children","Textarea","restProps","createField","placeholder","validators","component","Field","validate","ProfileDataReduxForm","handleSubmit","photoUpload","UploadOutlined","target","files","savePhoto","Object","keys","contacts","key","ProfileData","discriptionBlock","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contacts","ProfileInfo","editProfile","deactivateProfileEditMode","activateProfileEditMode","large","largeUserPhoto","initialValues","saveProfile","myPostsContainer","this","addPostActionCreator","Component","compose","connect","Profile","MyPostsContainer","mapStateToPropsRedirect","isAuth","authReducer","withAuthRedirect","RedirectComponent","to","ProfileContainer","userID","match","params","getProfileTh","getUserStatusTh","refreshProfile","prevProps","prevState","snapshot","updateStatusTh","a","resultCode","getState","withRouter","News","Music","Settings","SEND_MESSAGE","dialogs","jf","messages","messageText","messagesReducer","Dialog","path","activeClassName","active","Message","maxLength50","MessageReduxForm","Dialogs","messagesPage","el","dialog","dialogsItem","sendMessage","sendMessageActionCreator","Navbar","navbar","nav","sidebar","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_USERS_TOTAL_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_IN_PROGRESS","users","totalUsersCount","isFetching","followingInProgress","follow","unfollow","setCurrentPage","toggleIsFetching","toggleFollowingInProgress","isFollowing","usersReducer","u","followed","count","Paginator","totalItemsCount","portionSize","onPageChange","pagesCount","Math","ceil","pages","i","push","portionCount","portionNumber","setPortionNumber","leftPortionNumber","rightPortionNumber","paginator","cn","selectedPage","pageNumber","Users","followButton","disabled","some","getUsersSuperSelector","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersAPI","getUsersTh","unfollowTh","followTh","totalCount","items","Header","header","loginBlock","login","Button","logout","SET_USER_DATA","SET_AUTH_PROFILE","GET_CAPTCHA_URL","authUserProfile","captchaUrl","setAuthUserData","payload","getCaptchaUrlSuccess","authMeTh","getCaptchaUrl","url","authProfile","HeaderContainer","LoginForm","remember","label","Password","valuePropName","Login","values","username","LoginContainer","stopSubmit","_error","INITIALIZED_SUCCESS","initialized","appReducer","Layout","Sider","Content","App","collapsed","toggle","setState","catchAllUnhandledError","alert","initializeApp","window","addEventListener","removeEventListener","trigger","collapsible","theme","mode","defaultSelectedKeys","UserOutlined","FormOutlined","TeamOutlined","style","padding","createElement","MenuUnfoldOutlined","MenuFoldOutlined","margin","minHeight","exact","render","DialogsContainer","UsersContainer","app","friendName","friendsName","sidebarReducer","redusers","combineReducers","formReducer","store","createStore","applyMiddleware","thunkMiddlware","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.b817e123.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__TmYM-\",\"pageNumber\":\"Paginator_pageNumber__VTzaX\",\"selectedPage\":\"Paginator_selectedPage__3SkPi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__qgLu_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__IKVWh\",\"posts\":\"MyPosts_posts__2281S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__2Y3MO\",\"error\":\"FormControls_error__3fwNV\",\"formSummaryError\":\"FormControls_formSummaryError__3uC7c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Dialog_item__1E3wH\",\"active\":\"Dialog_active__22o0r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__3V6cJ\",\"followButton\":\"Users_followButton__10njZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1Ya28\",\"loginBlock\":\"Header_loginBlock__AUhM_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Message_item__3PE_v\"};","export default __webpack_public_path__ + \"static/media/1.a2446033.png\";","import React, {useState} from 'react';\r\nimport s from './Post.module.css';\r\n\r\nimport {Button,} from 'antd';\r\nimport {LikeOutlined} from '@ant-design/icons';\r\nimport userPhoto from \"../../../../img/1.png\";\r\n\r\nconst Post = (props) => {\r\n\r\n    let addLike = () => {\r\n\r\n    }\r\n\r\n    if (!props.profile) {\r\n        return null\r\n    }\r\n    return (\r\n        <div className={s.item}>\r\n            <img src={props.profile.photos.small || userPhoto} className={s.userPhoto}/>\r\n            {props.message}\r\n            <div>\r\n                <span>like {props.like}</span>\r\n            </div>\r\n            <div><Button onClick={addLike} icon={<LikeOutlined/>}></Button></div>\r\n            <div><Button onClick={props.deletePost}> X </Button></div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Post;","export const required = value => {\r\n    if (value) return undefined;\r\n\r\n    return \"Field is required\";\r\n}\r\n\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}\r\n\r\n","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n\r\n    withCredentials: true,\r\n    headers: {\r\n        'API-KEY': 'cc3bd8cc-4d54-4fd5-94a6-1a89051413f6'\r\n    },\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n\r\n});\r\n\r\n\r\n\r\nexport const userAPI = {\r\n    getUsers(currentPage, pageSize) {\r\n        return instance.get(`users?page=${currentPage} &count=${pageSize}`)\r\n            .then(response => response.data);\r\n    },\r\n\r\n    unfollow(id) {\r\n        return instance.delete(`follow/${id}`)\r\n    },\r\n    follow(id) {\r\n        return instance.post(`follow/${id}`)\r\n    }\r\n}\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId)\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {status: status})\r\n    },\r\n    savePhoto(photo) {\r\n        let formData = new FormData();\r\n        formData.append(\"image\", photo)\r\n        return instance.put(`profile/photo`, formData, {headers: {'Content-Type': 'multipart/form/data'}})\r\n    },\r\n    saveProfile(profile) {\r\n        return instance.put(`profile`, profile)\r\n    }\r\n}\r\nexport const loginAPI = {\r\n    login(email, password, rememberMe = false, captcha) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe, captcha});\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    },\r\n\r\n}\r\nexport const securityAPI ={\r\n    getCaptchaUrl(){\r\n        return instance.get(`/security/get-captcha-url`);\r\n    },\r\n}\r\n\r\nexport const authMe = () => {\r\n    return instance.get(`auth/me`)\r\n}","import {profileAPI} from \"../API/API\";\r\n\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_USER_STATUS = 'SET_USER_STATUS';\r\nconst STATUS_UPDATE = 'STATUS_UPDATE';\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\r\nconst ACTIVATE_EDIT_MODE = 'ACTIVATE_EDIT_MODE';\r\nconst DEACTIVATE_EDIT_MODE = 'DEACTIVATE_EDIT_MODE';\r\nconst DELETE_POST = 'DELETE_POST';\r\n\r\ntype PostsType={\r\n    id: number\r\n    text: string\r\n    likesCount: number | null\r\n}\r\ntype ContactsType={\r\n    github: string\r\n    vk: string\r\n    facebook: string\r\n    instagram: string\r\n    twitter: string\r\n    website: string\r\n    youtube: string\r\n    mainLink: string\r\n}\r\ntype PhotosType={\r\n    small: string\r\n    large: string\r\n}\r\ntype ProfileType={\r\n    userId: number\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string\r\n    fullName: string\r\n    contacts: ContactsType\r\n    photos: PhotosType\r\n}\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, text: \"Hello world\", likesCount: 12},\r\n        {id: 2, text: \"This is my first post\", likesCount: 10},\r\n\r\n    ] as Array<PostsType>,\r\n    profile: null as ProfileType | null,\r\n    status: \"\",\r\n    profileEditMode: false as boolean,\r\n    statusInProgress: false as boolean\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst profileReducer = (state = initialState, action: any): InitialStateType => {\r\n\r\n\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts,\r\n                    {id: 6, text: action.newText, likesCount: 0}]\r\n            }\r\n\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        case SET_USER_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        case STATUS_UPDATE:\r\n            return {\r\n                ...state,\r\n                statusInProgress: action.isUpdate\r\n            }\r\n        case SAVE_PHOTO_SUCCESS:\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.photos} as ProfileType\r\n            }\r\n        case ACTIVATE_EDIT_MODE:\r\n            return {\r\n                ...state,\r\n                profileEditMode: true\r\n            }\r\n        case DEACTIVATE_EDIT_MODE:\r\n            return {\r\n                ...state,\r\n                profileEditMode: false\r\n            }\r\n        case DELETE_POST:\r\n            return {\r\n                ...state, posts: {...state.posts.filter(p=> p.id != action.postID)}\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const getProfileTh = (userID: number) => async (dispatch: any) => {\r\n    let response = await profileAPI.getProfile(userID)\r\n        dispatch(setUserProfile(response.data));\r\n\r\n}\r\nexport const getUserStatusTh = (userId: number) => async (dispatch: any) => {\r\n  let response = await profileAPI.getStatus(userId)\r\n\r\n            dispatch(setUserStatus(response.data));\r\n\r\n}\r\nexport const updateStatusTh = (status: string) => async (dispatch: any) => {\r\n    let response = await profileAPI.updateStatus(status)\r\n\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setUserStatus(status));\r\n            }\r\n\r\n}\r\n\r\nexport const savePhoto = (photo: any) => (dispatch: any) => {\r\n    let response = profileAPI.savePhoto(photo)\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(savePhotoSuccess(response.data.data.photos));\r\n            }\r\n}\r\n\r\nexport const saveProfile = (data: ProfileType) => (dispatch: any, getState: any) => {\r\n    dispatch(editModeOff());\r\n   const userID = getState().authReducer.id\r\n    let response = profileAPI.saveProfile(data)\r\n\r\n            if (response.data.resultCode === 0) {\r\n                let response = profileAPI.getProfile(userID)\r\n                    dispatch(setUserProfile(response.data));\r\n            }\r\n}\r\nexport const activateProfileEditMode = () => (dispatch: any) => {\r\n\r\n    dispatch(editModeOn());\r\n}\r\nexport const deactivateProfileEditMode = () => (dispatch: any) => {\r\n    dispatch(editModeOff());\r\n}\r\n\r\ntype AddPostActionType = {\r\n    type: typeof  ADD_POST\r\n    newText: string\r\n}\r\nexport const addPostActionCreator = (text: string): AddPostActionType => ({type: ADD_POST, newText: text});\r\n\r\ntype SetUserProfile = {\r\n    type: typeof SET_USER_PROFILE\r\n    profile: ProfileType\r\n}\r\nexport const setUserProfile = (profile: ProfileType): SetUserProfile => ({type: SET_USER_PROFILE, profile});\r\n\r\ntype SetUserStatus = {\r\n    type: typeof SET_USER_STATUS\r\n    status: string\r\n}\r\nexport const setUserStatus = (status: string): SetUserStatus => ({type: SET_USER_STATUS, status});\r\n\r\ntype SavePhotoSuccessType = {\r\n    type: typeof SAVE_PHOTO_SUCCESS\r\n    photos: PhotosType\r\n}\r\nexport const savePhotoSuccess = (photos: PhotosType): SavePhotoSuccessType => ({type: SAVE_PHOTO_SUCCESS, photos});\r\n\r\ntype EditModeOn = {\r\n    type: typeof ACTIVATE_EDIT_MODE\r\n}\r\nexport const editModeOn = (): EditModeOn => ({type: ACTIVATE_EDIT_MODE});\r\n\r\ntype EditModeOff = {\r\n    type: typeof DEACTIVATE_EDIT_MODE\r\n}\r\nexport const editModeOff = (): EditModeOff => ({type: DEACTIVATE_EDIT_MODE});\r\n\r\ntype DeletePostType ={\r\n    type: typeof DELETE_POST\r\n    postID: number\r\n}\r\nexport const deletePost = (postID: number): DeletePostType => ({ type:DELETE_POST, postID })\r\n\r\n\r\nexport default profileReducer;","import React from 'react';\r\nimport Post from './Post/Post';\r\nimport s from './MyPosts.module.css'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utilits/validators/validators\";\r\n//import {Textarea} from \"../../Common/FormControls\";\r\nimport {Form, Input, InputNumber, Button} from 'antd';\r\nimport {deletePost} from \"../../../Redux/profile-reducer\";\r\n\r\nconst layout = {\r\n    labelCol: {\r\n        span: 8,\r\n    },\r\n    wrapperCol: {\r\n        span: 16,\r\n    },\r\n};\r\nconst {TextArea} = Input;\r\nconst maxLength100 = maxLengthCreator(100);\r\n\r\nconst AddPostForm = (props) => {\r\n    return <Form {...layout} name=\"nest-messages\" onFinish={props.onSubmit}>\r\n        <Form.Item name=\"post\" size=\"large\" rules={[\r\n            {\r\n                required: true,\r\n                message: 'Please input text!',\r\n            },\r\n        ]}>\r\n            <Input.TextArea/>\r\n        </Form.Item>\r\n        <Form.Item wrapperCol={{...layout.wrapperCol, offset: 6,\r\n            span: 100}}>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n                Отправить\r\n            </Button>\r\n        </Form.Item>\r\n    </Form>\r\n}\r\nconst AddPostReduxForm = reduxForm({\r\n    form: \"addPost\"\r\n})(AddPostForm);\r\n\r\nconst MyPosts = React.memo(props => {\r\n    console.log(\"RENDER\");\r\n    let posts = [...props.profilePage.posts]\r\n        .reverse()\r\n        .map(post => (<Post message={post.text}\r\n                            like={post.likesCount} dispatch={props.dispatch}\r\n                            profile={props.profile} deletePost={props.deletePost}/>))\r\n    if (!props.profile) {\r\n        return null\r\n    }\r\n    const onSubmit = (formData) => {\r\n        let postText = formData.post\r\n        props.addPost(postText);\r\n        formData.post = null;\r\n    }\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddPostReduxForm onSubmit={onSubmit}/>\r\n\r\n            <div className={s.posts}>\r\n                {posts}\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n});\r\n\r\nexport default MyPosts;\r\n","export default __webpack_public_path__ + \"static/media/Curve-Loading.5e01ee79.gif\";","import React from 'react';\r\nimport preloader from '../../img/Curve-Loading.gif';\r\n\r\n\r\nconst Preloader = () => {\r\n    return <div>\r\n        <img src={preloader}/>\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    },[props.status]);\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n\r\n    }\r\n    const activateEditMode = () => {\r\n        if (props.isOwner) { setEditMode(true)}\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n    return (\r\n\r\n        <div>\r\n\r\n            {!editMode &&\r\n            <div>\r\n                <b>Status:   </b>\r\n                <span onDoubleClick={activateEditMode}>{props.status || \"------\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input autoFocus={true} onBlur={deactivateEditMode} onChange={onStatusChange}\r\n                       value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n        ;\r\n\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport styles from \"./FormControls.module.css\";\r\nimport {Field} from \"redux-form\";\r\n\r\nexport const FormControl = ({input, meta, child, ...props}) => {\r\n    const hasError = meta.error && meta.touched;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \" \")}>\r\n            <div>{props.children}</div>\r\n            <div>\r\n                {hasError && <span>{meta.error}</span>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl{...props}><textarea {...input}{...restProps}/></FormControl>\r\n}\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl{...props}><input {...input}{...restProps}/></FormControl>\r\n}\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name}\r\n               validate={validators} component={component}\r\n               {...props}\r\n        /> {text}\r\n    </div>\r\n)","import s from \"./ProfileInfo.module.css\";\r\nimport {Input} from \"antd\";\r\nimport {UploadOutlined} from '@ant-design/icons';\r\nimport React from \"react\";\r\nimport {createField, Textarea} from \"../../../Common/FormControls\";\r\nimport {reduxForm} from \"redux-form\";\r\n\r\nconst ProfileDataForm = ({handleSubmit, props, profile}) => {\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            props.savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n    return <div>\r\n        <div className={s.photoUpload}><Input icon={<UploadOutlined/>} type={\"file\"}\r\n                                              onChange={onMainPhotoSelected}/></div>\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <button onClick={() => {\r\n                }}>Save\r\n                </button>\r\n            </div>\r\n            <div>\r\n                <b>Full name:</b> {createField(\"Full name\", \"fullName\", [], \"input\")}\r\n            </div>\r\n            <div>\r\n                <b>В поисках работы:</b> {createField(\"\", \"lookingForAJob\", [], \"input\", {type: \"checkbox\"})}\r\n            </div>\r\n            <div>\r\n                <b>Мои навыки:</b> {createField(\"\", \"lookingForAJobDescription\", [], Textarea)}\r\n            </div>\r\n            <div>\r\n                <b>Обо мне:</b> {createField(\"\", \"aboutMe\", [], Textarea)}\r\n            </div>\r\n\r\n            <div>\r\n                <b>Контакты:</b> {Object.keys(profile.contacts).map(key => {\r\n                return <div>\r\n                    <b>{key}:</b> {createField(key, \"contacts.\" + key, [], \"input\")}\r\n                </div>\r\n            })}\r\n            </div>\r\n\r\n        </form>\r\n\r\n    </div>\r\n}\r\nconst ProfileDataReduxForm = reduxForm({form: \"edit-profile\"})(ProfileDataForm)\r\nexport default ProfileDataReduxForm","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../../Common/Preloader\";\r\n\r\nimport userPhoto from \"../../../../img/1.png\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport {Button, Input} from \"antd\";\r\nimport ProfileDataReduxForm from \"./ProfileDataForm\";\r\n\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <div>\r\n            <Preloader/>\r\n        </div>\r\n    }\r\n    const isEditMode = () => {\r\n        if (props.editMode) {\r\n            return props.deactivateProfileEditMode;\r\n        }\r\n        return props.activateProfileEditMode;\r\n    }\r\n    const onSubmit = (formData) => {\r\n        props.saveProfile(formData);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {props.isOwner &&\r\n            <div className={s.editProfile}>\r\n                <Button onClick={isEditMode()}> {props.editMode ? \"Cancel\" : \"Edit\"}</Button>\r\n            </div>\r\n            }\r\n            <div>\r\n                <img\r\n                    src={props.profile.photos.large || userPhoto}\r\n                    className={s.largeUserPhoto}/>\r\n                <ProfileStatusWithHooks id={props.id} status={props.status} updateStatus={props.updateStatus}\r\n                                        isOwner={props.isOwner}/>\r\n\r\n                {props.isOwner && props.editMode ?\r\n                    <ProfileDataReduxForm initialValues={props.profile} profile={props.profile} savePhoto={props.savePhoto} onSubmit={onSubmit}/> :\r\n                    <ProfileData profile={props.profile}/>\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst ProfileData = (props) => {\r\n    return <div className={s.discriptionBlock}>\r\n        <div>\r\n            <b>Full name:</b> {props.profile.fullName}\r\n        </div>\r\n        <div>\r\n            <b>looking For A Job:</b> {props.profile.lookingForAJob ? \"yes\" : \"no\"}\r\n        </div>\r\n        {props.profile.lookingForAJob &&\r\n        <div>\r\n            <b>My professional skills:</b> {props.profile.lookingForAJobDescription}\r\n        </div>\r\n        }\r\n        <div>\r\n            <b>About me:</b> {props.profile.aboutMe}\r\n        </div>\r\n        <div>\r\n            <b>Contacts:</b> {Object.keys(props.profile.contacts).map(key => {\r\n            return <Contacts key={key} contactTitle={key} contactValue={props.profile.contacts[key]}/>\r\n        })}\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\nconst Contacts = ({contactTitle, contactValue}) => {\r\n    return <div className={s.contacts}>\r\n        <b>{contactTitle}:</b> {contactValue}\r\n\r\n    </div>\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport {addPostActionCreator, deletePost, updateNewPostTextActionCreator} from \"../../../Redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\n\r\nclass myPostsContainer extends React.Component {\r\n\r\n    render() {\r\n        return <div>\r\n            <MyPosts profilePage={this.props.profilePage} profile={this.props.profile} deletePost={this.props.deletePost}\r\n                     addPost={this.props.addPostActionCreator}/>\r\n        </div>\r\n    }\r\n}\r\n\r\n    let mapStateToProps = (state) => {\r\n        return {\r\n            profilePage: state.profilePage,\r\n            profile: state.profilePage.profile\r\n        }\r\n    }\r\n    /*\r\n    let mapDispatchToProps = (dispatch) =>{\r\n        return {\r\n            addPost: (text) => {\r\n                let action = addPostActionCreator(text);\r\n                dispatch(action);\r\n            },\r\n        }\r\n    }*/\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,\r\n    {addPostActionCreator,\r\n        deletePost\r\n\r\n} ))(myPostsContainer);\r\n\r\n\r\n","import React from 'react';\r\nimport MyPosts from './MyPosts/MyPosts';\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from \"./MyPosts/ProfileInfo/ProfileInfo\";\r\nimport Post from \"./MyPosts/Post/Post\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div className=''>\r\n            <ProfileInfo profile={props.profile} id={props.id} status={props.status} updateStatus={props.updateStatus}\r\n                         isOwner={props.isOwner} savePhoto={props.savePhoto}\r\n                         activateProfileEditMode={props.activateProfileEditMode}\r\n                         deactivateProfileEditMode={props.deactivateProfileEditMode} editMode={props.editMode}\r\n                         saveProfile={props.saveProfile}\r\n            />\r\n            <MyPostsContainer/>\r\n        </div>\r\n    );\r\n}\r\nexport default Profile;","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsRedirect = (state) => {\r\n    return {\r\n        isAuth: state.authReducer.isAuth\r\n    }\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'}/>;\r\n            return <Component {...this.props}/>;\r\n        }\r\n    }\r\n\r\n let   ConnectedRedirectComponent = connect(mapStateToPropsRedirect)(RedirectComponent);\r\n    return ConnectedRedirectComponent;\r\n}","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport * as axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    activateProfileEditMode, deactivateProfileEditMode, deletePost,\r\n    getProfileTh,\r\n    getUserStatusTh,\r\n    savePhoto, saveProfile,\r\n    setUserProfile,\r\n    updateStatusTh\r\n} from \"../../Redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../HOC/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    refreshProfile() {\r\n        let userID = this.props.match.params.userID;\r\n        if (!userID) {\r\n            userID = this.props.id;\r\n        }\r\n        this.props.getProfileTh(userID);\r\n        this.props.getUserStatusTh(userID);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userID != prevProps.match.params.userID) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile {...this.props} profile={this.props.profile} id={this.props.id} status={this.props.status}\r\n                         updateStatus={this.props.updateStatusTh} isOwner={!this.props.match.params.userID}\r\n                         savePhoto={this.props.savePhoto} activateProfileEditMode={this.props.activateProfileEditMode}\r\n                         deactivateProfileEditMode={this.props.deactivateProfileEditMode}\r\n                         editMode={this.props.editMode} saveProfile={this.props.saveProfile}\r\n                         deletePost={this.props.deletePost}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    id: state.authReducer.id,\r\n    status: state.profilePage.status,\r\n    editMode: state.profilePage.profileEditMode\r\n\r\n});\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        setUserProfile,\r\n        getProfileTh,\r\n        getUserStatusTh,\r\n        updateStatusTh,\r\n        savePhoto,\r\n        activateProfileEditMode,\r\n        deactivateProfileEditMode,\r\n        saveProfile\r\n    }),\r\n    withAuthRedirect,\r\n    withRouter,\r\n)(ProfileContainer);","import React from 'react';\r\nimport s from './News.module.css'\r\n\r\nconst News = (props) =>{\r\n    return(\r\n        <div>\r\n            News\r\n        </div>\r\n    );\r\n}\r\nexport default News;","import React from 'react';\r\nimport s from './Music.module.css';\r\n\r\nconst Music = (props) =>{\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    );\r\n}\r\nexport default Music;","import React from 'react';\r\nimport s from './Settings.module.css';\r\n\r\nconst Settings = (props) =>{\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    );\r\n}\r\nexport default Settings;","const SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\ntype DialogsType ={\r\n    id: number\r\n    name: string\r\n}\r\ntype MessagesType ={\r\n    id: number\r\n    message: string\r\n}\r\n\r\nlet initialState = {\r\n\r\n    dialogs: [\r\n        {id: 1, name: \"Ruslan\"},\r\n        {id: 2, name: \"Ihor\"},\r\n        {id: 3, name: \"Diana\"},\r\n        {jf: 3 }\r\n    ] as Array<DialogsType>,\r\n    messages: [\r\n        {id: 1, message: \"Hello world\"},\r\n        {id: 2, message: \"Yo\"},\r\n        {id: 3, message: \"Yo\"},\r\n        {id: 3, message: \"Yawawdaao\"},\r\n\r\n    ]as Array<MessagesType>,\r\n    messageText: \"\"\r\n\r\n}\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst messagesReducer = (state = initialState, action: any): InitialStateType => {\r\n\r\n\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            return {\r\n                ...state,\r\n                messageText: \"\",\r\n                messages: [...state.messages,\r\n                    {id: 1,\r\n                    message: action.messageText\r\n                    }]\r\n            }\r\n        default:   return state;\r\n    }\r\n\r\n}\r\ntype sendMessageActionCreatorType = {\r\n    type: typeof SEND_MESSAGE\r\n    messageText: string\r\n}\r\nexport const sendMessageActionCreator = (text: string): sendMessageActionCreatorType => ({type : SEND_MESSAGE, messageText: text})\r\nexport default messagesReducer;","import React from 'react';\r\nimport s from './Dialog.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Dialog = (props) => {\r\n    let path= \"/dialogs/\" + props.id;\r\n    return (\r\n        <div className={s.item}>\r\n           <NavLink to={path} activeClassName={s.active}> {props.name}</NavLink>\r\n        </div>\r\n\r\n    );\r\n}\r\nexport default Dialog;","import React from 'react';\r\nimport s from './Message.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            {props.messages}\r\n        </div>\r\n    );\r\n}\r\nexport default Message;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport Dialog from \"./Dialog/Dialog\";\r\nimport Message from \"./Message/Message\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../Common/FormControls\";\r\nimport {maxLengthCreator, required} from \"../../utilits/validators/validators\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\nconst MessageForm = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name={\"message\"} component={Textarea} validate={[required, maxLength50]}/>\r\n            </div>\r\n            <div>\r\n                <button>Отправить</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nconst MessageReduxForm = reduxForm({\r\n    form: \"message\"\r\n})(MessageForm);\r\nconst Dialogs = (props) => {\r\n\r\n\r\n    let messages = props.messagesPage.messages.map\r\n    (el => (<Message messages={el.message}/>));\r\n\r\n    let dialogs = props.messagesPage.dialogs.map(dialog =>\r\n        (<Dialog name={dialog.name} activeClassName={s.active} id={dialog.id}/>));\r\n\r\n\r\n    let onSubmit = (formData) => {\r\n        let text = formData.message\r\n        props.sendMessage(text);\r\n        formData.message = null;\r\n\r\n    }\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItem}>\r\n                {dialogs}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messages}\r\n                <MessageReduxForm onSubmit={onSubmit}/>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\nexport default Dialogs;","import React from 'react';\r\nimport {messageTextActionCreator, sendMessageActionCreator} from \"../../Redux/messages-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../HOC/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        messagesPage: state.messagesPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (text) => {\r\n            dispatch(sendMessageActionCreator(text));\r\n        },\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\nwithAuthRedirect\r\n)(Dialogs);","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\nconst Navbar = (props) => {\r\n\r\n    return (\r\n        <div className={s.navbar}>\r\n            <nav className={s.nav}>\r\n\r\n                <div className={s.item}>\r\n                    <NavLink to=\"/news\" activeClassName={s.active}> Новости</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to=\"/music\" activeClassName={s.active}>Музыка</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to=\"/settings\" activeClassName={s.active}> Настройки</NavLink>\r\n                </div>\r\n\r\n            </nav>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport Navbar from \"./Navbar\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n        sidebar: state.sidebar\r\n    }\r\n}\r\nlet mapDispatchToProps = () => {\r\n    return{\r\n\r\n    }\r\n}\r\n\r\nconst NavbarContainer = connect(mapStateToProps, mapDispatchToProps)(Navbar);\r\n\r\nexport default NavbarContainer;\r\n","import {userAPI} from \"../API/API\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_USERS_TOTAL_COUNT = 'SET_USERS_TOTAL_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_IN_PROGRESS = 'TOGGLE_IS_FOLLOWING_IN_PROGRESS';\r\n\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [],\r\n}\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n\r\n    switch (action.type) {\r\n        case FOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return {...u, followed: true};\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        }\r\n        case UNFOLLOW : {\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        }\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_USERS_TOTAL_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_IN_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFollowing ?\r\n                    [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}\r\nexport const follow = (userID) => ({type: FOLLOW, userID});\r\nexport const unfollow = (userID) => ({type: UNFOLLOW, userID});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setUsersTotalCount = (totalCount) => ({type: SET_USERS_TOTAL_COUNT, count: totalCount});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleFollowingInProgress = (isFollowing, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_IN_PROGRESS,\r\n    isFollowing,\r\n    userId\r\n});\r\nexport const getUsersTh= (currentPage, pageSize) => (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n    dispatch(setCurrentPage(currentPage));\r\n    userAPI.getUsers(currentPage, pageSize).then(data => {\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setUsersTotalCount(data.totalCount));\r\n    })\r\n}\r\nexport const unfollowTh = (userId) => (dispatch) =>{\r\n    dispatch(toggleFollowingInProgress(true, userId));\r\n    userAPI.unfollow(userId).then(response => {\r\n        if (response.data.resultCode == 0) {\r\n            dispatch(unfollow(userId));\r\n        }\r\n        dispatch(toggleFollowingInProgress(false, userId));\r\n    });\r\n}\r\nexport const followTh = (userId) => (dispatch) =>{\r\n    dispatch(toggleFollowingInProgress(true, userId));\r\n    userAPI.follow(userId).then(response => {\r\n        if (response.data.resultCode == 0) {\r\n            dispatch(follow(userId));\r\n        }\r\n        dispatch(toggleFollowingInProgress(false, userId));\r\n    });\r\n}\r\nexport default usersReducer;","import React, {useState} from 'react';\r\nimport s from \"./Paginator.module.css\";\r\nimport cn from \"classnames\";\r\nimport {Button} from \"antd\";\r\n\r\n\r\nlet Paginator = ({totalItemsCount, portionSize, currentPage, onPageChange}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / portionSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount/portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionNumber = portionNumber * portionSize;\r\n\r\n    return <>\r\n        <div className={s.paginator}>\r\n\r\n          {portionNumber > 1 &&\r\n        <Button onClick={()=> {setPortionNumber (1)}}>First</Button>}\r\n        {portionNumber > 1 &&\r\n        <Button onClick={()=> {setPortionNumber (portionNumber- 1)}}>Previous</Button>}\r\n        {pages.filter(p => p >= leftPortionNumber && p<= rightPortionNumber)\r\n            .map(p => {\r\n            return<Button className={\r\n                cn({[s.selectedPage]: currentPage === p}, s.pageNumber)}\r\n                           key={p}\r\n                           onClick={(e) => {\r\n                               onPageChange(p)\r\n                           }}\r\n            >{p}</Button>\r\n        })}\r\n        {portionCount > portionNumber &&\r\n        <Button onClick={()=>{setPortionNumber(portionNumber+1)}}>Next</Button>}\r\n        {portionCount > portionNumber &&\r\n        <Button onClick={()=>{setPortionNumber(portionCount)}}>Last</Button>}\r\n\r\n    </div>\r\n    </>\r\n}\r\nexport default Paginator;","import s from \"./Users.module.css\";\r\nimport userPhoto from \"../../img/1.png\";\r\nimport React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Paginator from \"../Common/Paginator\";\r\nimport 'antd/dist/antd.css';\r\nimport {Button} from 'antd';\r\n\r\n\r\nconst Users = (props) => {\r\n\r\n    return <div>\r\n        <div>\r\n            <Paginator totalItemsCount={props.totalUsersCount} onPageChange={props.onPageChange}\r\n                       currentPage={props.currentPage}\r\n                       portionSize={props.pageSize}/>\r\n        </div>\r\n\r\n        {props.users.map(u => <div key={u.id}>\r\n                    <span>\r\n                        <div>\r\n                            <NavLink to={\"/profile/\" + u.id}>\r\n                            <img src={u.photos.small != null ? u.photos.small : userPhoto} className={s.userPhoto}/>\r\n                        </NavLink>\r\n                            </div>\r\n                        <div className={s.followButton}>\r\n                            {u.followed ?\r\n                                <Button type=\"primary\" size=\"middle\"\r\n                                        disabled={props.followingInProgress.some(id => id === u.id)}\r\n                                        onClick={() => {\r\n                                            props.unfollow(u.id);\r\n                                        }}> Unfollow </Button> :\r\n\r\n                                <Button type=\"primary\" size=\"middle\"\r\n                                        disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => {\r\n                                    props.follow(u.id);\r\n\r\n\r\n                                }}>Follow</Button>}\r\n                        </div>\r\n                    </span>\r\n            <span>\r\n                        <span>\r\n                            <div>{u.name}</div>\r\n                            <div>{u.status}</div>\r\n                        </span>\r\n            </span>\r\n        </div>)\r\n        }\r\n    </div>\r\n}\r\nexport default Users;","import {createSelector} from \"reselect\";\r\n\r\nexport const getUsers = (state) => {\r\n   return  state.usersPage.users;\r\n}\r\nexport const getUsersSuperSelector = createSelector(getUsers, (users) => {\r\n   return  users;\r\n})\r\n\r\n\r\nexport const getPageSize = (state) => {\r\n   return  state.usersPage.pageSize;\r\n}\r\nexport const getTotalUsersCount = (state) => {\r\n   return  state.usersPage.totalUsersCount;\r\n}\r\nexport const getCurrentPage = (state) => {\r\n   return  state.usersPage.currentPage;\r\n}\r\nexport const getIsFetching = (state) => {\r\n   return  state.usersPage.isFetching;\r\n}\r\nexport const getFollowingInProgress = (state) => {\r\n   return  state.usersPage.followingInProgress;\r\n}\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow, followTh, getUsersTh,\r\n    setCurrentPage,\r\n    unfollow, unfollowTh\r\n} from \"../../Redux/users-reducer\";\r\n\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../Common/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../HOC/WithAuthRedirect\";\r\nimport {\r\n    getCurrentPage, getFollowingInProgress, getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount, getUsers, getUsersSuperSelector,\r\n} from \"../../Redux/users-selectors\";\r\n\r\nclass UsersAPI extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsersTh(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChange = (pageNumber) => {\r\n        this.props.getUsersTh(pageNumber, this.props.pageSize);\r\n    }\r\n\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChange={this.onPageChange}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   users={this.props.users}\r\n                   isFetching={this.props.isFetching}\r\n                   followingInProgress={this.props.followingInProgress}\r\n                   toggleFollowingInProgress={this.props.toggleFollowingInProgress}\r\n                   unfollow={this.props.unfollowTh}\r\n                   follow={this.props.followTh}\r\n            /></ >\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsersSuperSelector(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n    }\r\n}\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps,\r\n        {\r\n            follow, unfollow, setCurrentPage, getUsersTh, unfollowTh, followTh\r\n        }))(UsersAPI);\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Preloader from \"../Common/Preloader\";\r\nimport {Button} from \"react-bootstrap\";\r\n\r\nconst Header = (props) => {\r\n\r\n    return (\r\n        <header className={s.header}>\r\n        <img src='https://logoza.ru/img/rock.png' />\r\n        <div className={s.loginBlock}>\r\n            {props.isAuth? <div> {props.login} - <Button onClick={props.logout}>Log out</Button></div>\r\n            :<NavLink to={'/login'}>Login</NavLink>}\r\n        </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import {authMe, loginAPI, securityAPI} from \"../API/API\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\nconst SET_AUTH_PROFILE = 'SET_AUTH_PROFILE';\r\nconst GET_CAPTCHA_URL = 'GET_CAPTCHA_URL';\r\n\r\n\r\nexport type InitialStateType = {\r\n    id: string | null,\r\n    login: string | null,\r\n    email: string | null,\r\n    isAuth: boolean,\r\n    isFetching: boolean,\r\n    authUserProfile: object | null,\r\n    captchaUrl: string | null\r\n}\r\n\r\nlet initialState: InitialStateType = {\r\n    id: null,\r\n    login: null,\r\n    email: null,\r\n    isAuth: false,\r\n    isFetching: false,\r\n    authUserProfile: null,\r\n    captchaUrl: null\r\n\r\n\r\n}\r\nconst authReducer = (state = initialState, action: any): InitialStateType => {\r\n\r\n\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                ...action.payload.isAuth,\r\n\r\n            }\r\n        case SET_AUTH_PROFILE:\r\n            return {\r\n                ...state,\r\n                authUserProfile: action.authProfile,\r\n\r\n            }\r\n        case GET_CAPTCHA_URL:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                captchaUrl: action.payload.captchaUrl\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}\r\ntype SetAuthUserDataActionPayloadType ={\r\n    id: number | null\r\n    login: string | null\r\n    email:string | null\r\n    isAuth:boolean\r\n}\r\ntype SetAuthUserDataActionType = {\r\n    type: typeof SET_USER_DATA,\r\n    payload: SetAuthUserDataActionPayloadType\r\n}\r\ntype SetGetCaptchaUrlSuccess = {\r\n    type: typeof SET_USER_DATA,\r\n    payload: any\r\n}\r\n\r\nexport const setAuthUserData = (id: number | null, login: string | null, email: string | null, isAuth: boolean): SetAuthUserDataActionType => ({\r\n    type: SET_USER_DATA,\r\n    payload: {id, login, email, isAuth}\r\n});\r\n\r\nexport const getCaptchaUrlSuccess = (captchaUrl: string | null): SetGetCaptchaUrlSuccess => ({\r\n    type: SET_USER_DATA,\r\n    payload: {captchaUrl}\r\n});\r\n\r\n\r\ntype SetAuthUserProfileActionType={\r\n    type: typeof SET_AUTH_PROFILE,\r\n    authProfile: {}\r\n}\r\nexport const setAuthUserProfile = (authProfile: {}): SetAuthUserProfileActionType => ({type: SET_AUTH_PROFILE, authProfile});\r\n\r\n\r\nexport const authMeTh = () => async (dispatch: any) => {\r\n    let response = await authMe()\r\n    if (response.data.resultCode === 0) {\r\n        let {id, login, email} = response.data.data;\r\n        dispatch(setAuthUserData(id, login, email, true));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const login = (email: string, password: string, rememberMe: boolean, captcha: string | null) => async (dispatch: any) => {\r\n\r\n    let response = await loginAPI.login(email, password, rememberMe, captcha);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(authMeTh());\r\n    } else  if (response.data.resultCode === 10) {\r\n        dispatch(getCaptchaUrl())\r\n    }\r\n        else{\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit(\"login\", {_error: message}));\r\n\r\n    }\r\n\r\n\r\n}\r\nexport const getCaptchaUrl = () => async (dispatch: any) => {\r\n\r\n    const response = await securityAPI.getCaptchaUrl();\r\n    const captchaUrl = response.data.url;\r\n    dispatch(getCaptchaUrlSuccess(captchaUrl))\r\n}\r\n\r\nexport const logout = () => async (dispatch: any) => {\r\n    let response = await loginAPI.logout();\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {authMeTh, logout, setAuthUserData, setAuthUserProfile} from \"../../Redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    login: state.authReducer.login,\r\n    isAuth: state.authReducer.isAuth,\r\n    authUserProfile: state.authReducer.authUserProfile,\r\n\r\n});\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from 'react'\r\nimport {Redirect} from \"react-router-dom\";\r\nimport 'antd/dist/antd.css';\r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\n\r\n\r\nconst LoginForm = (props) => {\r\n\r\n    return (<div>\r\n        <Form\r\n            name=\"basic\"\r\n            labelCol={{\r\n                span: 3,\r\n            }}\r\n            wrapperCol={{\r\n                span: 10,\r\n            }}\r\n            initialValues={{\r\n                remember: true,\r\n            }}\r\n            onFinish={props.onSubmit}\r\n\r\n\r\n        >\r\n\r\n            <Form.Item\r\n                label=\"Username\"\r\n                name=\"username\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input your username!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input/>\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                label=\"Password\"\r\n                name=\"password\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input your password!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input.Password/>\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                name=\"remember\"\r\n                valuePropName=\"checked\"\r\n                wrapperCol={{\r\n                    offset: 8,\r\n                    span: 16,\r\n                }}\r\n            >\r\n                <Checkbox>Remember me</Checkbox>\r\n            </Form.Item>\r\n            {props.captchaUrl && <Form.Item\r\n                wrapperCol={{\r\n                    offset: 8,\r\n                    span: 16,\r\n                }}\r\n            >\r\n                <img src={props.captchaUrl}/>\r\n            </Form.Item>}\r\n            {props.captchaUrl && <Form.Item\r\n                label=\"captcha\"\r\n                name=\"captcha\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input Captcha!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input/>\r\n            </Form.Item>\r\n            }\r\n\r\n            <Form.Item\r\n                wrapperCol={{\r\n                    offset: 8,\r\n                    span: 16,\r\n                }}\r\n            >\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                    Submit\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n\r\n    </div>\r\n        /*<form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder={\"Email\"} name={\"email\"} component={Input} validate={[required, maxLength20]}/>\r\n            </div>\r\n            <div>\r\n                <Field placeholder={\"Password\"} name={\"password\"} type={\"password\"} component={Input}\r\n                       validate={[required, maxLength20]}/>\r\n            </div>\r\n            <div>\r\n                <Field type={\"checkbox\"} name={\"rememberMe\"} component={Input}/> Remember me\r\n            </div>\r\n            { props.error && <div className={style.formSummaryError}>\r\n                {props.error}\r\n            </div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>*/\r\n    )\r\n};\r\n/*const LoginReduxForm = reduxForm({\r\n    form: \"login\"\r\n})(LoginForm);*/\r\nconst Login = (props) => {\r\n    const onSubmit = (values) => {\r\n        props.login(values.username, values.password, values.remember, values.captcha);\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    } else {\r\n        return <div>\r\n            <h1>Login</h1>\r\n            <LoginForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react'\r\nimport Login from \"./Login\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../Redux/auth-reducer\";\r\n\r\n\r\nclass LoginContainer extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div><Login login={this.props.login} isAuth={this.props.isAuth} captchaUrl={this.props.captchaUrl}/></div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.authReducer.isAuth,\r\n    captchaUrl: state.authReducer.captchaUrl,\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {login}),\r\n)(LoginContainer);","import {authMeTh} from \"./auth-reducer\";\r\n\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nexport type InitialStateType={\r\n    initialized: boolean,\r\n\r\n}\r\n\r\nlet initialState: InitialStateType = {\r\n    initialized: false,\r\n\r\n}\r\nconst appReducer = (state = initialState, action: any): InitialStateType => {\r\n\r\n\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n               initialized: true,\r\n\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}\r\n type InitializedSuccessActionType={\r\n    type: typeof INITIALIZED_SUCCESS\r\n}\r\nexport const initializedSuccess = (): InitializedSuccessActionType => ({\r\n    type: INITIALIZED_SUCCESS,\r\n});\r\n\r\nexport const initializeApp = () => (dispatch: any) => {\r\n    let promise = dispatch(authMeTh());\r\npromise.then(()=>{\r\n    dispatch(initializedSuccess());\r\n});\r\n\r\n\r\n}\r\nexport default appReducer;","import React from 'react';\nimport './App.css';\nimport ProfileContainer from './Components/Profile/ProfileContainer';\nimport News from \"./Components/News/News\";\nimport {NavLink, Route, withRouter, Switch, Redirect} from \"react-router-dom\";\nimport Music from \"./Components/Music/Music\";\nimport Settings from \"./Components/Settings/Settings\";\nimport DialogsContainer from \"./Components/Dialogs/DialogsContainer\";\nimport NavbarContainer from \"./Components/Navbar/NavbarContainer\";\nimport UsersContainer from \"./Components/Users/UsersContainer\";\nimport HeaderContainer from \"./Components/Header/HeaderContainer\";\nimport LoginContainer from \"./Components/Login/LoginContainer\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./Redux/app-reducer\";\nimport Preloader from \"./Components/Common/Preloader\";\nimport Navbar from \"./Components/Navbar/Navbar\";\nimport 'antd/dist/antd.css';\nimport {Layout, Menu, Button} from 'antd';\nimport {\n    MenuUnfoldOutlined,\n    MenuFoldOutlined,\n    UserOutlined,\n    VideoCameraOutlined,\n    FormOutlined,\n    TeamOutlined,\n    UploadOutlined,\n} from '@ant-design/icons';\nimport s from \"./Components/Navbar/Navbar.module.css\";\nimport {logout} from \"./Redux/auth-reducer\";\nimport ProfileStatusWithHooks from \"./Components/Profile/MyPosts/ProfileInfo/ProfileStatusWithHooks\";\n\n\nconst {Header, Sider, Content} = Layout;\n\nclass App extends React.Component {\n    state = {\n        collapsed: false,\n        size: 'large',\n    };\n\n    toggle = () => {\n        this.setState({\n            collapsed: !this.state.collapsed,\n        });\n    };\n    catchAllUnhandledError = () => {\n        alert(\"Some Error\");\n    }\n\n    componentDidMount() {\n        this.props.initializeApp();\n        window.addEventListener(\"unhandledrejection\", this.catchAllUnhandledError);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"unhandledrejection\", this.catchAllUnhandledError);\n    }\n\n    render() {\n        const {size} = this.state;\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n        return <>\n            <Layout>\n                <Sider trigger={null} collapsible collapsed={this.state.collapsed}>\n                    <div className=\"logo\"/>\n                    <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\n                        <Menu.Item key=\"1\" icon={<UserOutlined/>}>\n                            <NavLink to=\"/profile\" activeClassName={s.active}>Профиль</NavLink>\n                        </Menu.Item>\n                        <Menu.Item key=\"2\" icon={<FormOutlined/>}>\n                            <NavLink to=\"/dialogs\" activeClassName={s.active}>Сообщения</NavLink>\n                        </Menu.Item>\n                        <Menu.Item key=\"3\" icon={<TeamOutlined/>}>\n                            <NavLink to=\"/users\" activeClassName={s.active}> Пользователи</NavLink>\n                        </Menu.Item>\n\n                    </Menu>\n                </Sider>\n                <Layout className=\"site-layout\">\n                    <Header className=\"site-layout-background\" style={{padding: 0}}>\n                        <div className=\"auth-block\"> {this.props.isAuth ?\n                            <div> {this.props.login} - <Button onClick={this.props.logout}>\n                                Logout</Button></div>\n                            : <NavLink to={'/login'}>Login</NavLink>}\n                        </div>\n                        {React.createElement(this.state.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined, {\n                            className: 'trigger',\n                            onClick: this.toggle,\n                        })}\n\n                    </Header>\n                    <Content\n                        className=\"site-layout-background\"\n                        style={{\n                            margin: '24px 16px',\n                            padding: 24,\n                            minHeight: 280,\n                        }}\n                    >\n                        <Switch>\n                            <Route path='/' exact><Redirect to='/profile'/></Route>\n                            <Route path='/dialogs' render={() => <DialogsContainer/>}/>\n                            <Route path='/profile/:userID?' render={() => <ProfileContainer/>}/>\n                            <Route path='/news' render={() => <News/>}/>\n                            <Route path='/music' render={() => <Music/>}/>\n                            <Route path='/settings' render={() => <Settings/>}/>\n                            <Route path='/users' render={() => <UsersContainer/>}/>\n                            <Route path='/login' render={() => <LoginContainer/>}/>\n                            <Route path='*' render={() => <div>404 NOT FOUND</div>}/>\n                        </Switch>\n                    </Content>\n                </Layout>\n            </Layout>\n\n        </>\n\n\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized,\n    login: state.authReducer.login,\n    isAuth: state.authReducer.isAuth,\n    authUserProfile: state.authReducer.authUserProfile\n})\n\nexport default compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp, logout}))(App);","\r\nlet initialState ={\r\n    friendName:[\r\n        {friendsName: \"Diana\"},\r\n        {friendsName: \"Ihor\"},\r\n        {friendsName: \"Ruslan\"}\r\n    ]\r\n}\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n    return state;\r\n}\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport messagesReducer from \"./messages-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddlware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet redusers = combineReducers({\r\n   profilePage: profileReducer,\r\n    messagesPage: messagesReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    authReducer: authReducer,\r\n    app: appReducer,\r\n    form: formReducer,\r\n});\r\n\r\nlet store = createStore(redusers, applyMiddleware(thunkMiddlware));\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from \"./Redux/redux-store\";\nimport {BrowserRouter, HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport {reduxForm} from \"redux-form\";\n\n\nreduxForm( ReactDOM.render(\n    <HashRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </HashRouter>,\n    document.getElementById('root')\n))\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1BCBQ\",\"item\":\"Navbar_item__3RZJI\",\"active\":\"Navbar_active__3bnlt\",\"navbar\":\"Navbar_navbar__2QnsP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"discriptionBlock\":\"ProfileInfo_discriptionBlock__18aui\",\"largeUserPhoto\":\"ProfileInfo_largeUserPhoto__2cOi9\",\"photoUpload\":\"ProfileInfo_photoUpload__oxH0y\",\"editProfile\":\"ProfileInfo_editProfile__3Q2Nj\",\"contacts\":\"ProfileInfo_contacts___CT2U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3d0hk\"};"],"sourceRoot":""}